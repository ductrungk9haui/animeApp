Index: app/src/main/res/layout/fragment_recentlysub.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout android:orientation=\"vertical\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <include\r\n        android:id=\"@+id/shimmer_view_container\"\r\n        layout=\"@layout/layout_dimmer_movie\"\r\n        tools:visibility=\"gone\" />\r\n    <RelativeLayout\r\n        android:layout_below=\"@+id/shimmer_view_container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@+id/adView\">\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout\r\n                android:id=\"@+id/swipe_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/recyclerView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:scrollbars=\"vertical\"\r\n                    android:scrollingCache=\"true\"\r\n                    tools:listitem=\"@layout/card_reply\"\r\n                    android:paddingTop=\"70dp\"\r\n                    android:clipToPadding=\"false\"/>\r\n\r\n            </tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout>\r\n\r\n        </LinearLayout>\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/item_progress_bar\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:elevation=\"5dp\"\r\n            android:padding=\"5dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:visibility=\"gone\" />\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/adView\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n    <com.appodeal.ads.BannerView\r\n        android:id=\"@+id/appodealBannerView_fragment_recentlysub\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:focusable=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_recentlysub.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/fragment_recentlysub.xml	(date 1612172666326)
@@ -16,6 +16,7 @@
         android:layout_above="@+id/adView">
 
 
+
         <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
@@ -69,4 +70,21 @@
         android:focusable="true"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"/>
+
+    <RelativeLayout
+        android:id="@+id/admob_native_ad_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_gravity="center"
+        android:gravity="center">
+
+        <com.google.android.ads.nativetemplates.TemplateView
+            android:id="@+id/admob_nativead_template"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:gnt_template_type="@layout/gnt_small_template_view"
+            android:visibility="gone"/>
+
+    </RelativeLayout>
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp.fragments;\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.widget.NestedScrollView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProviders;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.appodeal.ads.Appodeal;\r\nimport com.facebook.shimmer.ShimmerFrameLayout;\r\nimport com.github.islamkhsh.CardSliderViewPager;\r\nimport com.ixidev.gdpr.GDPRChecker;\r\nimport com.viewpagerindicator.CirclePageIndicator;\r\nimport com.viewpagerindicator.LinePageIndicator;\r\nimport com.viewpagerindicator.TabPageIndicator;\r\nimport com.viewpagerindicator.TitlePageIndicator;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Timer;\r\n\r\nimport butterknife.BindView;\r\nimport butterknife.ButterKnife;\r\nimport butterknife.OnClick;\r\nimport butterknife.Unbinder;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Retrofit;\r\nimport tvseries.koreandramaengsub.freemovieapp.Config;\r\nimport tvseries.koreandramaengsub.freemovieapp.ItemMovieActivity;\r\nimport tvseries.koreandramaengsub.freemovieapp.ItemSeriesActivity;\r\nimport tvseries.koreandramaengsub.freemovieapp.MainActivity;\r\nimport tvseries.koreandramaengsub.freemovieapp.R;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.ContinueWatchingAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.CountryAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.GenreAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.GenreHomeAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.HomePageAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.SliderAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingViewModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.CommonModels;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.GenreModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.AllCountry;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.AllGenre;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.FeaturesGenreAndMovie;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.HomeContent;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.LatestMovie;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.LatestTvseries;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.Slider;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.TopviewTvseries;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.Video;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.RetrofitClient;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.HomeContentApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AdsConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Constants;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.NetworkInst;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;\r\nimport tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout;\r\n\r\n\r\npublic class HomeFragment extends Fragment {\r\n    @BindView(R.id.adView)\r\n    RelativeLayout mAdView;\r\n    @BindView(R.id.adView1)\r\n    RelativeLayout mAdView1;\r\n    @BindView(R.id.shimmer_view_container)\r\n    ShimmerFrameLayout mShimmerLayout;\r\n    @BindView(R.id.swipe_layout)\r\n    SwipeRefreshLayout mSwipeRefreshLayout;\r\n    @BindView(R.id.scrollView)\r\n    NestedScrollView mScrollView;\r\n    @BindView(R.id.slider_layout)\r\n    View mSliderLayout;\r\n    @BindView(R.id.genre_rv)\r\n    RecyclerView mGenreRv;\r\n    @BindView(R.id.country_rv)\r\n    RecyclerView mCountryRv;\r\n    @BindView(R.id.genre_layout)\r\n    RelativeLayout mGenreLayout;\r\n    @BindView(R.id.country_layout)\r\n    RelativeLayout mCountryLayout;\r\n    @BindView(R.id.c_viewPager)\r\n    CardSliderViewPager mCViewPager;\r\n    @BindView(R.id.recyclerView)\r\n    RecyclerView mRecyclerViewMovie;\r\n    @BindView(R.id.recyclerViewTvSeries)\r\n    RecyclerView mRecyclerViewTvSeries;\r\n    @BindView(R.id.recyclerView_by_genre)\r\n    RecyclerView mRecyclerViewGenre;\r\n    @BindView(R.id.recyclerViewTopviewTvSeries)\r\n    RecyclerView mRecyclerViewTopviewTvSeries;\r\n    @BindView(R.id.title_pager_indicator)\r\n    LinePageIndicator mPagerIndicator;\r\n    @BindView(R.id.continueWatchingLayout)\r\n    View continueWatchingLayout;\r\n    @BindView(R.id.recyclerViewContinueWatching)\r\n    RecyclerView recyclerViewContinueWatching;\r\n\r\n    private ArrayList<CommonModels> listSlider = new ArrayList<>();\r\n    private Timer timer;\r\n    private GenreAdapter genreAdapter;\r\n    private CountryAdapter countryAdapter;\r\n    private HomePageAdapter adapterMovie, adapterSeries, adapterTopviewSeries;\r\n    private List<CommonModels> listMovie = new ArrayList<>();\r\n    private List<CommonModels> listTv = new ArrayList<>();\r\n    private List<CommonModels> listSeries = new ArrayList<>();\r\n    private List<CommonModels> listTopViewSeries = new ArrayList<>();\r\n    private List<CommonModels> genreList = new ArrayList<>();\r\n    private List<CommonModels> countryList = new ArrayList<>();\r\n    private List<GenreModel> listGenre = new ArrayList<>();\r\n    private GenreHomeAdapter genreHomeAdapter;\r\n    private MainActivity mActivity;\r\n    private DatabaseHelper db = new DatabaseHelper(getContext());\r\n    private ContinueWatchingViewModel continueWatchingViewModel;\r\n    Unbinder mUnbinder;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        mActivity = (MainActivity) getActivity();\r\n        mUnbinder = ButterKnife.bind(this, view);\r\n        mActivity.setTitle(getResources().getString(R.string.home));\r\n        mSwipeRefreshLayout.setToolbar(mActivity.getToolbar());\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        db = new DatabaseHelper(getContext());\r\n\r\n        if (db.getConfigurationData().getAppConfig().getGenreVisible()) {\r\n            mGenreLayout.setVisibility(View.VISIBLE);\r\n        }\r\n        if (db.getConfigurationData().getAppConfig().getCountryVisible()) {\r\n            mCountryLayout.setVisibility(View.VISIBLE);\r\n        }\r\n        //----init timer slider--------------------\r\n        timer = new Timer();\r\n        // --- genre recycler view ---------\r\n        mGenreRv.setLayoutManager(new LinearLayoutManager(mActivity, RecyclerView.HORIZONTAL, false));\r\n        mGenreRv.setHasFixedSize(true);\r\n        mGenreRv.setNestedScrollingEnabled(false);\r\n        genreAdapter = new GenreAdapter(getActivity(), genreList, \"genre\", \"home\");\r\n        mGenreRv.setAdapter(genreAdapter);\r\n\r\n        // --- country recycler view ---------\r\n        mCountryRv.setLayoutManager(new LinearLayoutManager(mActivity, RecyclerView.HORIZONTAL, false));\r\n        mCountryRv.setHasFixedSize(true);\r\n        mCountryRv.setNestedScrollingEnabled(false);\r\n        countryAdapter = new CountryAdapter(getActivity(), countryList, \"home\");\r\n        mCountryRv.setAdapter(countryAdapter);\r\n\r\n        //----featured tv recycler view-----------------\r\n//        recyclerViewTv = view.findViewById(R.id.recyclerViewTv);\r\n//        recyclerViewTv.setLayoutManager(new LinearLayoutManager(activity, LinearLayoutManager.HORIZONTAL, false));\r\n//        recyclerViewTv.setHasFixedSize(true);\r\n//        recyclerViewTv.setNestedScrollingEnabled(false);\r\n//        adapterTv = new LiveTvHomeAdapter(getContext(), listTv, \"MainActivity\");\r\n//        recyclerViewTv.setAdapter(adapterTv);\r\n\r\n        //----movie's recycler view-----------------\r\n        mRecyclerViewMovie.setLayoutManager(new LinearLayoutManager(mActivity, LinearLayoutManager.HORIZONTAL, false));\r\n        mRecyclerViewMovie.setHasFixedSize(true);\r\n        mRecyclerViewMovie.setNestedScrollingEnabled(false);\r\n        adapterMovie = new HomePageAdapter(getContext(), listMovie);\r\n        mRecyclerViewMovie.setAdapter(adapterMovie);\r\n\r\n        //----series's recycler view-----------------\r\n        mRecyclerViewTvSeries.setLayoutManager(new LinearLayoutManager(mActivity, LinearLayoutManager.HORIZONTAL, false));\r\n        mRecyclerViewTvSeries.setHasFixedSize(true);\r\n        mRecyclerViewTvSeries.setNestedScrollingEnabled(false);\r\n        adapterSeries = new HomePageAdapter(getActivity(), listSeries);\r\n        mRecyclerViewTvSeries.setAdapter(adapterSeries);\r\n\r\n        //----topview series's recycler view-----------------\r\n        mRecyclerViewTopviewTvSeries.setLayoutManager(new LinearLayoutManager(mActivity, LinearLayoutManager.HORIZONTAL, false));\r\n        mRecyclerViewTopviewTvSeries.setHasFixedSize(true);\r\n        mRecyclerViewTopviewTvSeries.setNestedScrollingEnabled(false);\r\n        adapterTopviewSeries = new HomePageAdapter(getActivity(), listTopViewSeries);\r\n        mRecyclerViewTopviewTvSeries.setAdapter(adapterTopviewSeries);\r\n\r\n\r\n        //----genre's recycler view--------------------\r\n        mRecyclerViewGenre.setLayoutManager(new LinearLayoutManager(getContext()));\r\n        mRecyclerViewGenre.setHasFixedSize(true);\r\n        mRecyclerViewGenre.setNestedScrollingEnabled(false);\r\n        genreHomeAdapter = new GenreHomeAdapter(getContext(), listGenre);\r\n        mRecyclerViewGenre.setAdapter(genreHomeAdapter);\r\n\r\n        mShimmerLayout.startShimmer();\r\n\r\n        if (new NetworkInst(getContext()).isNetworkAvailable()) {\r\n\r\n            getHomeContent();\r\n\r\n        } else {\r\n            mShimmerLayout.stopShimmer();\r\n            mShimmerLayout.setVisibility(View.GONE);\r\n            mActivity.setFailure(true, getString(R.string.no_internet));\r\n            mScrollView.setVisibility(View.GONE);\r\n        }\r\n\r\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n               /* mRecyclerViewMovie.removeAllViews();\r\n//                recyclerViewTv.removeAllViews();\r\n                mRecyclerViewTvSeries.removeAllViews();\r\n                mRecyclerViewTopviewTvSeries.removeAllViews();\r\n                mRecyclerViewGenre.removeAllViews();\r\n                mGenreRv.removeAllViews();\r\n                mCountryRv.removeAllViews();*/\r\n\r\n                genreList.clear();\r\n                countryList.clear();\r\n                listMovie.clear();\r\n                listSeries.clear();\r\n                listTopViewSeries.clear();\r\n                listSlider.clear();\r\n                listTv.clear();\r\n                listGenre.clear();\r\n\r\n\r\n                if (new NetworkInst(getContext()).isNetworkAvailable()) {\r\n\r\n                    getHomeContent();\r\n\r\n                } else {\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    mActivity.setFailure(true, getString(R.string.no_internet));\r\n                    mScrollView.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        mScrollView.setOnScrollChangeListener(new NestedScrollView.OnScrollChangeListener() {\r\n            @Override\r\n            public void onScrollChange(NestedScrollView v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {\r\n                if (scrollY < oldScrollY) { // up\r\n                    mActivity.animateSearchBar(false);\r\n                }\r\n                if (scrollY > oldScrollY) { // down\r\n                    mActivity.animateSearchBar(true);\r\n                }\r\n            }\r\n        });\r\n        /*----continue Watching view----*/\r\n        continueWatchingViewModel = ViewModelProviders.of(getActivity()).get(ContinueWatchingViewModel.class);\r\n        continueWatchingViewModel.getAllContents().observe(getActivity(), new Observer<List<ContinueWatchingModel>>() {\r\n            @Override\r\n            public void onChanged(List<ContinueWatchingModel> items) {\r\n                if (continueWatchingLayout == null) return;\r\n                if (items.size() > 0) {\r\n                    Collections.reverse(items);\r\n                    continueWatchingLayout.setVisibility(View.VISIBLE);\r\n                    ContinueWatchingAdapter adapter = new ContinueWatchingAdapter(getContext(), items);\r\n                    recyclerViewContinueWatching.setLayoutManager(new LinearLayoutManager(mActivity, RecyclerView.HORIZONTAL, false));\r\n                    recyclerViewContinueWatching.setHasFixedSize(true);\r\n                    recyclerViewContinueWatching.setNestedScrollingEnabled(false);\r\n                    recyclerViewContinueWatching.setAdapter(adapter);\r\n\r\n                } else {\r\n                    recyclerViewContinueWatching.removeAllViews();\r\n                    continueWatchingLayout.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n        getAdDetails();\r\n    }\r\n\r\n\r\n    private void getHomeContent() {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        HomeContentApi api = retrofit.create(HomeContentApi.class);\r\n        Call<HomeContent> call = api.getHomeContent(Config.API_KEY);\r\n        call.enqueue(new Callback<HomeContent>() {\r\n            @Override\r\n            public void onResponse(Call<HomeContent> call, retrofit2.Response<HomeContent> response) {\r\n                if (response.code() == 200) {\r\n                    if (mSwipeRefreshLayout == null) {\r\n                        return;\r\n                    }\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mScrollView.setVisibility(View.VISIBLE);\r\n                    mActivity.setFailure(false);\r\n\r\n                    //slider data\r\n                    Slider slider = response.body().getSlider();\r\n                    if (slider.getSliderType().equalsIgnoreCase(\"disable\")) {\r\n                        mSliderLayout.setVisibility(View.GONE);\r\n                    } else if (slider.getSliderType().equalsIgnoreCase(\"movie\")) {\r\n\r\n                    } else if (slider.getSliderType().equalsIgnoreCase(\"image\")) {\r\n\r\n                    }\r\n\r\n                    SliderAdapter sliderAdapter = new SliderAdapter(slider.getSlide());\r\n                    mCViewPager.setAdapter(sliderAdapter);\r\n                    mPagerIndicator.setViewPager(mCViewPager);\r\n                    sliderAdapter.notifyDataSetChanged();\r\n                    mPagerIndicator.notifyDataSetChanged();\r\n\r\n                    //genre data\r\n                    if (db.getConfigurationData().getAppConfig().getGenreVisible()) {\r\n                        for (int i = 0; i < response.body().getAllGenre().size(); i++) {\r\n                            AllGenre genre = response.body().getAllGenre().get(i);\r\n                            CommonModels models = new CommonModels();\r\n                            models.setId(genre.getGenreId());\r\n                            models.setTitle(genre.getName());\r\n                            models.setImageUrl(genre.getImageUrl());\r\n                            genreList.add(models);\r\n                        }\r\n                        genreAdapter.notifyDataSetChanged();\r\n                    }\r\n\r\n                    //country data\r\n                    if (db.getConfigurationData().getAppConfig().getCountryVisible()) {\r\n                        for (int i = 0; i < response.body().getAllCountry().size(); i++) {\r\n                            AllCountry country = response.body().getAllCountry().get(i);\r\n                            CommonModels models = new CommonModels();\r\n                            models.setId(country.getCountryId());\r\n                            models.setTitle(country.getName());\r\n                            models.setImageUrl(country.getImageUrl());\r\n                            countryList.add(models);\r\n                        }\r\n                        countryAdapter.notifyDataSetChanged();\r\n                    }\r\n\r\n                    //tv channel data\r\n//                     for (int i = 0; i < response.body().getFeaturedTvChannel().size(); i++){\r\n//                         FeaturedTvChannel tvChannel = response.body().getFeaturedTvChannel().get(i);\r\n//                         CommonModels models = new CommonModels();\r\n//                         models.setImageUrl(tvChannel.getPosterUrl());\r\n//                         models.setTitle(tvChannel.getTvName());\r\n//                         models.setVideoType(\"tv\");\r\n//                         models.setId(tvChannel.getLiveTvId());\r\n//                         models.setIsPaid(tvChannel.getIsPaid());\r\n//                         listTv.add(models);\r\n//                     }\r\n//                     adapterTv.notifyDataSetChanged();\r\n\r\n                    //latest movies data\r\n                    for (int i = 0; i < response.body().getLatestMovies().size(); i++) {\r\n                        LatestMovie movie = response.body().getLatestMovies().get(i);\r\n                        CommonModels models = new CommonModels();\r\n                        models.setImageUrl(movie.getThumbnailUrl());\r\n                        models.setTitle(movie.getTitle());\r\n                        models.setVideoType(\"movie\");\r\n                        models.setReleaseDate(movie.getRelease());\r\n                        models.setQuality(movie.getVideoQuality());\r\n                        models.setId(movie.getVideosId());\r\n                        models.setIsPaid(movie.getIsPaid());\r\n                        listMovie.add(models);\r\n                    }\r\n                    adapterMovie.notifyDataSetChanged();\r\n\r\n                    //latest tv series\r\n                    for (int i = 0; i < response.body().getLatestTvseries().size(); i++) {\r\n                        LatestTvseries tvSeries = response.body().getLatestTvseries().get(i);\r\n                        CommonModels models = new CommonModels();\r\n                        models.setImageUrl(tvSeries.getThumbnailUrl());\r\n                        models.setTitle(tvSeries.getTitle());\r\n                        models.setVideoType(\"tvseries\");\r\n                        models.setReleaseDate(tvSeries.getRelease());\r\n                        models.setQuality(tvSeries.getVideoQuality());\r\n                        models.setId(tvSeries.getVideosId());\r\n                        models.setIsPaid(tvSeries.getIsPaid());\r\n                        listSeries.add(models);\r\n                    }\r\n                    adapterSeries.notifyDataSetChanged();\r\n\r\n                    //topview\r\n                    for (int i = 0; i < response.body().getTopviewTvseries().size(); i++) {\r\n                        TopviewTvseries topviewtvSeries = response.body().getTopviewTvseries().get(i);\r\n                        CommonModels models = new CommonModels();\r\n                        models.setImageUrl(topviewtvSeries.getThumbnailUrl());\r\n                        models.setTitle(topviewtvSeries.getTitle());\r\n                        models.setVideoType(\"tvseries\");\r\n                        models.setReleaseDate(topviewtvSeries.getRelease());\r\n                        models.setQuality(topviewtvSeries.getVideoQuality());\r\n                        models.setId(topviewtvSeries.getVideosId());\r\n                        models.setIsPaid(topviewtvSeries.getIsPaid());\r\n                        listTopViewSeries.add(models);\r\n                    }\r\n                    adapterTopviewSeries.notifyDataSetChanged();\r\n\r\n                    //get data by genre\r\n                    for (int i = 0; i < response.body().getFeaturesGenreAndMovie().size(); i++) {\r\n                        FeaturesGenreAndMovie genreAndMovie = response.body().getFeaturesGenreAndMovie().get(i);\r\n                        GenreModel models = new GenreModel();\r\n\r\n                        models.setName(genreAndMovie.getName());\r\n                        models.setId(genreAndMovie.getGenreId());\r\n                        List<CommonModels> listGenreMovie = new ArrayList<>();\r\n                        for (int j = 0; j < genreAndMovie.getVideos().size(); j++) {\r\n                            Video video = genreAndMovie.getVideos().get(j);\r\n                            CommonModels commonModels = new CommonModels();\r\n\r\n                            commonModels.setId(video.getVideosId());\r\n                            commonModels.setTitle(video.getTitle());\r\n                            commonModels.setIsPaid(video.getIsPaid());\r\n\r\n                            if (video.getIsTvseries().equals(\"0\")) {\r\n                                commonModels.setVideoType(\"movie\");\r\n                            } else {\r\n                                commonModels.setVideoType(\"tvseries\");\r\n                            }\r\n\r\n                            commonModels.setReleaseDate(video.getRelease());\r\n                            commonModels.setQuality(video.getVideoQuality());\r\n                            commonModels.setImageUrl(video.getThumbnailUrl());\r\n\r\n                            listGenreMovie.add(commonModels);\r\n                        }\r\n                        models.setList(listGenreMovie);\r\n\r\n                        listGenre.add(models);\r\n                        genreHomeAdapter.notifyDataSetChanged();\r\n                    }\r\n\r\n                } else {\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mActivity.setFailure(false);\r\n                    mScrollView.setVisibility(View.GONE);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<HomeContent> call, Throwable t) {\r\n                mSwipeRefreshLayout.setRefreshing(false);\r\n                mShimmerLayout.stopShimmer();\r\n                mShimmerLayout.setVisibility(View.GONE);\r\n                mActivity.setFailure(false);\r\n                mScrollView.setVisibility(View.GONE);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void loadAd() {\r\n        AdsConfig adsConfig = new DatabaseHelper(getContext()).getConfigurationData().getAdsConfig();\r\n        if (PreferenceUtils.isLoggedIn(mActivity) && PreferenceUtils.isActivePlan(mActivity))\r\n            return;\r\n        if (adsConfig.getAdsEnable().equals(\"1\")) {\r\n            if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                BannerAds.ShowAdmobBannerAds(getContext(), mAdView);\r\n                BannerAds.ShowAdmobBannerAds(getContext(), mAdView1);\r\n\r\n            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {\r\n                // BannerAds.showStartAppBanner(getContext(), adView);\r\n                Appodeal.setBannerViewId(R.id.appodealBannerView1_home);\r\n                Appodeal.show(mActivity, Appodeal.BANNER_VIEW);\r\n            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {\r\n                BannerAds.showFANBanner(getContext(), mAdView);\r\n                BannerAds.showFANBanner(getContext(), mAdView1);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        mUnbinder.unbind();\r\n    }\r\n\r\n    private void getAdDetails() {\r\n        DatabaseHelper db = new DatabaseHelper(getContext());\r\n        AdsConfig adsConfig = db.getConfigurationData().getAdsConfig();\r\n\r\n        new GDPRChecker()\r\n                .withContext(mActivity)\r\n                .withPrivacyUrl(Config.TERMS_URL) // your privacy url\r\n                .withPublisherIds(adsConfig.getAdmobAppId()) // your admob account Publisher id\r\n                //.withTestMode(\"9424DF76F06983D1392E609FC074596C\") // remove this on real project\r\n                .check();\r\n\r\n        loadAd();\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        mShimmerLayout.startShimmer();\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n        mShimmerLayout.stopShimmer();\r\n        timer.cancel();\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n    @OnClick({R.id.btn_more_movie, R.id.movie_layout})\r\n    void onBtnMoreMovieClick() {\r\n        Intent intent = new Intent(getContext(), ItemMovieActivity.class);\r\n        intent.putExtra(\"title\", \"Movies\");\r\n        getActivity().startActivity(intent);\r\n    }\r\n\r\n    @OnClick({R.id.btn_more_series, R.id.btn_more_series1, R.id.last_anime_layout, R.id.top_anime_layout})\r\n    void onBtnMoreSeriesClick() {\r\n        Intent intent = new Intent(getContext(), ItemSeriesActivity.class);\r\n        intent.putExtra(\"title\", \"Last Anime Series\");\r\n        getActivity().startActivity(intent);\r\n    }\r\n\r\n    @OnClick(R.id.continue_watching_clear_btn)\r\n    void onClearContinue() {\r\n        continueWatchingViewModel.deleteAllContent();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/HomeFragment.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/HomeFragment.java	(date 1612116073433)
@@ -6,21 +6,19 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
 import android.widget.RelativeLayout;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.core.widget.NestedScrollView;
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.Observer;
-import androidx.lifecycle.ViewModelProviders;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.appodeal.ads.Appodeal;
 import com.facebook.shimmer.ShimmerFrameLayout;
 import com.github.islamkhsh.CardSliderViewPager;
+import com.google.android.ads.nativetemplates.TemplateView;
 import com.ixidev.gdpr.GDPRChecker;
 import com.viewpagerindicator.CirclePageIndicator;
 import com.viewpagerindicator.LinePageIndicator;
@@ -28,7 +26,6 @@
 import com.viewpagerindicator.TitlePageIndicator;
 
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.List;
 import java.util.Timer;
 
@@ -44,15 +41,12 @@
 import tvseries.koreandramaengsub.freemovieapp.ItemSeriesActivity;
 import tvseries.koreandramaengsub.freemovieapp.MainActivity;
 import tvseries.koreandramaengsub.freemovieapp.R;
-import tvseries.koreandramaengsub.freemovieapp.adapters.ContinueWatchingAdapter;
 import tvseries.koreandramaengsub.freemovieapp.adapters.CountryAdapter;
 import tvseries.koreandramaengsub.freemovieapp.adapters.GenreAdapter;
 import tvseries.koreandramaengsub.freemovieapp.adapters.GenreHomeAdapter;
 import tvseries.koreandramaengsub.freemovieapp.adapters.HomePageAdapter;
 import tvseries.koreandramaengsub.freemovieapp.adapters.SliderAdapter;
 import tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;
-import tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingModel;
-import tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingViewModel;
 import tvseries.koreandramaengsub.freemovieapp.models.CommonModels;
 import tvseries.koreandramaengsub.freemovieapp.models.GenreModel;
 import tvseries.koreandramaengsub.freemovieapp.models.home_content.AllCountry;
@@ -71,46 +65,29 @@
 import tvseries.koreandramaengsub.freemovieapp.utils.NetworkInst;
 import tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;
 import tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;
+import tvseries.koreandramaengsub.freemovieapp.utils.ads.NativeAds;
 import tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout;
 
 
 public class HomeFragment extends Fragment {
-    @BindView(R.id.adView)
-    RelativeLayout mAdView;
-    @BindView(R.id.adView1)
-    RelativeLayout mAdView1;
-    @BindView(R.id.shimmer_view_container)
-    ShimmerFrameLayout mShimmerLayout;
-    @BindView(R.id.swipe_layout)
-    SwipeRefreshLayout mSwipeRefreshLayout;
-    @BindView(R.id.scrollView)
-    NestedScrollView mScrollView;
-    @BindView(R.id.slider_layout)
-    View mSliderLayout;
-    @BindView(R.id.genre_rv)
-    RecyclerView mGenreRv;
-    @BindView(R.id.country_rv)
-    RecyclerView mCountryRv;
-    @BindView(R.id.genre_layout)
-    RelativeLayout mGenreLayout;
-    @BindView(R.id.country_layout)
-    RelativeLayout mCountryLayout;
-    @BindView(R.id.c_viewPager)
-    CardSliderViewPager mCViewPager;
-    @BindView(R.id.recyclerView)
-    RecyclerView mRecyclerViewMovie;
-    @BindView(R.id.recyclerViewTvSeries)
-    RecyclerView mRecyclerViewTvSeries;
-    @BindView(R.id.recyclerView_by_genre)
-    RecyclerView mRecyclerViewGenre;
-    @BindView(R.id.recyclerViewTopviewTvSeries)
-    RecyclerView mRecyclerViewTopviewTvSeries;
-    @BindView(R.id.title_pager_indicator)
-    LinePageIndicator mPagerIndicator;
-    @BindView(R.id.continueWatchingLayout)
-    View continueWatchingLayout;
-    @BindView(R.id.recyclerViewContinueWatching)
-    RecyclerView recyclerViewContinueWatching;
+    @BindView(R.id.adView) RelativeLayout mAdView;
+    @BindView(R.id.adView1) RelativeLayout mAdView1;
+    @BindView(R.id.shimmer_view_container) ShimmerFrameLayout mShimmerLayout;
+    @BindView(R.id.swipe_layout) SwipeRefreshLayout mSwipeRefreshLayout;
+    @BindView(R.id.scrollView) NestedScrollView mScrollView;
+    @BindView(R.id.slider_layout) View mSliderLayout;
+    @BindView(R.id.genre_rv) RecyclerView mGenreRv;
+    @BindView(R.id.country_rv) RecyclerView mCountryRv;
+    @BindView(R.id.genre_layout) RelativeLayout mGenreLayout;
+    @BindView(R.id.country_layout) RelativeLayout mCountryLayout;
+    @BindView(R.id.admob_nativead_template) TemplateView admobNativeAdView;
+    @BindView(R.id.admob_nativead_template_1) TemplateView admobNativeAdView_1;
+    @BindView(R.id.c_viewPager) CardSliderViewPager mCViewPager;
+    @BindView(R.id.recyclerView) RecyclerView mRecyclerViewMovie;
+    @BindView(R.id.recyclerViewTvSeries) RecyclerView mRecyclerViewTvSeries;
+    @BindView(R.id.recyclerView_by_genre) RecyclerView mRecyclerViewGenre;
+    @BindView(R.id.recyclerViewTopviewTvSeries) RecyclerView mRecyclerViewTopviewTvSeries;
+    @BindView(R.id.title_pager_indicator) LinePageIndicator mPagerIndicator;
 
     private ArrayList<CommonModels> listSlider = new ArrayList<>();
     private Timer timer;
@@ -127,7 +104,6 @@
     private GenreHomeAdapter genreHomeAdapter;
     private MainActivity mActivity;
     private DatabaseHelper db = new DatabaseHelper(getContext());
-    private ContinueWatchingViewModel continueWatchingViewModel;
     Unbinder mUnbinder;
 
     @Nullable
@@ -198,6 +174,7 @@
         mRecyclerViewTopviewTvSeries.setAdapter(adapterTopviewSeries);
 
 
+
         //----genre's recycler view--------------------
         mRecyclerViewGenre.setLayoutManager(new LinearLayoutManager(getContext()));
         mRecyclerViewGenre.setHasFixedSize(true);
@@ -214,7 +191,7 @@
         } else {
             mShimmerLayout.stopShimmer();
             mShimmerLayout.setVisibility(View.GONE);
-            mActivity.setFailure(true, getString(R.string.no_internet));
+            mActivity.setFailure(true,getString(R.string.no_internet));
             mScrollView.setVisibility(View.GONE);
         }
 
@@ -247,7 +224,7 @@
                     mShimmerLayout.stopShimmer();
                     mShimmerLayout.setVisibility(View.GONE);
                     mSwipeRefreshLayout.setRefreshing(false);
-                    mActivity.setFailure(true, getString(R.string.no_internet));
+                    mActivity.setFailure(true,getString(R.string.no_internet));
                     mScrollView.setVisibility(View.GONE);
                 }
             }
@@ -265,28 +242,7 @@
                 }
             }
         });
-        /*----continue Watching view----*/
-        continueWatchingViewModel = ViewModelProviders.of(getActivity()).get(ContinueWatchingViewModel.class);
-        continueWatchingViewModel.getAllContents().observe(getActivity(), new Observer<List<ContinueWatchingModel>>() {
-            @Override
-            public void onChanged(List<ContinueWatchingModel> items) {
-                if (continueWatchingLayout == null) return;
-                if (items.size() > 0) {
-                    Collections.reverse(items);
-                    continueWatchingLayout.setVisibility(View.VISIBLE);
-                    ContinueWatchingAdapter adapter = new ContinueWatchingAdapter(getContext(), items);
-                    recyclerViewContinueWatching.setLayoutManager(new LinearLayoutManager(mActivity, RecyclerView.HORIZONTAL, false));
-                    recyclerViewContinueWatching.setHasFixedSize(true);
-                    recyclerViewContinueWatching.setNestedScrollingEnabled(false);
-                    recyclerViewContinueWatching.setAdapter(adapter);
-
-                } else {
-                    recyclerViewContinueWatching.removeAllViews();
-                    continueWatchingLayout.setVisibility(View.GONE);
-                }
-            }
-        });
-
+//TRUNG
         getAdDetails();
     }
 
@@ -298,10 +254,10 @@
         call.enqueue(new Callback<HomeContent>() {
             @Override
             public void onResponse(Call<HomeContent> call, retrofit2.Response<HomeContent> response) {
-                if (response.code() == 200) {
-                    if (mSwipeRefreshLayout == null) {
-                        return;
-                    }
+                 if (response.code() == 200){
+                     if(mSwipeRefreshLayout ==null){
+                         return;
+                     }
                     mSwipeRefreshLayout.setRefreshing(false);
                     mShimmerLayout.stopShimmer();
                     mShimmerLayout.setVisibility(View.GONE);
@@ -312,9 +268,9 @@
                     Slider slider = response.body().getSlider();
                     if (slider.getSliderType().equalsIgnoreCase("disable")) {
                         mSliderLayout.setVisibility(View.GONE);
-                    } else if (slider.getSliderType().equalsIgnoreCase("movie")) {
+                    }else if (slider.getSliderType().equalsIgnoreCase("movie")){
 
-                    } else if (slider.getSliderType().equalsIgnoreCase("image")) {
+                    }else if (slider.getSliderType().equalsIgnoreCase("image")){
 
                     }
 
@@ -322,35 +278,34 @@
                     mCViewPager.setAdapter(sliderAdapter);
                     mPagerIndicator.setViewPager(mCViewPager);
                     sliderAdapter.notifyDataSetChanged();
-                    mPagerIndicator.notifyDataSetChanged();
 
                     //genre data
-                    if (db.getConfigurationData().getAppConfig().getGenreVisible()) {
-                        for (int i = 0; i < response.body().getAllGenre().size(); i++) {
-                            AllGenre genre = response.body().getAllGenre().get(i);
-                            CommonModels models = new CommonModels();
-                            models.setId(genre.getGenreId());
-                            models.setTitle(genre.getName());
-                            models.setImageUrl(genre.getImageUrl());
-                            genreList.add(models);
-                        }
-                        genreAdapter.notifyDataSetChanged();
-                    }
+                     if (db.getConfigurationData().getAppConfig().getGenreVisible()) {
+                         for (int i = 0; i < response.body().getAllGenre().size(); i++) {
+                             AllGenre genre = response.body().getAllGenre().get(i);
+                             CommonModels models = new CommonModels();
+                             models.setId(genre.getGenreId());
+                             models.setTitle(genre.getName());
+                             models.setImageUrl(genre.getImageUrl());
+                             genreList.add(models);
+                         }
+                         genreAdapter.notifyDataSetChanged();
+                     }
 
-                    //country data
-                    if (db.getConfigurationData().getAppConfig().getCountryVisible()) {
-                        for (int i = 0; i < response.body().getAllCountry().size(); i++) {
-                            AllCountry country = response.body().getAllCountry().get(i);
-                            CommonModels models = new CommonModels();
-                            models.setId(country.getCountryId());
-                            models.setTitle(country.getName());
-                            models.setImageUrl(country.getImageUrl());
-                            countryList.add(models);
-                        }
-                        countryAdapter.notifyDataSetChanged();
-                    }
+                     //country data
+                     if (db.getConfigurationData().getAppConfig().getCountryVisible()) {
+                         for (int i = 0; i < response.body().getAllCountry().size(); i++) {
+                             AllCountry country = response.body().getAllCountry().get(i);
+                             CommonModels models = new CommonModels();
+                             models.setId(country.getCountryId());
+                             models.setTitle(country.getName());
+                             models.setImageUrl(country.getImageUrl());
+                             countryList.add(models);
+                         }
+                         countryAdapter.notifyDataSetChanged();
+                     }
 
-                    //tv channel data
+                     //tv channel data
 //                     for (int i = 0; i < response.body().getFeaturedTvChannel().size(); i++){
 //                         FeaturedTvChannel tvChannel = response.body().getFeaturedTvChannel().get(i);
 //                         CommonModels models = new CommonModels();
@@ -363,92 +318,92 @@
 //                     }
 //                     adapterTv.notifyDataSetChanged();
 
-                    //latest movies data
-                    for (int i = 0; i < response.body().getLatestMovies().size(); i++) {
-                        LatestMovie movie = response.body().getLatestMovies().get(i);
-                        CommonModels models = new CommonModels();
-                        models.setImageUrl(movie.getThumbnailUrl());
-                        models.setTitle(movie.getTitle());
-                        models.setVideoType("movie");
-                        models.setReleaseDate(movie.getRelease());
-                        models.setQuality(movie.getVideoQuality());
-                        models.setId(movie.getVideosId());
-                        models.setIsPaid(movie.getIsPaid());
-                        listMovie.add(models);
-                    }
-                    adapterMovie.notifyDataSetChanged();
+                     //latest movies data
+                     for (int i = 0; i < response.body().getLatestMovies().size(); i++){
+                         LatestMovie movie = response.body().getLatestMovies().get(i);
+                         CommonModels models = new CommonModels();
+                         models.setImageUrl(movie.getThumbnailUrl());
+                         models.setTitle(movie.getTitle());
+                         models.setVideoType("movie");
+                         models.setReleaseDate(movie.getRelease());
+                         models.setQuality(movie.getVideoQuality());
+                         models.setId(movie.getVideosId());
+                         models.setIsPaid(movie.getIsPaid());
+                         listMovie.add(models);
+                     }
+                     adapterMovie.notifyDataSetChanged();
 
-                    //latest tv series
-                    for (int i = 0; i < response.body().getLatestTvseries().size(); i++) {
-                        LatestTvseries tvSeries = response.body().getLatestTvseries().get(i);
-                        CommonModels models = new CommonModels();
-                        models.setImageUrl(tvSeries.getThumbnailUrl());
-                        models.setTitle(tvSeries.getTitle());
-                        models.setVideoType("tvseries");
-                        models.setReleaseDate(tvSeries.getRelease());
-                        models.setQuality(tvSeries.getVideoQuality());
-                        models.setId(tvSeries.getVideosId());
-                        models.setIsPaid(tvSeries.getIsPaid());
-                        listSeries.add(models);
-                    }
-                    adapterSeries.notifyDataSetChanged();
+                     //latest tv series
+                     for (int i = 0; i < response.body().getLatestTvseries().size(); i++){
+                         LatestTvseries tvSeries = response.body().getLatestTvseries().get(i);
+                         CommonModels models = new CommonModels();
+                         models.setImageUrl(tvSeries.getThumbnailUrl());
+                         models.setTitle(tvSeries.getTitle());
+                         models.setVideoType("tvseries");
+                         models.setReleaseDate(tvSeries.getRelease());
+                         models.setQuality(tvSeries.getVideoQuality());
+                         models.setId(tvSeries.getVideosId());
+                         models.setIsPaid(tvSeries.getIsPaid());
+                         listSeries.add(models);
+                     }
+                     adapterSeries.notifyDataSetChanged();
 
-                    //topview
-                    for (int i = 0; i < response.body().getTopviewTvseries().size(); i++) {
-                        TopviewTvseries topviewtvSeries = response.body().getTopviewTvseries().get(i);
-                        CommonModels models = new CommonModels();
-                        models.setImageUrl(topviewtvSeries.getThumbnailUrl());
-                        models.setTitle(topviewtvSeries.getTitle());
-                        models.setVideoType("tvseries");
-                        models.setReleaseDate(topviewtvSeries.getRelease());
-                        models.setQuality(topviewtvSeries.getVideoQuality());
-                        models.setId(topviewtvSeries.getVideosId());
-                        models.setIsPaid(topviewtvSeries.getIsPaid());
-                        listTopViewSeries.add(models);
-                    }
-                    adapterTopviewSeries.notifyDataSetChanged();
+                     //topview
+                    for (int i = 0; i < response.body().getTopviewTvseries().size(); i++){
+                         TopviewTvseries topviewtvSeries = response.body().getTopviewTvseries().get(i);
+                         CommonModels models = new CommonModels();
+                         models.setImageUrl(topviewtvSeries.getThumbnailUrl());
+                         models.setTitle(topviewtvSeries.getTitle());
+                         models.setVideoType("tvseries");
+                         models.setReleaseDate(topviewtvSeries.getRelease());
+                         models.setQuality(topviewtvSeries.getVideoQuality());
+                         models.setId(topviewtvSeries.getVideosId());
+                         models.setIsPaid(topviewtvSeries.getIsPaid());
+                         listTopViewSeries.add(models);
+                     }
+                     adapterTopviewSeries.notifyDataSetChanged();
 
-                    //get data by genre
-                    for (int i = 0; i < response.body().getFeaturesGenreAndMovie().size(); i++) {
-                        FeaturesGenreAndMovie genreAndMovie = response.body().getFeaturesGenreAndMovie().get(i);
-                        GenreModel models = new GenreModel();
+                     //get data by genre
+                     for (int i = 0; i < response.body().getFeaturesGenreAndMovie().size(); i++){
+                         FeaturesGenreAndMovie genreAndMovie = response.body().getFeaturesGenreAndMovie().get(i);
+                         GenreModel models = new GenreModel();
 
-                        models.setName(genreAndMovie.getName());
-                        models.setId(genreAndMovie.getGenreId());
-                        List<CommonModels> listGenreMovie = new ArrayList<>();
-                        for (int j = 0; j < genreAndMovie.getVideos().size(); j++) {
-                            Video video = genreAndMovie.getVideos().get(j);
-                            CommonModels commonModels = new CommonModels();
+                         models.setName(genreAndMovie.getName());
+                         models.setId(genreAndMovie.getGenreId());
+                         List<CommonModels> listGenreMovie = new ArrayList<>();
+                         for (int j = 0; j < genreAndMovie.getVideos().size(); j++){
+                             Video video = genreAndMovie.getVideos().get(j);
+                             CommonModels commonModels = new CommonModels();
 
-                            commonModels.setId(video.getVideosId());
-                            commonModels.setTitle(video.getTitle());
-                            commonModels.setIsPaid(video.getIsPaid());
+                             commonModels.setId(video.getVideosId());
+                             commonModels.setTitle(video.getTitle());
+                             commonModels.setIsPaid(video.getIsPaid());
 
-                            if (video.getIsTvseries().equals("0")) {
-                                commonModels.setVideoType("movie");
-                            } else {
-                                commonModels.setVideoType("tvseries");
-                            }
+                             if (video.getIsTvseries().equals("0")) {
+                                 commonModels.setVideoType("movie");
+                             } else {
+                                 commonModels.setVideoType("tvseries");
+                             }
 
-                            commonModels.setReleaseDate(video.getRelease());
-                            commonModels.setQuality(video.getVideoQuality());
-                            commonModels.setImageUrl(video.getThumbnailUrl());
+                             commonModels.setReleaseDate(video.getRelease());
+                             commonModels.setQuality(video.getVideoQuality());
+                             commonModels.setImageUrl(video.getThumbnailUrl());
 
-                            listGenreMovie.add(commonModels);
-                        }
-                        models.setList(listGenreMovie);
+                             listGenreMovie.add(commonModels);
+                         }
+                         models.setList(listGenreMovie);
 
-                        listGenre.add(models);
-                        genreHomeAdapter.notifyDataSetChanged();
-                    }
+                         listGenre.add(models);
+                         genreHomeAdapter.notifyDataSetChanged();
+                     }
 
-                } else {
-                    mSwipeRefreshLayout.setRefreshing(false);
-                    mShimmerLayout.stopShimmer();
-                    mShimmerLayout.setVisibility(View.GONE);
-                    mActivity.setFailure(false);
-                    mScrollView.setVisibility(View.GONE);
-                }
+                }else {
+                     mSwipeRefreshLayout.setRefreshing(false);
+                     mShimmerLayout.stopShimmer();
+                     mShimmerLayout.setVisibility(View.GONE);
+                     mActivity.setFailure(false);
+                     mScrollView.setVisibility(View.GONE);
+                 }
 
             }
 
@@ -466,28 +421,55 @@
 
     private void loadAd() {
         AdsConfig adsConfig = new DatabaseHelper(getContext()).getConfigurationData().getAdsConfig();
-        if (PreferenceUtils.isLoggedIn(mActivity) && PreferenceUtils.isActivePlan(mActivity))
-            return;
-        if (adsConfig.getAdsEnable().equals("1")) {
-            if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {
-                BannerAds.ShowAdmobBannerAds(getContext(), mAdView);
-                BannerAds.ShowAdmobBannerAds(getContext(), mAdView1);
+        if (PreferenceUtils.isLoggedIn(mActivity)) {
+            if (!PreferenceUtils.isActivePlan(mActivity)) {
+                if (adsConfig.getAdsEnable().equals("1")) {
+
+                    if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {
+                        //BannerAds.ShowAdmobBannerAds(getContext(), mAdView);
+                       // BannerAds.ShowAdmobBannerAds(getContext(), mAdView1);
+
+                        admobNativeAdView.setVisibility(View.VISIBLE);
+                        NativeAds.showAdmobNativeAds(getActivity(), admobNativeAdView);
+
+                        admobNativeAdView_1.setVisibility(View.VISIBLE);
+                        NativeAds.showAdmobNativeAds(getActivity(), admobNativeAdView_1);
+
+                    } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {
+                        // BannerAds.showStartAppBanner(getContext(), adView);
+                        Appodeal.setBannerViewId(R.id.appodealBannerView1_home);
+                        Appodeal.show(mActivity, Appodeal.BANNER_VIEW);
+                    } else if(adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {
+                        BannerAds.showFANBanner(getContext(), mAdView);
+                        BannerAds.showFANBanner(getContext(), mAdView1);
+                    }
+                }
+            }
+        }else{
+            if (adsConfig.getAdsEnable().equals("1")) {
+
+                if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {
+                    BannerAds.ShowAdmobBannerAds(getContext(), mAdView);
+                    BannerAds.ShowAdmobBannerAds(getContext(), mAdView1);
 
-            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {
-                // BannerAds.showStartAppBanner(getContext(), adView);
-                Appodeal.setBannerViewId(R.id.appodealBannerView1_home);
-                Appodeal.show(mActivity, Appodeal.BANNER_VIEW);
-            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {
-                BannerAds.showFANBanner(getContext(), mAdView);
-                BannerAds.showFANBanner(getContext(), mAdView1);
-            }
-        }
-    }
+                } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {
+                    // BannerAds.showStartAppBanner(getContext(), adView);
+                    Appodeal.setBannerViewId(R.id.appodealBannerView1_home);
+                    Appodeal.show(mActivity, Appodeal.BANNER_VIEW);
+                } else if(adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {
+                    BannerAds.showFANBanner(getContext(), mAdView);
+                    BannerAds.showFANBanner(getContext(), mAdView1);
+                }
+            }
+        }
 
+    }
+
     @Override
     public void onDestroy() {
         super.onDestroy();
         mUnbinder.unbind();
+        NativeAds.releaseAdmobNativeAd();
     }
 
     private void getAdDetails() {
@@ -522,24 +504,16 @@
     public void onResume() {
         super.onResume();
     }
-
-    @OnClick({R.id.btn_more_movie, R.id.movie_layout})
-    void onBtnMoreMovieClick() {
+    @OnClick({R.id.btn_more_movie,R.id.movie_layout})
+    void onBtnMoreMovieClick(){
         Intent intent = new Intent(getContext(), ItemMovieActivity.class);
         intent.putExtra("title", "Movies");
         getActivity().startActivity(intent);
     }
-
-    @OnClick({R.id.btn_more_series, R.id.btn_more_series1, R.id.last_anime_layout, R.id.top_anime_layout})
-    void onBtnMoreSeriesClick() {
+    @OnClick({R.id.btn_more_series,R.id.btn_more_series1})
+    void onBtnMoreSeriesClick(){
         Intent intent = new Intent(getContext(), ItemSeriesActivity.class);
-        intent.putExtra("title", "Last Anime Series");
+        intent.putExtra("title", "TV Series");
         getActivity().startActivity(intent);
     }
-
-    @OnClick(R.id.continue_watching_clear_btn)
-    void onClearContinue() {
-        continueWatchingViewModel.deleteAllContent();
-    }
-
 }
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/DownFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp.fragments;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.facebook.shimmer.ShimmerFrameLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport butterknife.ButterKnife;\r\nimport butterknife.Unbinder;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Retrofit;\r\nimport tvseries.koreandramaengsub.freemovieapp.Config;\r\nimport tvseries.koreandramaengsub.freemovieapp.MainActivity;\r\nimport tvseries.koreandramaengsub.freemovieapp.R;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.CommonGridAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.CommonModels;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.home_content.Video;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.RetrofitClient;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.DownApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AdsConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ApiResources;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Constants;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.NetworkInst;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.SpacingItemDecoration;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Tools;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;\r\nimport tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout;\r\n\r\npublic class DownFragment extends Fragment {\r\n    @BindView(R.id.adView) RelativeLayout mAdView;\r\n    @BindView(R.id.item_progress_bar) ProgressBar mProgressBar;\r\n    @BindView(R.id.shimmer_view_container) ShimmerFrameLayout mShimmerLayout;\r\n    @BindView(R.id.swipe_layout) SwipeRefreshLayout mSwipeRefreshLayout;\r\n    @BindView(R.id.recyclerView) RecyclerView mRecyclerView;\r\n    Unbinder mUnbinder;\r\n    private CommonGridAdapter mAdapter;\r\n    private List<CommonModels> list = new ArrayList<>();\r\n    private ApiResources apiResources;\r\n\r\n    private String URL = null;\r\n    private boolean mIsLoading = false;\r\n    private int mPageCount = 1, checkPass = 0;\r\n    private MainActivity mActivity;\r\n    private static final int HIDE_THRESHOLD = 20;\r\n    private int mScrolledDistance = 0;\r\n    private boolean mControlsVisible = true;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_recentlysub, container, false);\r\n        mActivity = (MainActivity) getActivity();\r\n        mUnbinder = ButterKnife.bind(this,view);\r\n        mActivity.setTitle(\"Today Subtitles\");\r\n        mSwipeRefreshLayout.setToolbar(mActivity.getToolbar());\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        initComponent(view);\r\n    }\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        mUnbinder.unbind();\r\n    }\r\n    private void initComponent(View view) {\r\n        apiResources = new ApiResources();\r\n        mShimmerLayout.startShimmer();\r\n        mRecyclerView.setLayoutManager(new GridLayoutManager(getContext(), 3));\r\n        mRecyclerView.addItemDecoration(new SpacingItemDecoration(3, Tools.dpToPx(getActivity(), 0), true));\r\n        mRecyclerView.setHasFixedSize(true);\r\n        mRecyclerView.setNestedScrollingEnabled(false);\r\n        mAdapter = new CommonGridAdapter(getContext(), list);\r\n        mRecyclerView.setAdapter(mAdapter);\r\n\r\n        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n\r\n                if (!recyclerView.canScrollVertically(1) && !mIsLoading) {\r\n\r\n                    mActivity.setFailure(false);\r\n\r\n                    mPageCount = mPageCount + 1;\r\n                    mIsLoading = true;\r\n\r\n                    mProgressBar.setVisibility(View.VISIBLE);\r\n\r\n                    getData(mPageCount);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\r\n                super.onScrolled(recyclerView, dx, dy);\r\n\r\n                if (mScrolledDistance > HIDE_THRESHOLD && mControlsVisible) {\r\n                    mActivity.animateSearchBar(true);\r\n                    mControlsVisible = false;\r\n                    mScrolledDistance = 0;\r\n                } else if (mScrolledDistance < -HIDE_THRESHOLD && !mControlsVisible) {\r\n                    mActivity.animateSearchBar(false);\r\n                    mControlsVisible = true;\r\n                    mScrolledDistance = 0;\r\n                }\r\n\r\n                if ((mControlsVisible && dy > 0) || (!mControlsVisible && dy < 0)) {\r\n                    mScrolledDistance += dy;\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        if (new NetworkInst(getContext()).isNetworkAvailable()) {\r\n            getData(mPageCount);\r\n        } else {\r\n            mShimmerLayout.stopShimmer();\r\n            mShimmerLayout.setVisibility(View.GONE);\r\n            mActivity.setFailure(true,getResources().getString(R.string.no_internet));\r\n        }\r\n\r\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                mActivity.setFailure(false);\r\n                mPageCount = 1;\r\n                list.clear();\r\n                mRecyclerView.removeAllViews();\r\n                mAdapter.notifyDataSetChanged();\r\n                if (new NetworkInst(getContext()).isNetworkAvailable()) {\r\n                    getData(mPageCount);\r\n                } else {\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    mActivity.setFailure(true,getResources().getString(R.string.no_internet));\r\n                }\r\n            }\r\n        });\r\n\r\n        //getAdDetails(new ApiResources().getAdDetails());\r\n        loadAd();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    private void loadAd() {\r\n        AdsConfig adsConfig = new DatabaseHelper(getContext()).getConfigurationData().getAdsConfig();\r\n\r\n        if (PreferenceUtils.isLoggedIn(mActivity)) {\r\n            if (!PreferenceUtils.isActivePlan(mActivity)) {\r\n                if (adsConfig.getAdsEnable().equals(\"1\")) {\r\n\r\n                    if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                        BannerAds.ShowAdmobBannerAds(mActivity, mAdView);\r\n\r\n                    } else if (adsConfig.getMobileAdsNetwork().equals(Constants.START_APP)) {\r\n                        BannerAds.showAppodealBanner(mActivity, R.id.appodealBannerView_fragment_recentlysub);\r\n\r\n                    } else if (adsConfig.getMobileAdsNetwork().equals(Constants.NETWORK_AUDIENCE)) {\r\n                        BannerAds.showFANBanner(getContext(), mAdView);\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            if (adsConfig.getAdsEnable().equals(\"1\")) {\r\n\r\n                if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                    BannerAds.ShowAdmobBannerAds(mActivity, mAdView);\r\n\r\n                } else if (adsConfig.getMobileAdsNetwork().equals(Constants.START_APP)) {\r\n                    BannerAds.showAppodealBanner(mActivity, R.id.appodealBannerView_fragment_recentlysub);\r\n\r\n                } else if (adsConfig.getMobileAdsNetwork().equals(Constants.NETWORK_AUDIENCE)) {\r\n                    BannerAds.showFANBanner(getContext(), mAdView);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void getData(int pageNum) {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        DownApi api = retrofit.create(DownApi.class);\r\n        Call<List<Video>> call = api.getDown(Config.API_KEY, pageNum);\r\n        call.enqueue(new Callback<List<Video>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Video>> call, retrofit2.Response<List<Video>> response) {\r\n                if (response.code() == 200) {\r\n                    mIsLoading = false;\r\n                    if(mSwipeRefreshLayout == null)return;\r\n                    mProgressBar.setVisibility(View.GONE);\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n\r\n                    if (String.valueOf(response).length() < 10 && mPageCount == 1) {\r\n                        mActivity.setFailure(true);\r\n                    } else {\r\n                        mActivity.setFailure(false);\r\n                    }\r\n\r\n                    for (int i = 0; i < response.body().size(); i++) {\r\n                        Video video = response.body().get(i);\r\n                        CommonModels models = new CommonModels();\r\n                        models.setImageUrl(video.getThumbnailUrl());\r\n                        models.setTitle(video.getTitle());\r\n                        models.setQuality(video.getVideoQuality());\r\n                        models.setVideoType(\"movie\");\r\n                        models.setReleaseDate(video.getRelease());\r\n                        if (video.getIsTvseries().equals(\"1\")) {\r\n                            models.setVideoType(\"tvseries\");\r\n                        } else {\r\n                            models.setVideoType(\"movie\");\r\n                        }\r\n\r\n\r\n                        models.setId(video.getVideosId());\r\n                        list.add(models);\r\n                    }\r\n\r\n                    mAdapter.notifyDataSetChanged();\r\n                } else {\r\n                    mIsLoading = false;\r\n                    mProgressBar.setVisibility(View.GONE);\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(View.GONE);\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    if (mPageCount == 1) {\r\n                        mActivity.setFailure(true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Video>> call, Throwable t) {\r\n                mIsLoading = false;\r\n                mProgressBar.setVisibility(View.GONE);\r\n                mShimmerLayout.stopShimmer();\r\n                mShimmerLayout.setVisibility(View.GONE);\r\n                mSwipeRefreshLayout.setRefreshing(false);\r\n                if (mPageCount == 1) {\r\n                    mActivity.setFailure(true);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/DownFragment.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/fragments/DownFragment.java	(date 1612172737827)
@@ -14,6 +14,7 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.facebook.shimmer.ShimmerFrameLayout;
+import com.google.android.ads.nativetemplates.TemplateView;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -41,10 +42,12 @@
 import tvseries.koreandramaengsub.freemovieapp.utils.SpacingItemDecoration;
 import tvseries.koreandramaengsub.freemovieapp.utils.Tools;
 import tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;
+import tvseries.koreandramaengsub.freemovieapp.utils.ads.NativeAds;
 import tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout;
 
 public class DownFragment extends Fragment {
     @BindView(R.id.adView) RelativeLayout mAdView;
+    @BindView(R.id.admob_nativead_template) TemplateView admobNativeAdView;
     @BindView(R.id.item_progress_bar) ProgressBar mProgressBar;
     @BindView(R.id.shimmer_view_container) ShimmerFrameLayout mShimmerLayout;
     @BindView(R.id.swipe_layout) SwipeRefreshLayout mSwipeRefreshLayout;
@@ -179,8 +182,10 @@
                 if (adsConfig.getAdsEnable().equals("1")) {
 
                     if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {
-                        BannerAds.ShowAdmobBannerAds(mActivity, mAdView);
+                       // BannerAds.ShowAdmobBannerAds(mActivity, mAdView);
 
+                        admobNativeAdView.setVisibility(View.VISIBLE);
+                        NativeAds.showAdmobNativeAds(getActivity(), admobNativeAdView);
                     } else if (adsConfig.getMobileAdsNetwork().equals(Constants.START_APP)) {
                         BannerAds.showAppodealBanner(mActivity, R.id.appodealBannerView_fragment_recentlysub);
 
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <include\r\n        android:id=\"@+id/shimmer_view_container\"\r\n        layout=\"@layout/layout_dimmer_home\"\r\n        tools:visibility=\"gone\" />\r\n\r\n    <tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout\r\n        android:id=\"@+id/swipe_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/shimmer_view_container\"\r\n        android:translationZ=\"12dp\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <androidx.core.widget.NestedScrollView\r\n                    android:id=\"@+id/scrollView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:focusable=\"true\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:descendantFocusability=\"blocksDescendants\"\r\n                        android:orientation=\"vertical\">\r\n\r\n\r\n                        <View\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"?attr/actionBarSize\"\r\n                            android:layout_marginBottom=\"@dimen/spacing_middle\" />\r\n\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:focusable=\"true\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/slider_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_marginHorizontal=\"10dp\"\r\n                                android:layout_height=\"wrap_content\">\r\n\r\n                                <com.github.islamkhsh.CardSliderViewPager\r\n                                    android:id=\"@+id/c_viewPager\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    app:auto_slide_time=\"5\"\r\n                                    app:cardSlider_cardCornerRadius=\"5dp\"\r\n                                    app:cardSlider_otherPagesWidth=\"-1dp\"\r\n                                    app:cardSlider_pageMargin=\"0dp\" />\r\n\r\n                                <com.viewpagerindicator.LinePageIndicator\r\n                                    android:id=\"@+id/title_pager_indicator\"\r\n                                    app:unselectedColor=\"@color/blue_grey_400\"\r\n                                    app:selectedColor=\"@color/blue_400\"\r\n                                    app:strokeWidth=\"2dp\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_width=\"fill_parent\"\r\n                                    android:layout_below=\"@id/c_viewPager\"\r\n                                    android:layout_marginTop=\"6dp\"\r\n                                    android:layout_centerHorizontal=\"true\"/>\r\n                             <!--   <com.github.islamkhsh.CardSliderIndicator\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:id=\"@+id/c_indicator\"\r\n                                    android:layout_below=\"@id/c_viewPager\"\r\n                                    android:layout_marginTop=\"5dp\"\r\n                                    android:layout_centerHorizontal=\"true\"/>-->\r\n                            </RelativeLayout>\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/adView1\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:layout_marginTop=\"5dp\"\r\n                                android:focusable=\"true\"\r\n                                android:gravity=\"center\"\r\n                                android:nextFocusLeft=\"@id/slider_layout\"\r\n                                android:nextFocusRight=\"@id/genre_layout\" />\r\n\r\n                            <com.appodeal.ads.BannerView\r\n                                android:id=\"@+id/appodealBannerView1_home\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:gravity=\"center\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"5dp\"\r\n                                android:focusable=\"true\"\r\n                                android:nextFocusRight=\"@id/genre_layout\"\r\n                                android:nextFocusLeft=\"@id/slider_layout\"/>\r\n\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/genre_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"8dp\"\r\n                                android:focusable=\"true\"\r\n                                android:nextFocusLeft=\"@id/adView1\"\r\n                                android:nextFocusRight=\"@id/country_layout\"\r\n                                android:visibility=\"gone\"\r\n                                tools:visibility=\"visible\">\r\n\r\n                               <!-- <TextView\r\n                                    android:id=\"@+id/tv_genre\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"10dp\"\r\n                                    android:paddingTop=\"8dp\"\r\n                                    android:paddingBottom=\"8dp\"\r\n                                    android:text=\"@string/explore_by_genre\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />-->\r\n\r\n                                <androidx.recyclerview.widget.RecyclerView\r\n                                    android:id=\"@+id/genre_rv\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginVertical=\"8dp\">\r\n\r\n                                </androidx.recyclerview.widget.RecyclerView>\r\n                            </RelativeLayout>\r\n                            <LinearLayout\r\n                                android:id=\"@+id/continueWatchingLayout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:orientation=\"vertical\">\r\n\r\n                                <LinearLayout\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginTop=\"@dimen/spacing_medium\"\r\n                                    android:clickable=\"true\"\r\n                                    android:focusable=\"true\"\r\n                                    android:background=\"?android:attr/selectableItemBackground\"\r\n                                    android:gravity=\"center_vertical\"\r\n                                    android:orientation=\"horizontal\"\r\n                                    android:paddingLeft=\"10dp\"\r\n                                    android:paddingRight=\"5dp\">\r\n\r\n                                    <TextView\r\n                                        android:layout_width=\"0dp\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:layout_weight=\"1\"\r\n                                        android:gravity=\"center_vertical\"\r\n                                        android:text=\"Countinue Watching\"\r\n                                        android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                                    <Button\r\n                                        android:id=\"@+id/continue_watching_clear_btn\"\r\n                                        style=\"@style/Widget.AppCompat.Button.Borderless\"\r\n                                        android:layout_width=\"wrap_content\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:gravity=\"right|center_vertical\"\r\n                                        android:minWidth=\"0dp\"\r\n                                        android:text=\"✘\"\r\n                                        android:includeFontPadding=\"false\"\r\n                                        android:textColor=\"@color/red_400\"\r\n                                        android:textAppearance=\"@style/TextAppearance.Medium.Bold\"\r\n                                        />\r\n\r\n                                </LinearLayout>\r\n\r\n                                <androidx.recyclerview.widget.RecyclerView\r\n                                    android:id=\"@+id/recyclerViewContinueWatching\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\" />\r\n\r\n\r\n                            </LinearLayout>\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/country_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"10dp\"\r\n                                android:visibility=\"gone\"\r\n                                tools:visibility=\"visible\">\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/tv_country\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"10dp\"\r\n                                    android:paddingTop=\"8dp\"\r\n                                    android:paddingBottom=\"8dp\"\r\n                                    android:text=\"@string/explore_by_country\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                                <androidx.recyclerview.widget.RecyclerView\r\n                                    android:id=\"@+id/country_rv\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_below=\"@id/tv_country\"\r\n                                    android:layout_marginTop=\"8dp\">\r\n                                </androidx.recyclerview.widget.RecyclerView>\r\n                            </RelativeLayout>\r\n                            <LinearLayout\r\n                                android:id=\"@+id/last_anime_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"@dimen/spacing_medium\"\r\n                                android:clickable=\"true\"\r\n                                android:focusable=\"true\"\r\n                                android:background=\"?android:attr/selectableItemBackground\"\r\n                                android:gravity=\"center_vertical\"\r\n                                android:orientation=\"horizontal\"\r\n                                android:paddingLeft=\"10dp\"\r\n                                android:paddingRight=\"5dp\">\r\n\r\n                                <TextView\r\n                                    android:layout_width=\"0dp\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_weight=\"1\"\r\n                                    android:gravity=\"center_vertical\"\r\n                                    android:text=\"@string/latest_tv_series\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                                <Button\r\n                                    android:id=\"@+id/btn_more_series\"\r\n                                    style=\"@style/Widget.AppCompat.Button.Borderless\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:gravity=\"right|center_vertical\"\r\n                                    android:minWidth=\"0dp\"\r\n                                    android:text=\"@string/more\"\r\n                                    android:textColor=\"?android:textColor\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\"\r\n                                    android:textSize=\"15sp\" />\r\n\r\n                            </LinearLayout>\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/recyclerViewTvSeries\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginBottom=\"10dp\"\r\n                                android:scrollbars=\"vertical\"\r\n                                android:scrollingCache=\"true\" />\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/top_anime_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"@dimen/spacing_medium\"\r\n                                android:clickable=\"true\"\r\n                                android:focusable=\"true\"\r\n                                android:background=\"?android:attr/selectableItemBackground\"\r\n                                android:gravity=\"center_vertical\"\r\n                                android:orientation=\"horizontal\"\r\n                                android:paddingLeft=\"10dp\"\r\n                                android:paddingRight=\"5dp\">\r\n\r\n                                <TextView\r\n                                    android:layout_width=\"0dp\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_weight=\"1\"\r\n                                    android:text=\"@string/topview_tv_series\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                                <Button\r\n                                    android:id=\"@+id/btn_more_series1\"\r\n                                    style=\"@style/Widget.AppCompat.Button.Borderless\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:gravity=\"right|center_vertical\"\r\n                                    android:minWidth=\"0dp\"\r\n                                    android:text=\"@string/more\"\r\n                                    android:textColor=\"?android:textColor\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\"\r\n                                    android:textSize=\"15sp\" />\r\n\r\n                            </LinearLayout>\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/recyclerViewTopviewTvSeries\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginBottom=\"10dp\"\r\n                                android:scrollbars=\"vertical\"\r\n                                android:scrollingCache=\"true\" />\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/recyclerView_by_genre\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginBottom=\"10dp\"\r\n                                android:scrollbars=\"vertical\"\r\n                                android:scrollingCache=\"true\" />\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/adView\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:gravity=\"center\" />\r\n\r\n                            <com.appodeal.ads.BannerView\r\n                                android:id=\"@+id/appodealBannerView_home\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:gravity=\"center\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:visibility=\"gone\"/>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/movie_layout\"\r\n                                android:clickable=\"true\"\r\n                                android:focusable=\"true\"\r\n                                android:background=\"?android:attr/selectableItemBackground\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:gravity=\"center_vertical\"\r\n                                android:orientation=\"horizontal\"\r\n                                android:paddingLeft=\"10dp\"\r\n                                android:paddingRight=\"5dp\">\r\n\r\n                                <TextView\r\n                                    android:layout_width=\"0dp\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_weight=\"1\"\r\n                                    android:text=\"@string/latest_movie\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                                <Button\r\n                                    android:id=\"@+id/btn_more_movie\"\r\n                                    style=\"@style/Widget.AppCompat.Button.Borderless\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:gravity=\"right|center_vertical\"\r\n                                    android:minWidth=\"0dp\"\r\n                                    android:text=\"@string/more\"\r\n                                    android:textColor=\"?android:textColor\"\r\n                                    android:textAppearance=\"@style/TextAppearance.Medium.Bold\"\r\n                                    android:textSize=\"15sp\" />\r\n                            </LinearLayout>\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/recyclerView\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:scrollbars=\"vertical\"\r\n                                android:scrollingCache=\"true\" />\r\n\r\n\r\n                        </LinearLayout>\r\n\r\n                        <!--<com.google.android.gms.ads.AdView-->\r\n                        <!--xmlns:ads=\"http://schemas.android.com/apk/res-auto\"-->\r\n                        <!--android:id=\"@+id/adView\"-->\r\n                        <!--android:layout_width=\"match_parent\"-->\r\n                        <!--android:layout_height=\"wrap_content\"-->\r\n                        <!--ads:adSize=\"BANNER\"-->\r\n                        <!--ads:adUnitId=\"@string/admob_ad_id\">-->\r\n                        <!--</com.google.android.gms.ads.AdView>-->\r\n\r\n                    </LinearLayout>\r\n                </androidx.core.widget.NestedScrollView>\r\n            </LinearLayout>\r\n        </RelativeLayout>\r\n    </tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/fragment_home.xml	(date 1612120963599)
@@ -86,6 +86,30 @@
                                     android:layout_centerHorizontal="true"/>-->
                             </RelativeLayout>
 
+                            <RelativeLayout
+                                android:id="@+id/admob_native_ad_container_1"
+                                android:layout_width="match_parent"
+                                android:layout_height="wrap_content"
+                                android:layout_margin="8dp">
+
+                                <com.google.android.ads.nativetemplates.TemplateView
+                                    android:id="@+id/admob_nativead_template_1"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content"
+                                    app:gnt_template_type="@layout/gnt_small_template_view"
+                                    android:visibility="gone"/>
+
+                            </RelativeLayout>
+
+                            <com.appodeal.ads.native_ad.views.NativeAdViewContentStream
+                                android:id="@+id/native_ad_view_content_stream"
+                                android:layout_width="match_parent"
+                                android:layout_height="wrap_content"
+                                android:layout_marginBottom="10dp"
+                                app:gnt_template_type="@layout/gnt_small_template_view"
+                                android:visibility="gone">
+                            </com.appodeal.ads.native_ad.views.NativeAdViewContentStream>
+
                             <RelativeLayout
                                 android:id="@+id/adView1"
                                 android:layout_width="match_parent"
@@ -312,6 +336,20 @@
                                 android:layout_gravity="center"
                                 android:gravity="center" />
 
+                            <RelativeLayout
+                                android:id="@+id/admob_native_ad_container"
+                                android:layout_width="match_parent"
+                                android:layout_height="wrap_content"
+                                android:layout_margin="8dp">
+
+                                <com.google.android.ads.nativetemplates.TemplateView
+                                    android:id="@+id/admob_nativead_template"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content"
+                                    app:gnt_template_type="@layout/gnt_small_template_view"
+                                    android:visibility="gone"/>
+
+                            </RelativeLayout>
                             <com.appodeal.ads.BannerView
                                 android:id="@+id/appodealBannerView_home"
                                 android:layout_gravity="center"
Index: app/src/main/res/layout/fragment_movies.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout android:orientation=\"vertical\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <include\r\n        android:id=\"@+id/shimmer_view_container\"\r\n        layout=\"@layout/layout_dimmer_movie\"\r\n        tools:visibility=\"gone\" />\r\n    <RelativeLayout\r\n        android:layout_below=\"@+id/shimmer_view_container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@+id/adView\">\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout\r\n                android:id=\"@+id/swipe_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/recyclerView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:scrollbars=\"vertical\"\r\n                    android:scrollingCache=\"true\"\r\n                    tools:listitem=\"@layout/card_reply\"\r\n                    android:paddingTop=\"70dp\"\r\n                    android:clipToPadding=\"false\"/>\r\n\r\n            </tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout>\r\n\r\n        </LinearLayout>\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/item_progress_bar\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:elevation=\"5dp\"\r\n            android:padding=\"5dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:visibility=\"gone\" />\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/adView\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:focusable=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n    <com.appodeal.ads.BannerView\r\n        android:id=\"@+id/appodealBannerView_fragment_movies\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:focusable=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_movies.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/fragment_movies.xml	(date 1612173019098)
@@ -70,4 +70,20 @@
         android:focusable="true"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"/>
+
+    <RelativeLayout
+        android:id="@+id/admob_native_ad_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_gravity="center"
+        android:gravity="center">
+
+        <com.google.android.ads.nativetemplates.TemplateView
+            android:id="@+id/admob_nativead_template"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:gnt_template_type="@layout/gnt_small_template_view"
+            android:visibility="gone"/>
+    </RelativeLayout>
 </RelativeLayout>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_1_aar.xml
===================================================================
--- .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_1_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_1_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
@@ -1,14 +0,0 @@
-<component name="libraryTable">
-  <library name="Gradle: androidx.databinding:viewbinding:4.1.1@aar">
-    <CLASSES>
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c49c38e0c85dce2dc4dec79ca369fc2f/jetified-viewbinding-4.1.1/res" />
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1300f842c93cedee01f70a2715439583/jetified-viewbinding-4.1.1/jars/classes.jar!/" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1300f842c93cedee01f70a2715439583/jetified-viewbinding-4.1.1/res" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1300f842c93cedee01f70a2715439583/jetified-viewbinding-4.1.1/AndroidManifest.xml" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.databinding/viewbinding/4.1.1/4779a8ac3390acdaaaccc59f8528af9ff5f778b0/viewbinding-4.1.1-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4.xml
===================================================================
--- .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Gradle: com.nimbusds:nimbus-jose-jwt:9.4">
-    <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4/40204ef76d2a99d378eb1ce95246a9e87e279ddf/nimbus-jose-jwt-9.4.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4/149c5308d6bd3c46f43cda8c0555d5a0c658d745/nimbus-jose-jwt-9.4-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4/f4106f0369b52aad6733670127a4294dd4669b07/nimbus-jose-jwt-9.4-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_0_1_aar.xml
===================================================================
--- .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_0_1_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_0_1_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
@@ -1,14 +0,0 @@
-<component name="libraryTable">
-  <library name="Gradle: com.stripe:stripe-3ds2-android:5.0.1@aar">
-    <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d80c2467d580d9f5e459929ccf81943d/jetified-stripe-3ds2-android-5.0.1/jars/classes.jar!/" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d80c2467d580d9f5e459929ccf81943d/jetified-stripe-3ds2-android-5.0.1/res" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d80c2467d580d9f5e459929ccf81943d/jetified-stripe-3ds2-android-5.0.1/AndroidManifest.xml" />
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d80c2467d580d9f5e459929ccf81943d/jetified-stripe-3ds2-android-5.0.1/jars/libs/sdk_listeners_android.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-3ds2-android/5.0.1/a98767967740a1033827416656d25c43e02c4564/stripe-3ds2-android-5.0.1-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_stripe_stripe_android_16_2_0_aar.xml
===================================================================
--- .idea/libraries/Gradle__com_stripe_stripe_android_16_2_0_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__com_stripe_stripe_android_16_2_0_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
@@ -1,15 +0,0 @@
-<component name="libraryTable">
-  <library name="Gradle: com.stripe:stripe-android:16.2.0@aar">
-    <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2e7509fc3631f0e757b16523fc7cf1b3/jetified-stripe-android-16.2.0/jars/classes.jar!/" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2e7509fc3631f0e757b16523fc7cf1b3/jetified-stripe-android-16.2.0/res" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2e7509fc3631f0e757b16523fc7cf1b3/jetified-stripe-android-16.2.0/AndroidManifest.xml" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-android/16.2.0/baf04ae55f77e4a6badd839eba8850dd42f04938/stripe-android-16.2.0-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-android/16.2.0/94d74dd3d57b08529cc6dde799c251c97612e63e/stripe-android-16.2.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/modules/nativetemplates/animeApp.nativetemplates.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/nativetemplates/animeApp.nativetemplates.iml	(date 1612107170583)
+++ .idea/modules/nativetemplates/animeApp.nativetemplates.iml	(date 1612107170583)
@@ -0,0 +1,102 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":nativetemplates" external.linked.project.path="$MODULE_DIR$/../../../nativetemplates" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="animeApp" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":nativetemplates" />
+        <option name="LAST_SUCCESSFUL_SYNC_AGP_VERSION" value="4.1.1" />
+        <option name="LAST_KNOWN_AGP_VERSION" value="4.1.1" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <afterSyncTasks>
+          <task>generateDebugSources</task>
+        </afterSyncTasks>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/../../../nativetemplates/src/main/res;file://$MODULE_DIR$/../../../nativetemplates/src/debug/res;file://$MODULE_DIR$/../../../nativetemplates/build/generated/res/rs/debug;file://$MODULE_DIR$/../../../nativetemplates/build/generated/res/resValues/debug" />
+        <option name="TEST_RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/../../../nativetemplates/src/androidTest/res;file://$MODULE_DIR$/../../../nativetemplates/src/androidTestDebug/res;file://$MODULE_DIR$/../../../nativetemplates/build/generated/res/rs/androidTest/debug;file://$MODULE_DIR$/../../../nativetemplates/build/generated/res/resValues/androidTest/debug" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+        <option name="PROJECT_TYPE" value="1" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+    <output url="file://$MODULE_DIR$/../../../nativetemplates/build/intermediates/javac/debug/classes" />
+    <output-test url="file://$MODULE_DIR$/../../../nativetemplates/build/intermediates/javac/debugUnitTest/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../nativetemplates">
+      <sourceFolder url="file://$MODULE_DIR$/../../../nativetemplates/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../nativetemplates/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../nativetemplates/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../nativetemplates/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../nativetemplates/build/generated/res/resValues/debug" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../nativetemplates/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../nativetemplates/build" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 30 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Gradle: androidx.collection:collection:1.1.0" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.arch.core:core-common:2.1.0" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-common:2.1.0" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.annotation:annotation:1.1.0" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.constraintlayout:constraintlayout-solver:1.1.3" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.appcompat:appcompat:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-ads:18.3.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-ads-identifier:17.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-gass:18.3.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-ads-lite:18.3.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-measurement-sdk-api:17.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-tasks:17.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-measurement-base:17.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-basement:17.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.appcompat:appcompat-resources:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.browser:browser:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.legacy:legacy-support-core-ui:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.drawerlayout:drawerlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.viewpager:viewpager:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.legacy:legacy-support-core-utils:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.loader:loader:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.activity:activity:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.vectordrawable:vectordrawable-animated:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.vectordrawable:vectordrawable:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.slidingpanelayout:slidingpanelayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.customview:customview:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.swiperefreshlayout:swiperefreshlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.asynclayoutinflater:asynclayoutinflater:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.core:core:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.versionedparcelable:versionedparcelable:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-viewmodel:2.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.interpolator:interpolator:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-runtime:2.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.savedstate:savedstate:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata-core:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.arch.core:core-runtime:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.documentfile:documentfile:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.print:print:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-ads-base:18.3.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.constraintlayout:constraintlayout:1.1.3@aar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-integration:1.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-library:1.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: net.sf.kxml:kxml2:2.3.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: com.squareup:javawriter:2.1.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: com.google.code.findbugs:jsr305:2.0.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: androidx.test.espresso:espresso-core:3.1.0@aar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: androidx.test:runner:1.1.0@aar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: androidx.test:monitor:1.1.0@aar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: androidx.test.espresso:espresso-idling-resource:3.1.0@aar" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_tasks_17_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_tasks_17_0_0_aar.xml	(date 1612107170692)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_tasks_17_0_0_aar.xml	(date 1612107170692)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-tasks:17.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1610fa7d4d8dcf74753b9cee1e272637/jetified-play-services-tasks-17.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1610fa7d4d8dcf74753b9cee1e272637/jetified-play-services-tasks-17.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1610fa7d4d8dcf74753b9cee1e272637/jetified-play-services-tasks-17.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_1_1_3_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_1_1_3_aar.xml	(date 1612107170629)
+++ .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_1_1_3_aar.xml	(date 1612107170629)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.constraintlayout:constraintlayout:1.1.3@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/41f7325ed31562a4b05d7870220e644b/constraintlayout-1.1.3/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/41f7325ed31562a4b05d7870220e644b/constraintlayout-1.1.3/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/41f7325ed31562a4b05d7870220e644b/constraintlayout-1.1.3/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_1_0_aar.xml	(date 1612107170703)
+++ .idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_1_0_aar.xml	(date 1612107170703)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-runtime:2.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4ba4ece4477e65180e3d4799cbf3908e/lifecycle-runtime-2.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4ba4ece4477e65180e3d4799cbf3908e/lifecycle-runtime-2.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4ba4ece4477e65180e3d4799cbf3908e/lifecycle-runtime-2.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-runtime/2.1.0/533a0cd1a095abbdfd08a49c4d34bd0713977034/lifecycle-runtime-2.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_appcompat_appcompat_resources_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_appcompat_appcompat_resources_1_1_0_aar.xml	(date 1612107170612)
+++ .idea/libraries/Gradle__androidx_appcompat_appcompat_resources_1_1_0_aar.xml	(date 1612107170612)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.appcompat:appcompat-resources:1.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/356daa2a88d72112de69edb81aa10fc9/jetified-appcompat-resources-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/356daa2a88d72112de69edb81aa10fc9/jetified-appcompat-resources-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/356daa2a88d72112de69edb81aa10fc9/jetified-appcompat-resources-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.appcompat/appcompat-resources/1.1.0/a7dcffd1afb81e3c892ad061b33da031c2d7289f/appcompat-resources-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_appcompat_appcompat_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_appcompat_appcompat_1_1_0_aar.xml	(date 1612107170606)
+++ .idea/libraries/Gradle__androidx_appcompat_appcompat_1_1_0_aar.xml	(date 1612107170606)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.appcompat:appcompat:1.1.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c7df135ec550a1f68683093418b84fcf/appcompat-1.1.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c7df135ec550a1f68683093418b84fcf/appcompat-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c7df135ec550a1f68683093418b84fcf/appcompat-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c7df135ec550a1f68683093418b84fcf/appcompat-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.appcompat/appcompat/1.1.0/9865019bbd2d95e41dede3d8ebf964aa93f97766/appcompat-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_browser_browser_1_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_browser_browser_1_0_0_aar.xml	(date 1612107170624)
+++ .idea/libraries/Gradle__androidx_browser_browser_1_0_0_aar.xml	(date 1612107170624)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.browser:browser:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/880d11b6c0395a34d7896d6a9bf33561/browser-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/880d11b6c0395a34d7896d6a9bf33561/browser-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/880d11b6c0395a34d7896d6a9bf33561/browser-1.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/880d11b6c0395a34d7896d6a9bf33561/browser-1.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.browser/browser/1.0.0/804dc4c93b5f45da8f72c10a5080dbb21715d813/browser-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_fragment_fragment_1_3_0_rc01_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Gradle: androidx.fragment:fragment:1.3.0-rc01@aar\">\r\n    <ANNOTATIONS>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/annotations.zip!/\" />\r\n    </ANNOTATIONS>\r\n    <CLASSES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/res\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/AndroidManifest.xml\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.3.0-rc01/d3e303766b5694fb0c1b07cc5bb1105bb7da6825/fragment-1.3.0-rc01-sources.jar!/\" />\r\n    </SOURCES>\r\n  </library>\r\n</component>
===================================================================
--- .idea/libraries/Gradle__androidx_fragment_fragment_1_3_0_rc01_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__androidx_fragment_fragment_1_3_0_rc02_aar.xml	(date 1612107170526)
@@ -1,16 +1,16 @@
 <component name="libraryTable">
-  <library name="Gradle: androidx.fragment:fragment:1.3.0-rc01@aar">
+  <library name="Gradle: androidx.fragment:fragment:1.3.0-rc02@aar">
     <ANNOTATIONS>
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/annotations.zip!/" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30e8417be8116a7d17d71d2d212682e6/fragment-1.3.0-rc02/annotations.zip!/" />
     </ANNOTATIONS>
     <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/jars/classes.jar!/" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/res" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7af29d94babad165d0b68d4d353add53/fragment-1.3.0-rc01/AndroidManifest.xml" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30e8417be8116a7d17d71d2d212682e6/fragment-1.3.0-rc02/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30e8417be8116a7d17d71d2d212682e6/fragment-1.3.0-rc02/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30e8417be8116a7d17d71d2d212682e6/fragment-1.3.0-rc02/AndroidManifest.xml" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.3.0-rc01/d3e303766b5694fb0c1b07cc5bb1105bb7da6825/fragment-1.3.0-rc01-sources.jar!/" />
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.3.0-rc02/e2e5c7bd6eec5b6afd45cba414e34aa05e8e10b0/fragment-1.3.0-rc02-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4_2.xml	(date 1612107170751)
+++ .idea/libraries/Gradle__com_nimbusds_nimbus_jose_jwt_9_4_2.xml	(date 1612107170751)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.nimbusds:nimbus-jose-jwt:9.4.2">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4.2/b7b335916cf01eb6627f301ba01534d6493ddd1/nimbus-jose-jwt-9.4.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4.2/f5171f31c7b65eca6927c696e7b5c6dda3c078e3/nimbus-jose-jwt-9.4.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nimbusds/nimbus-jose-jwt/9.4.2/464cb79f9858ca7d00163ec7ccf6545d19fa6ec/nimbus-jose-jwt-9.4.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__artifacts_mycardadapter_release_unspecified.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__artifacts_mycardadapter_release_unspecified.xml	(date 1612169265848)
+++ .idea/libraries/Gradle__artifacts_mycardadapter_release_unspecified.xml	(date 1612169265848)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: artifacts:mycardadapter-release:unspecified">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/mycardadapter-release/build/.transforms/810d535344a31bbb04ff92b0868fa260/jetified-mycardadapter-release/jars/classes.jar!/" />
+      <root url="file://$PROJECT_DIR$/mycardadapter-release/build/.transforms/810d535344a31bbb04ff92b0868fa260/jetified-mycardadapter-release/res" />
+      <root url="file://$PROJECT_DIR$/mycardadapter-release/build/.transforms/810d535344a31bbb04ff92b0868fa260/jetified-mycardadapter-release/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_core_core_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_core_core_1_1_0_aar.xml	(date 1612107170502)
+++ .idea/libraries/Gradle__androidx_core_core_1_1_0_aar.xml	(date 1612107170502)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.core:core:1.1.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/06ac751085e7e70957e1a774a38a2693/core-1.1.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/06ac751085e7e70957e1a774a38a2693/core-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/06ac751085e7e70957e1a774a38a2693/core-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/06ac751085e7e70957e1a774a38a2693/core-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.core/core/1.1.0/4ae37fad1fe95b42aa47a720908df37ba5d3c85e/core-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/network/model/config/AdsConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp.network.model.config;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class AdsConfig {\r\n\r\n    @SerializedName(\"ads_enable\")\r\n    @Expose\r\n    private String adsEnable;\r\n    @SerializedName(\"mobile_ads_network\")\r\n    @Expose\r\n    private String mobileAdsNetwork;\r\n    @SerializedName(\"admob_app_id\")\r\n    @Expose\r\n    private String admobAppId;\r\n    @SerializedName(\"admob_banner_ads_id\")\r\n    @Expose\r\n    private String admobBannerAdsId;\r\n    @SerializedName(\"admob_interstitial_ads_id\")\r\n    @Expose\r\n    private String admobInterstitialAdsId;\r\n    @SerializedName(\"admob_reawardedvideo_ads_id\")\r\n    @Expose\r\n    private String admobRewardedVideoAdsId;\r\n    @SerializedName(\"admob_appopen_ads_id\")\r\n    @Expose\r\n    private String admobAppOpenAdsId;\r\n    @SerializedName(\"fan_native_ads_placement_id\")\r\n    @Expose\r\n    private String fanNativeAdsPlacementId;\r\n    @SerializedName(\"fan_banner_ads_placement_id\")\r\n    @Expose\r\n    private String fanBannerAdsPlacementId;\r\n    @SerializedName(\"fan_interstitial_ads_placement_id\")\r\n    @Expose\r\n    private String fanInterstitialAdsPlacementId;\r\n    @SerializedName(\"startapp_app_id\")\r\n    @Expose\r\n    private String startappAppId;\r\n\r\n    public String getAdmobAppOpenAdsId() {\r\n        return admobAppOpenAdsId;\r\n    }\r\n\r\n    public void setAdmobAppOpenAdsId(String admobAppOpenAdsId) {\r\n        this.admobAppOpenAdsId = admobAppOpenAdsId;\r\n    }\r\n\r\n    public String getAdmobRewardedVideoAdsId() {\r\n        return admobRewardedVideoAdsId;\r\n    }\r\n\r\n    public void setAdmobRewardedVideoAdsId(String admobRewardedVideoAdsId) {\r\n        this.admobRewardedVideoAdsId = admobRewardedVideoAdsId;\r\n    }\r\n\r\n    public AdsConfig() {\r\n    }\r\n\r\n    public String getAdsEnable() {\r\n        return adsEnable;\r\n    }\r\n\r\n    public void setAdsEnable(String adsEnable) {\r\n        this.adsEnable = adsEnable;\r\n    }\r\n\r\n    public String getMobileAdsNetwork() {\r\n        return mobileAdsNetwork;\r\n    }\r\n\r\n    public void setMobileAdsNetwork(String mobileAdsNetwork) {\r\n        this.mobileAdsNetwork = mobileAdsNetwork;\r\n    }\r\n\r\n    public String getAdmobAppId() {\r\n        return admobAppId;\r\n    }\r\n\r\n    public void setAdmobAppId(String admobAppId) {\r\n        this.admobAppId = admobAppId;\r\n    }\r\n\r\n    public String getAdmobBannerAdsId() {\r\n        return admobBannerAdsId;\r\n    }\r\n\r\n    public void setAdmobBannerAdsId(String admobBannerAdsId) {\r\n        this.admobBannerAdsId = admobBannerAdsId;\r\n    }\r\n\r\n    public String getAdmobInterstitialAdsId() {\r\n        return admobInterstitialAdsId;\r\n    }\r\n\r\n    public void setAdmobInterstitialAdsId(String admobInterstitialAdsId) {\r\n        this.admobInterstitialAdsId = admobInterstitialAdsId;\r\n    }\r\n\r\n    public String getFanNativeAdsPlacementId() {\r\n        return fanNativeAdsPlacementId;\r\n    }\r\n\r\n    public void setFanNativeAdsPlacementId(String fanNativeAdsPlacementId) {\r\n        this.fanNativeAdsPlacementId = fanNativeAdsPlacementId;\r\n    }\r\n\r\n    public String getFanBannerAdsPlacementId() {\r\n        return fanBannerAdsPlacementId;\r\n    }\r\n\r\n    public void setFanBannerAdsPlacementId(String fanBannerAdsPlacementId) {\r\n        this.fanBannerAdsPlacementId = fanBannerAdsPlacementId;\r\n    }\r\n\r\n    public String getFanInterstitialAdsPlacementId() {\r\n        return fanInterstitialAdsPlacementId;\r\n    }\r\n\r\n    public void setFanInterstitialAdsPlacementId(String fanInterstitialAdsPlacementId) {\r\n        this.fanInterstitialAdsPlacementId = fanInterstitialAdsPlacementId;\r\n    }\r\n\r\n    public String getStartappAppId() {\r\n        return startappAppId;\r\n    }\r\n\r\n    public void setStartappAppId(String startappAppId) {\r\n        this.startappAppId = startappAppId;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/network/model/config/AdsConfig.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/network/model/config/AdsConfig.java	(date 1612115087413)
@@ -3,6 +3,8 @@
 import com.google.gson.annotations.Expose;
 import com.google.gson.annotations.SerializedName;
 
+
+
 public class AdsConfig {
 
     @SerializedName("ads_enable")
@@ -20,12 +22,9 @@
     @SerializedName("admob_interstitial_ads_id")
     @Expose
     private String admobInterstitialAdsId;
-    @SerializedName("admob_reawardedvideo_ads_id")
-    @Expose
-    private String admobRewardedVideoAdsId;
-    @SerializedName("admob_appopen_ads_id")
+    @SerializedName("admob_native_ads_id")
     @Expose
-    private String admobAppOpenAdsId;
+    private String admobNativeAdsId;
     @SerializedName("fan_native_ads_placement_id")
     @Expose
     private String fanNativeAdsPlacementId;
@@ -38,22 +37,9 @@
     @SerializedName("startapp_app_id")
     @Expose
     private String startappAppId;
-
-    public String getAdmobAppOpenAdsId() {
-        return admobAppOpenAdsId;
-    }
-
-    public void setAdmobAppOpenAdsId(String admobAppOpenAdsId) {
-        this.admobAppOpenAdsId = admobAppOpenAdsId;
-    }
-
-    public String getAdmobRewardedVideoAdsId() {
-        return admobRewardedVideoAdsId;
-    }
-
-    public void setAdmobRewardedVideoAdsId(String admobRewardedVideoAdsId) {
-        this.admobRewardedVideoAdsId = admobRewardedVideoAdsId;
-    }
+    @SerializedName("startapp_developer_id")
+    @Expose
+    private String startappDeveloperId;
 
     public AdsConfig() {
     }
@@ -114,6 +100,14 @@
         this.fanBannerAdsPlacementId = fanBannerAdsPlacementId;
     }
 
+    public String getAdmobNativeAdsId() {
+        return admobNativeAdsId;
+    }
+
+    public void setAdmobNativeAdsId(String admobNativeAdsId) {
+        this.admobNativeAdsId = admobNativeAdsId;
+    }
+
     public String getFanInterstitialAdsPlacementId() {
         return fanInterstitialAdsPlacementId;
     }
@@ -130,4 +124,11 @@
         this.startappAppId = startappAppId;
     }
 
+    public String getStartappDeveloperId() {
+        return startappDeveloperId;
+    }
+
+    public void setStartappDeveloperId(String startappDeveloperId) {
+        this.startappDeveloperId = startappDeveloperId;
+    }
 }
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_sdk_api_17_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_sdk_api_17_1_0_aar.xml	(date 1612107170687)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_sdk_api_17_1_0_aar.xml	(date 1612107170687)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-measurement-sdk-api:17.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/298b90064dca2323e8eefbcfa9a2f83e/jetified-play-services-measurement-sdk-api-17.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/298b90064dca2323e8eefbcfa9a2f83e/jetified-play-services-measurement-sdk-api-17.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/298b90064dca2323e8eefbcfa9a2f83e/jetified-play-services-measurement-sdk-api-17.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-measurement-sdk-api/17.1.0/518f5c4c868378d826206557438219ae5880fdb2/play-services-measurement-sdk-api-17.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_test_runner_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_test_runner_1_1_0_aar.xml	(date 1612107170738)
+++ .idea/libraries/Gradle__androidx_test_runner_1_1_0_aar.xml	(date 1612107170738)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.test:runner:1.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fe4c75f24764e44bdd2ef8ce0d6af07e/runner-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fe4c75f24764e44bdd2ef8ce0d6af07e/runner-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fe4c75f24764e44bdd2ef8ce0d6af07e/runner-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test/runner/1.1.0/c274a591e1dc9f8d64f8f10a71d0e282078b1043/runner-1.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test/runner/1.1.0/c5c79ef06dbb738578ae3b6312fbca6755aa9193/runner-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml	(date 1612107170577)
+++ .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml	(date 1612107170577)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-livedata:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/df99a974fa1bb5b12dbaca6a5601e706/lifecycle-livedata-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/df99a974fa1bb5b12dbaca6a5601e706/lifecycle-livedata-2.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/df99a974fa1bb5b12dbaca6a5601e706/lifecycle-livedata-2.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-livedata/2.0.0/740ce61935bd789380c01178bd8ce402402ebd2f/lifecycle-livedata-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml	(date 1612107170485)
+++ .idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml	(date 1612107170485)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fda3d71ee2fedb604f7b377b984c8f7a/coordinatorlayout-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fda3d71ee2fedb604f7b377b984c8f7a/coordinatorlayout-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fda3d71ee2fedb604f7b377b984c8f7a/coordinatorlayout-1.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fda3d71ee2fedb604f7b377b984c8f7a/coordinatorlayout-1.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.coordinatorlayout/coordinatorlayout/1.0.0/4325b3c4422ad58201ed8dc15ae56bda9accedf2/coordinatorlayout-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/res/layout/layout_payment_bottom_shit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"10dp\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:gravity=\"center\"\r\n        android:text=\"@string/please_select_your_payment_method\" />\r\n\r\n    <GridLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:columnCount=\"1\"\r\n        android:rowCount=\"2\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_row=\"0\">\r\n\r\n            <Space\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/paypal_btn\"\r\n                android:layout_width=\"150dp\"\r\n                android:layout_height=\"150dp\"\r\n                android:layout_margin=\"5dp\"\r\n                app:cardCornerRadius=\"5sp\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"120dp\"\r\n                        android:background=\"@color/paypalColor\"\r\n                        android:padding=\"10dp\"\r\n                        app:srcCompat=\"@drawable/paypal_logo\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"PayPal\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <Space\r\n                android:id=\"@+id/space2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/stripe_btn\"\r\n                android:layout_width=\"150dp\"\r\n                android:layout_height=\"150dp\"\r\n                android:layout_margin=\"5dp\"\r\n                app:cardCornerRadius=\"5sp\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"120dp\"\r\n                        android:background=\"@color/colorPrimary\"\r\n                        android:padding=\"10dp\"\r\n                        app:srcCompat=\"@drawable/stripe_logo\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"Stripe\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <Space\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_row=\"1\">\r\n\r\n            <Space\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/razorpay_btn\"\r\n                android:layout_width=\"150dp\"\r\n                android:layout_height=\"150dp\"\r\n                android:layout_margin=\"5dp\"\r\n                app:cardCornerRadius=\"5sp\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"120dp\"\r\n                        android:background=\"@color/white\"\r\n                        android:padding=\"10dp\"\r\n                        app:srcCompat=\"@drawable/razorpay_128\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"Razorpay\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <Space\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </GridLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_payment_bottom_shit.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/layout_payment_bottom_shit.xml	(date 1612158118682)
@@ -138,6 +138,40 @@
                 </LinearLayout>
             </androidx.cardview.widget.CardView>
 
+            <Space
+                android:id="@+id/space3"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:layout_weight="1" />
+
+            <androidx.cardview.widget.CardView
+                android:id="@+id/mobiamobtn"
+                android:layout_width="150dp"
+                android:layout_height="150dp"
+                android:layout_margin="5dp"
+                app:cardCornerRadius="5sp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:orientation="vertical">
+
+                    <ImageView
+                        android:layout_width="match_parent"
+                        android:layout_height="120dp"
+                        android:background="@color/white"
+                        android:padding="10dp"
+                        app:srcCompat="@drawable/razorpay_128" />
+
+                    <TextView
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:gravity="center"
+                        android:text="PaymentWall"
+                        android:textSize="20sp" />
+                </LinearLayout>
+            </androidx.cardview.widget.CardView>
+
             <Space
                 android:layout_width="wrap_content"
                 android:layout_height="match_parent"
Index: .idea/libraries/Gradle__androidx_fragment_fragment_ktx_1_3_0_rc01_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Gradle: androidx.fragment:fragment-ktx:1.3.0-rc01@aar\">\r\n    <CLASSES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/res\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/AndroidManifest.xml\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment-ktx/1.3.0-rc01/b64a27a0cae3596d8bfba86d5fdb427c38b5a7ed/fragment-ktx-1.3.0-rc01-sources.jar!/\" />\r\n    </SOURCES>\r\n  </library>\r\n</component>
===================================================================
--- .idea/libraries/Gradle__androidx_fragment_fragment_ktx_1_3_0_rc01_aar.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/libraries/Gradle__androidx_fragment_fragment_ktx_1_3_0_rc02_aar.xml	(date 1612107170553)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Gradle: androidx.fragment:fragment-ktx:1.3.0-rc01@aar">
+  <library name="Gradle: androidx.fragment:fragment-ktx:1.3.0-rc02@aar">
     <CLASSES>
-      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/jars/classes.jar!/" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/res" />
-      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e9711218d5843d3ac4ce55f5eb920208/jetified-fragment-ktx-1.3.0-rc01/AndroidManifest.xml" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b344876527d62a05d7929ceb5f0762cb/jetified-fragment-ktx-1.3.0-rc02/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b344876527d62a05d7929ceb5f0762cb/jetified-fragment-ktx-1.3.0-rc02/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b344876527d62a05d7929ceb5f0762cb/jetified-fragment-ktx-1.3.0-rc02/AndroidManifest.xml" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment-ktx/1.3.0-rc01/b64a27a0cae3596d8bfba86d5fdb427c38b5a7ed/fragment-ktx-1.3.0-rc01-sources.jar!/" />
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment-ktx/1.3.0-rc02/b64a27a0cae3596d8bfba86d5fdb427c38b5a7ed/fragment-ktx-1.3.0-rc02-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/utils/ads/NativeAds.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/utils/ads/NativeAds.java	(date 1612119395214)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/utils/ads/NativeAds.java	(date 1612119395214)
@@ -0,0 +1,214 @@
+package tvseries.koreandramaengsub.freemovieapp.utils.ads;
+
+import android.app.Activity;
+import android.app.NativeActivity;
+import android.content.Intent;
+import android.net.Uri;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.appodeal.ads.Appodeal;
+import com.appodeal.ads.NativeAdView;
+import com.appodeal.ads.native_ad.views.NativeAdViewContentStream;
+import com.facebook.ads.Ad;
+import com.facebook.ads.AdError;
+import com.facebook.ads.NativeAdListener;
+import com.facebook.ads.NativeBannerAd;
+import com.facebook.ads.NativeBannerAdView;
+import com.google.android.ads.nativetemplates.TemplateView;
+import com.google.android.gms.ads.AdLoader;
+import com.google.android.gms.ads.AdRequest;
+import com.google.android.gms.ads.MobileAds;
+import com.google.android.gms.ads.formats.UnifiedNativeAd;
+import com.squareup.picasso.Picasso;
+import com.startapp.sdk.ads.nativead.NativeAdDetails;
+import com.startapp.sdk.ads.nativead.NativeAdPreferences;
+import com.startapp.sdk.ads.nativead.StartAppNativeAd;
+import com.startapp.sdk.adsbase.StartAppAd;
+import com.startapp.sdk.adsbase.adlisteners.AdEventListener;
+
+import java.util.List;
+
+import tvseries.koreandramaengsub.freemovieapp.R;
+import tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;
+import tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;
+
+public class NativeAds {
+    private static final String TAG = NativeAds.class.getSimpleName();
+    private static UnifiedNativeAd ad = null;
+
+    public NativeAds() {
+    }
+
+    public static void showAdmobNativeAds(Activity activity, TemplateView templateView) {
+        if (!PreferenceUtils.isActivePlan(activity)) {
+            String nativeAdId = new DatabaseHelper(activity).getConfigurationData().getAdsConfig().getAdmobNativeAdsId();
+            MobileAds.initialize(activity);
+            AdLoader adLoader = new AdLoader.Builder(activity, nativeAdId)
+                    .forUnifiedNativeAd(new UnifiedNativeAd.OnUnifiedNativeAdLoadedListener() {
+                        @Override
+                        public void onUnifiedNativeAdLoaded(UnifiedNativeAd unifiedNativeAd) {
+                            ad = unifiedNativeAd;
+                            if (unifiedNativeAd != null) {
+                                templateView.setNativeAd(ad);
+                            }
+                        }
+                    }).build();
+            adLoader.loadAd(new AdRequest.Builder().build());
+        } else {
+            templateView.setVisibility(View.GONE);
+        }
+    }
+
+    public static void releaseAdmobNativeAd() {
+        if (ad != null) {
+            ad.destroy();
+            Log.e(TAG, "Admob Native ad destroyed");
+        }
+    }
+
+    public static void showFANNativeBannerAd(Activity activity, RelativeLayout container) {
+        if (!PreferenceUtils.isActivePlan(activity)) {
+            String nativeAdId = new DatabaseHelper(activity).getConfigurationData().getAdsConfig().getFanNativeAdsPlacementId();
+            NativeBannerAd nativeBannerAd =
+                    new NativeBannerAd(activity, nativeAdId);
+            NativeAdListener listener = new NativeAdListener() {
+                @Override
+                public void onMediaDownloaded(Ad ad) {
+
+                }
+
+                @Override
+                public void onError(Ad ad, AdError adError) {
+                    Log.e(TAG, "FAN Native ad failed to load: " + adError.getErrorMessage());
+                }
+
+                @Override
+                public void onAdLoaded(Ad ad) {
+                    View adView = NativeBannerAdView.render(activity, nativeBannerAd,
+                            NativeBannerAdView.Type.HEIGHT_100);
+                    container.addView(adView);
+                }
+
+                @Override
+                public void onAdClicked(Ad ad) {
+
+                }
+
+                @Override
+                public void onLoggingImpression(Ad ad) {
+
+                }
+            };
+
+            //initiate a request to load an ad
+            nativeBannerAd.loadAd(
+                    nativeBannerAd.buildLoadAdConfig()
+                            .withAdListener(listener)
+                            .build());
+        }
+    }
+
+    public void showStartAppNativeAds(Activity activity, int adView) {
+        Appodeal.cache(activity, Appodeal.NATIVE);
+       // NativeAdViewContentStream nav_cs = (NativeAdViewContentStream) activity.findViewById(R.id.adview);
+        //nav_cs.setNativeAd(adView);
+
+    }
+
+
+
+
+//    public void showStartAppNativeAds(Activity activity, RelativeLayout adView) {
+//        if (!PreferenceUtils.isActivePlan(activity)) {
+//            String startAppAppId = new DatabaseHelper(activity).getConfigurationData().getAdsConfig().getStartappAppId();
+//            //String developerId = "165678100";
+//            String developerId = new DatabaseHelper(activity).getConfigurationData().getAdsConfig().getStartappDeveloperId();
+//            StartAppAd.init(activity, developerId, startAppAppId);
+//
+//            StartAppNativeAd startAppNativeAd = new StartAppNativeAd(activity);
+//            // Declare Native Ad Preferences
+//            NativeAdPreferences nativePrefs = new NativeAdPreferences()
+//                    .setAdsNumber(1)                // Load 1 Native Ads
+//                    .setAutoBitmapDownload(true)    // Retrieve Images object
+//                    .setPrimaryImageSize(2);        // 150x150 image
+//            startAppNativeAd.loadAd(nativePrefs, new AdEventListener() {
+//                @Override
+//                public void onReceiveAd(com.startapp.sdk.adsbase.Ad ad) {
+//                    // Native Ad failed to receive
+//                    List<NativeAdDetails> ads = startAppNativeAd.getNativeAds();    // get NativeAds list
+//                    if (ads != null) {
+//                        NativeAdDetails details = ads.get(0);
+//                        if (details != null){
+//                            adView.setVisibility(View.VISIBLE);
+//                            populateViews(details, adView, activity);
+//                        }else {
+//                            adView.setVisibility(View.GONE);
+//                        }
+//                    }
+//                    // Print all ads details to log
+//                    /*Iterator iterator = ads.iterator();
+//                    while(iterator.hasNext()){
+//                        Log.d("StartAppNativeAds", iterator.next().toString());
+//                    }*/
+//                }
+//
+//                @Override
+//                public void onFailedToReceiveAd (com.startapp.sdk.adsbase.Ad ad){
+//                    // Native Ad failed to receive
+//                    adView.setVisibility(View.GONE);
+//                }
+//            });
+//        }
+//    }
+//
+//    private void populateViews(NativeAdDetails details, RelativeLayout adView, Activity activity) {
+//        //image
+//        ImageView icon = adView.findViewById(R.id.startapp_nativead_image);
+//        Picasso.get().load(details.getSecondaryImageUrl()).into(icon);
+//        /*Glide.with(activity)
+//                .asBitmap()
+//                .load(details.getImageBitmap())
+//                .into(new SimpleTarget<Bitmap>() {
+//                    @Override
+//                    public void onResourceReady(Bitmap resource, Transition<? super Bitmap> transition) {
+//                        icon.setImageBitmap(resource);
+//                    }
+//                });*/
+//
+//        //Log.e("StartAppNativeAds", details.getImageUrl());
+//        //title
+//        TextView title = adView.findViewById(R.id.startapp_nativead_title);
+//        title.setText(details.getTitle());
+//        //description
+//        TextView des = adView.findViewById(R.id.startapp_nativead_details);
+//        des.setText(details.getDescription());
+//        //ratings
+//        TextView ratings = adView.findViewById(R.id.startapp_nativead_ratings);
+//        ratings.setText(String.valueOf(details.getRating()));
+//        //installs
+//        TextView installs = adView.findViewById(R.id.startapp_nativead_installs);
+//        installs.setText(details.getInstalls() + " installs");
+//
+//        //click
+//        Button button = adView.findViewById(R.id.startapp_nativead_button);
+//        button.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View view) {
+//                String appPackageName = details.getPackacgeName();
+//                try {
+//                    activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=" + appPackageName)));
+//                } catch (android.content.ActivityNotFoundException anfe) {
+//                    activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=" + appPackageName)));
+//                }
+//            }
+//        });
+
+  //  }
+
+}
+
Index: app/src/main/res/layout/fragment_tvseries.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout android:orientation=\"vertical\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <include\r\n        android:id=\"@+id/shimmer_view_container\"\r\n        layout=\"@layout/layout_dimmer_tvseries\"/>\r\n\r\n    <RelativeLayout\r\n        android:layout_below=\"@+id/shimmer_view_container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@+id/adView\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout\r\n                android:id=\"@+id/swipe_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/recyclerView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:scrollbars=\"vertical\"\r\n                    android:scrollingCache=\"true\"\r\n                    tools:listitem=\"@layout/card_reply\"\r\n                    android:paddingTop=\"70dp\"\r\n                    android:clipToPadding=\"false\"/>\r\n\r\n            </tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout>\r\n\r\n        </LinearLayout>\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/item_progress_bar\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:elevation=\"5dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:padding=\"5dp\"\r\n            android:visibility=\"gone\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/adView\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n    <com.appodeal.ads.BannerView\r\n        android:id=\"@+id/appodealBannerView_fragment_tvseries\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\"\r\n        android:focusable=\"true\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_tvseries.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/fragment_tvseries.xml	(date 1612107170776)
@@ -21,7 +21,7 @@
             android:layout_height="match_parent"
             android:orientation="vertical">
 
-            <tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout
+            <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
                 android:id="@+id/swipe_layout"
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
@@ -37,7 +37,7 @@
                     android:paddingTop="70dp"
                     android:clipToPadding="false"/>
 
-            </tvseries.koreandramaengsub.freemovieapp.view.SwipeRefreshLayout>
+            </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
 
         </LinearLayout>
 
Index: .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_2_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_2_aar.xml	(date 1612107170513)
+++ .idea/libraries/Gradle__androidx_databinding_viewbinding_4_1_2_aar.xml	(date 1612107170513)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.databinding:viewbinding:4.1.2@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/021ea2a1cc5e6a3e313220a4c45ad06d/jetified-viewbinding-4.1.2/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/021ea2a1cc5e6a3e313220a4c45ad06d/jetified-viewbinding-4.1.2/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/021ea2a1cc5e6a3e313220a4c45ad06d/jetified-viewbinding-4.1.2/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.databinding/viewbinding/4.1.2/f460b7c57a43705d73933813626a601f32ba2a21/viewbinding-4.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_test_espresso_espresso_idling_resource_3_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_test_espresso_espresso_idling_resource_3_1_0_aar.xml	(date 1612107170727)
+++ .idea/libraries/Gradle__androidx_test_espresso_espresso_idling_resource_3_1_0_aar.xml	(date 1612107170727)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.test.espresso:espresso-idling-resource:3.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/977adcf8fdd5c8998c7baa22383a22d7/espresso-idling-resource-3.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/977adcf8fdd5c8998c7baa22383a22d7/espresso-idling-resource-3.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/977adcf8fdd5c8998c7baa22383a22d7/espresso-idling-resource-3.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test.espresso/espresso-idling-resource/3.1.0/ac774bb29e6171578dc7508bf390a4a3ccbedfea/espresso-idling-resource-3.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test.espresso/espresso-idling-resource/3.1.0/85d1f70a486b5bfbd0666d08e23b06bce5264fa6/espresso-idling-resource-3.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_ads_lite_18_3_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_ads_lite_18_3_0_aar.xml	(date 1612107170664)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_ads_lite_18_3_0_aar.xml	(date 1612107170664)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-ads-lite:18.3.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30891204a1c2ed7a2212e9067e9e558b/jetified-play-services-ads-lite-18.3.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30891204a1c2ed7a2212e9067e9e558b/jetified-play-services-ads-lite-18.3.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/30891204a1c2ed7a2212e9067e9e558b/jetified-play-services-ads-lite-18.3.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-ads-lite/18.3.0/c08609e7434099cc6e5b3b495eb2edadab6aeaf2/play-services-ads-lite-18.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_savedstate_savedstate_1_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_savedstate_savedstate_1_0_0_aar.xml	(date 1612107170715)
+++ .idea/libraries/Gradle__androidx_savedstate_savedstate_1_0_0_aar.xml	(date 1612107170715)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.savedstate:savedstate:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1bb86eeb1c5d9a3a085a85765170daf2/jetified-savedstate-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1bb86eeb1c5d9a3a085a85765170daf2/jetified-savedstate-1.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1bb86eeb1c5d9a3a085a85765170daf2/jetified-savedstate-1.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.savedstate/savedstate/1.0.0/e6daf87ed227a6f80bb8accb466755a5ee01a652/savedstate-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml	(date 1612107170698)
+++ .idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml	(date 1612107170698)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-livedata-core:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a9076a1261d1926d6e714ab80d2474a5/lifecycle-livedata-core-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a9076a1261d1926d6e714ab80d2474a5/lifecycle-livedata-core-2.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a9076a1261d1926d6e714ab80d2474a5/lifecycle-livedata-core-2.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-livedata-core/2.0.0/c158207594782b42f3a2e08a5a029eb3319e4404/lifecycle-livedata-core-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/res/layout/content_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:keepScreenOn=\"true\"\r\n    android:orientation=\"vertical\"\r\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\r\n    tools:ctx=\".DetailsActivity\"\r\n    tools:showIn=\"@layout/activity_details\">\r\n\r\n    <include\r\n        android:id=\"@+id/shimmer_view_container\"\r\n        layout=\"@layout/layout_dimmer_detail\"\r\n        tools:visibility=\"gone\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/play\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"250dp\"\r\n        android:layout_below=\"@+id/shimmer_view_container\"\r\n        android:background=\"@color/black\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:visibility=\"gone\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/radioPlayImage\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"250dp\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:background=\"@color/black\"\r\n            android:clickable=\"false\"\r\n            android:focusable=\"true\"\r\n            android:src=\"@drawable/logo\"\r\n            android:visibility=\"gone\"\r\n            tools:visibility=\"visible\" />\r\n\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/player_layout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            tools:visibility=\"visible\">\r\n\r\n            <com.google.android.exoplayer2.ui.PlayerView\r\n                android:id=\"@+id/video_view\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                app:controller_layout_id=\"@layout/custom_exo_layout\" />\r\n\r\n            <com.google.android.exoplayer2.ui.PlayerControlView\r\n                android:id=\"@+id/cast_control_view\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:visibility=\"gone\"\r\n                tools:visibility=\"visible\">\r\n\r\n            </com.google.android.exoplayer2.ui.PlayerControlView>\r\n\r\n            <com.google.android.exoplayer2.ui.SubtitleView\r\n                android:id=\"@+id/subtitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\" />\r\n\r\n        </FrameLayout>\r\n\r\n        <WebView\r\n            android:id=\"@+id/webView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:visibility=\"gone\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/img_back\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:scaleType=\"fitXY\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:padding=\"5dp\"\r\n            app:srcCompat=\"@drawable/ic_action_back_arrow\"\r\n            tools:ignore=\"RtlSymmetry\" />\r\n\r\n        <androidx.mediarouter.app.MediaRouteButton\r\n            android:id=\"@+id/media_route_button\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:mediaRouteTypes=\"user\"\r\n            android:padding=\"5dp\"\r\n            android:visibility=\"visible\"\r\n            app:mediaRouteButtonTint=\"@color/white\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/chrome_cast_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"35dp\"\r\n            android:text=\"Chrome Casting ...\"\r\n            android:textColor=\"@android:color/holo_green_light\"\r\n            android:textStyle=\"bold\"\r\n            android:visibility=\"gone\" />\r\n\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/progressBar\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:src=\"@drawable/ic_outline_play_circle_filled_24px\"\r\n            android:visibility=\"gone\" />\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n        android:id=\"@+id/swipe_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/play\"\r\n        tools:visibility=\"visible\">\r\n\r\n        <androidx.core.widget.NestedScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/description_layout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:visibility=\"visible\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/poster_iv\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"350dp\"\r\n                        android:scaleType=\"centerCrop\"\r\n                        tools:src=\"@drawable/image_16\" />\r\n\r\n                    <com.balysv.materialripple.MaterialRippleLayout\r\n                        android:id=\"@+id/lyt_parent\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"350dp\"\r\n                        android:background=\"@drawable/gradient_white_transparent\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:paddingTop=\"10dp\">\r\n\r\n                        <RelativeLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\">\r\n                            <!--<ImageView\r\n                                android:layout_centerInParent=\"true\"\r\n                                android:src=\"@drawable/ic_outline_play_circle_filled_24px\"\r\n                                android:layout_width=\"38dp\"\r\n                                android:layout_height=\"38dp\" />-->\r\n\r\n\r\n                            <com.makeramen.roundedimageview.RoundedImageView\r\n                                android:id=\"@+id/image_thumb\"\r\n                                android:layout_width=\"155dp\"\r\n                                android:layout_height=\"220dp\"\r\n                                android:layout_alignParentBottom=\"true\"\r\n                                android:layout_marginBottom=\"20dp\"\r\n                                android:scaleType=\"fitXY\"\r\n                                app:riv_corner_radius=\"5dip\"\r\n                                app:riv_mutate_background=\"true\"\r\n                                tools:src=\"@drawable/album_art_placeholder_large\" />\r\n\r\n                            <LinearLayout\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_alignTop=\"@id/image_thumb\"\r\n                                android:layout_marginStart=\"20dp\"\r\n                                android:layout_marginEnd=\"15dp\"\r\n                                android:layout_marginBottom=\"25dp\"\r\n                                android:layout_toEndOf=\"@id/image_thumb\"\r\n                                android:gravity=\"bottom\"\r\n                                android:orientation=\"vertical\">\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/text_name\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:textSize=\"25sp\"\r\n                                    android:includeFontPadding=\"false\"\r\n                                    android:textStyle=\"bold\"\r\n                                    android:maxLines=\"2\"\r\n                                    android:ellipsize=\"end\"\r\n                                    tools:text=\"Two Lineah jkasdhjk\" />\r\n\r\n                                <View\r\n                                    android:layout_width=\"@dimen/spacing_medium\"\r\n                                    android:layout_height=\"0dp\" />\r\n\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/genre_tv\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginTop=\"5dp\"\r\n                                    android:ellipsize=\"end\"\r\n                                    android:includeFontPadding=\"false\"\r\n                                    android:maxLines=\"1\"\r\n                                    tools:text=\"Documentary\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\">\r\n\r\n                                    <ImageView\r\n                                        android:id=\"@+id/star_img\"\r\n                                        android:layout_width=\"30dp\"\r\n                                        android:layout_height=\"30dp\"\r\n                                        android:layout_marginTop=\"10dp\"\r\n                                        android:adjustViewBounds=\"true\"\r\n                                        android:background=\"@drawable/star_rating\" />\r\n\r\n                                    <TextView\r\n                                        android:id=\"@+id/text_imdb\"\r\n                                        android:layout_width=\"80dp\"\r\n                                        android:includeFontPadding=\"false\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:layout_marginLeft=\"10dp\"\r\n                                        android:layout_marginTop=\"5dp\"\r\n                                        android:layout_toRightOf=\"@+id/star_img\"\r\n                                        android:maxLines=\"1\"\r\n                                        android:textSize=\"35sp\"\r\n                                        tools:text=\"8.9\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                            </LinearLayout>\r\n\r\n                            <Button\r\n                                android:id=\"@+id/watch_now_bt\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"45dp\"\r\n                                android:backgroundTint=\"@color/colorPrimary\"\r\n                                android:text=\"@string/watch_now\"\r\n                                android:layout_marginStart=\"20dp\"\r\n                                android:layout_marginEnd=\"15dp\"\r\n                                android:layout_marginBottom=\"56dp\"\r\n                                android:layout_toEndOf=\"@id/image_thumb\"\r\n                                android:layout_alignParentBottom=\"true\"\r\n                                android:textColor=\"@color/white\" />\r\n\r\n                            <Button\r\n                                android:id=\"@+id/download_bt\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"45dp\"\r\n                                android:backgroundTint=\"@color/white\"\r\n                                android:text=\"@string/download\"\r\n                                android:layout_marginStart=\"20dp\"\r\n                                android:layout_marginEnd=\"15dp\"\r\n                                android:layout_marginBottom=\"16dp\"\r\n                                android:layout_toEndOf=\"@id/image_thumb\"\r\n                                android:layout_alignParentBottom=\"true\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:visibility=\"visible\" />\r\n\r\n                        </RelativeLayout>\r\n\r\n                    </com.balysv.materialripple.MaterialRippleLayout>\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/series_layout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"8dp\"\r\n                    android:layout_marginBottom=\"8dp\"\r\n                    android:padding=\"10dp\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/seriest_title_tv\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:textSize=\"18sp\"\r\n                        android:layout_alignParentLeft=\"true\"\r\n                        android:paddingEnd=\"5dp\"\r\n                        android:layout_toStartOf=\"@id/add_fav2\"\r\n                        android:maxLines=\"1\"\r\n                        android:ellipsize=\"end\"\r\n                        tools:text=\"series title\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/add_fav2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_toStartOf=\"@id/report_iv2\"\r\n                        android:layout_marginRight=\"8dp\"\r\n                        android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                        android:clickable=\"true\"\r\n                        android:focusable=\"true\"\r\n                        app:srcCompat=\"@drawable/outline_favorite_border_24\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/report_iv2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                        android:clickable=\"true\"\r\n                        android:focusable=\"true\"\r\n                        android:layout_marginRight=\"8dp\"\r\n                        android:layout_toStartOf=\"@id/share_iv3\"\r\n                        android:src=\"@drawable/ic_report\" />\r\n                    <ImageView\r\n                        android:id=\"@+id/share_iv3\"\r\n                        android:layout_marginEnd=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                        android:clickable=\"true\"\r\n                        android:focusable=\"true\"\r\n                        android:visibility=\"visible\"\r\n                        app:srcCompat=\"@drawable/ic_share_white\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_alignParentEnd=\"true\" />\r\n\r\n                </RelativeLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llbottomparent\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/spinner_container\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"?attr/title_backgroundColor\"\r\n                        android:visibility=\"visible\">\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:gravity=\"center_vertical\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_marginLeft=\"3dp\"\r\n                            android:textSize=\"16sp\"\r\n                            android:text=\"\uD83C\uDF38 Episode Select\"\r\n                            android:layout_alignParentLeft=\"true\"/>\r\n\r\n                        <Spinner\r\n                            android:id=\"@+id/season_spinner\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:gravity=\"right\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_alignParentRight=\"true\"/>\r\n\r\n                    </RelativeLayout>\r\n\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/rv_server_list\"\r\n                        android:paddingHorizontal=\"5dp\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:nestedScrollingEnabled=\"true\">\r\n\r\n                    </androidx.recyclerview.widget.RecyclerView>\r\n\r\n                    <RelativeLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n\r\n                        <LinearLayout\r\n                            android:id=\"@+id/tv_layout\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\"\r\n                            android:visibility=\"gone\">\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/tv_top_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:background=\"@color/white\"\r\n                                android:orientation=\"horizontal\"\r\n                                android:padding=\"10dp\">\r\n\r\n                                <ImageView\r\n                                    android:id=\"@+id/tv_thumb_iv\"\r\n                                    android:layout_width=\"50dp\"\r\n                                    android:layout_height=\"50dp\"\r\n                                    android:layout_gravity=\"center_vertical\" />\r\n\r\n                                <LinearLayout\r\n                                    android:layout_width=\"0dp\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginLeft=\"15dp\"\r\n                                    android:layout_weight=\"1\"\r\n                                    android:orientation=\"vertical\">\r\n\r\n                                    <TextView\r\n                                        android:id=\"@+id/tv_title_tv\"\r\n                                        android:layout_width=\"wrap_content\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:layout_marginBottom=\"8dp\"\r\n                                        android:text=\"Tv Title Name\"\r\n                                        android:textSize=\"20sp\" />\r\n\r\n                                    <TextView\r\n                                        android:id=\"@+id/watch_status_tv\"\r\n                                        android:layout_width=\"wrap_content\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:drawableLeft=\"@drawable/ic_fiber_manual_record_red\"\r\n                                        android:drawablePadding=\"8dp\"\r\n                                        android:text=\"Watching Live on Oxxo\" />\r\n\r\n                                    <TextView\r\n                                        android:id=\"@+id/watch_live_tv\"\r\n                                        android:layout_width=\"wrap_content\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:layout_marginTop=\"5dp\"\r\n                                        android:text=\"Watch Live Now\"\r\n                                        android:textAllCaps=\"true\"\r\n                                        android:textColor=\"@color/colorPrimaryDark\"\r\n                                        android:visibility=\"gone\" />\r\n\r\n                                </LinearLayout>\r\n\r\n                                <ImageView\r\n                                    android:id=\"@+id/share_iv\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_gravity=\"center_vertical\"\r\n                                    android:layout_weight=\"0\"\r\n                                    android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                                    android:clickable=\"true\"\r\n                                    android:focusable=\"true\"\r\n                                    android:padding=\"8dp\"\r\n                                    app:srcCompat=\"@drawable/ic_share_blue\" />\r\n\r\n                            </LinearLayout>\r\n\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginLeft=\"10dp\"\r\n                                android:layout_marginTop=\"10dp\"\r\n                                android:text=\"Now Watching\" />\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/p_shedule_layout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginLeft=\"10dp\"\r\n                                android:layout_marginTop=\"5dp\"\r\n                                android:layout_marginRight=\"10dp\"\r\n                                android:background=\"@drawable/rounded_white\"\r\n                                android:orientation=\"horizontal\"\r\n                                android:padding=\"10dp\">\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/time_tv\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:textColor=\"@color/red_600\"\r\n                                    tools:text=\"11:30\" />\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/program_type_tv\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginLeft=\"10dp\"\r\n                                    tools:text=\"Regular Program\" />\r\n\r\n\r\n                            </LinearLayout>\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/pro_guide_tv\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginLeft=\"10dp\"\r\n                                android:layout_marginTop=\"10dp\"\r\n                                android:text=\"@string/program_guide\" />\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/program_guide_rv\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"10dp\">\r\n\r\n                            </androidx.recyclerview.widget.RecyclerView>\r\n\r\n                        </LinearLayout>\r\n\r\n\r\n                    </RelativeLayout>\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/adView\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:layout_marginTop=\"8dp\"\r\n                        android:gravity=\"center\" />\r\n\r\n                    <com.appodeal.ads.BannerView\r\n                        android:id=\"@+id/appodealBannerView\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:orientation=\"vertical\"\r\n                        android:paddingVertical=\"10dp\">\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"40dp\"\r\n                            android:gravity=\"center_vertical\"\r\n                            android:textStyle=\"bold\"\r\n                            android:textSize=\"16sp\"\r\n                            android:paddingLeft=\"3dp\"\r\n                            android:background=\"?attr/title_backgroundColor\"\r\n                            android:text=\"\uD83D\uDCDA Description\"\r\n                            android:layout_alignParentLeft=\"true\"/>\r\n                        <TextView\r\n                            android:id=\"@+id/tv_details\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:paddingHorizontal=\"10dp\"\r\n                            android:text=\"Updating...\"\r\n                            android:textAppearance=\"@style/TextAppearance.smallNormal\"\r\n                            android:textSize=\"14sp\" />\r\n\r\n                    </LinearLayout>\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/llbottom\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"vertical\"\r\n                        android:paddingTop=\"10dp\">\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"40dp\"\r\n                            android:gravity=\"center_vertical\"\r\n                            android:textStyle=\"bold\"\r\n                            android:paddingLeft=\"3dp\"\r\n                            android:textSize=\"16sp\"\r\n                            android:background=\"?attr/title_backgroundColor\"\r\n                            android:text=\"\uD83D\uDCD6 Product Infomation\"\r\n                            android:layout_alignParentLeft=\"true\"/>\r\n                        <RelativeLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"5dp\"\r\n                            android:paddingHorizontal=\"10dp\">\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/director\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"@string/director\"\r\n                                android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_director\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"5dp\"\r\n                                android:layout_toEndOf=\"@id/director\"\r\n                                android:textAppearance=\"@style/TextAppearance.smallNormal\" />\r\n\r\n\r\n                        </RelativeLayout>\r\n\r\n                        <RelativeLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"8dp\"\r\n                            android:paddingHorizontal=\"10dp\">\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_release_date\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                        </RelativeLayout>\r\n\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"5dp\"\r\n                            android:paddingHorizontal=\"10dp\"\r\n                            android:orientation=\"horizontal\">\r\n\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"@string/genre\"\r\n                                android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_genre\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"5dp\"\r\n                                android:textAppearance=\"@style/TextAppearance.smallNormal\" />\r\n\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"5dp\"\r\n                            android:paddingHorizontal=\"10dp\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <TextView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"@string/cast_n_crew\"\r\n                                android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_cast\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:textAppearance=\"@style/TextAppearance.smallNormal\"\r\n                                android:visibility=\"gone\" />\r\n\r\n                            <androidx.recyclerview.widget.RecyclerView\r\n                                android:id=\"@+id/cast_rv\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"8dp\" />\r\n\r\n                        </LinearLayout>\r\n\r\n\r\n                    </LinearLayout>\r\n\r\n                    <View\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"1px\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@color/grey_transparent\" />\r\n\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_related\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:background=\"?attr/title_backgroundColor\"\r\n                        android:gravity=\"center_vertical\"\r\n                        android:textSize=\"16sp\"\r\n                        android:paddingLeft=\"3dp\"\r\n                        android:text=\"@string/you_may_also_like\"\r\n                        android:textAppearance=\"@style/TextAppearance.Small\" />\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/rv_related\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginBottom=\"10dp\">\r\n\r\n                    </androidx.recyclerview.widget.RecyclerView>\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:background=\"?attr/title_backgroundColor\"\r\n                    android:layout_gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:background=\"?attr/title_backgroundColor\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:textSize=\"20sp\"\r\n                    android:paddingLeft=\"3dp\"\r\n                    android:includeFontPadding=\"false\"\r\n                    android:textColor=\"@color/green_500\"\r\n                    android:text=\"✍\"\r\n                    android:textAppearance=\"@style/TextAppearance.Small\" />\r\n                <TextView\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:textSize=\"16sp\"\r\n                    android:includeFontPadding=\"false\"\r\n                    android:text=\" Comments\"\r\n                    android:textAppearance=\"@style/TextAppearance.Small\" />\r\n                </LinearLayout>\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/recyclerView_comment\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\">\r\n\r\n                </androidx.recyclerview.widget.RecyclerView>\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/llcomments\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\"\r\n                    android:padding=\"10dp\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/commentHeading\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"@string/comments\"\r\n                        android:textAppearance=\"@style/TextAppearance.Medium.Bold\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/et_comment\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"70dp\"\r\n                        android:layout_below=\"@id/commentHeading\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@drawable/comment_et_border\"\r\n                        android:hint=\"@string/your_comments\"\r\n                        android:padding=\"10dp\" />\r\n\r\n                    <Button\r\n                        android:id=\"@+id/btn_comment\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@id/et_comment\"\r\n                        android:layout_gravity=\"right\"\r\n                        android:text=\"@string/add_comments\"\r\n                        android:textAllCaps=\"false\"\r\n                        android:textColor=\"@color/colorPrimary\" />\r\n\r\n\r\n                </RelativeLayout>\r\n\r\n            </LinearLayout>\r\n\r\n        </androidx.core.widget.NestedScrollView>\r\n    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/des_back_iv\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"?attr/selectableItemBackground\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:padding=\"5dp\"\r\n        android:scaleType=\"fitXY\"\r\n        android:src=\"@drawable/ic_action_back_arrow\" />\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/linear_share\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"45dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"@drawable/rounded_toolbar_background\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"right\"\r\n            android:orientation=\"horizontal\">\r\n\r\n\r\n            <ImageView\r\n                android:id=\"@+id/add_fav\"\r\n                android:layout_width=\"24dp\"\r\n                android:layout_height=\"24dp\"\r\n                android:layout_marginStart=\"5dp\"\r\n                android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                android:clickable=\"true\"\r\n                android:focusable=\"true\"\r\n                android:visibility=\"visible\" />\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/report_iv\"\r\n                android:layout_marginHorizontal=\"8dp\"\r\n                android:layout_width=\"24dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                android:clickable=\"true\"\r\n                android:focusable=\"true\"\r\n                android:src=\"@drawable/ic_report\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/share_iv2\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginEnd=\"8dp\"\r\n                android:layout_weight=\"1\"\r\n                android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                android:clickable=\"true\"\r\n                android:focusable=\"true\"\r\n                android:visibility=\"visible\"\r\n                app:srcCompat=\"@drawable/ic_share_white\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_details.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/content_details.xml	(date 1612120876942)
@@ -515,6 +515,21 @@
                         android:layout_marginTop="8dp"
                         android:gravity="center" />
 
+                    <RelativeLayout
+                        android:id="@+id/admob_native_ad_container"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_margin="8dp">
+
+                        <com.google.android.ads.nativetemplates.TemplateView
+                            android:id="@+id/admob_nativead_template"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            app:gnt_template_type="@layout/gnt_small_template_view"
+                            android:visibility="gone"/>
+
+                    </RelativeLayout>
+
                     <com.appodeal.ads.BannerView
                         android:id="@+id/appodealBannerView"
                         android:layout_width="match_parent"
Index: .idea/libraries/Gradle__net_sf_kxml_kxml2_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__net_sf_kxml_kxml2_2_3_0.xml	(date 1612107170769)
+++ .idea/libraries/Gradle__net_sf_kxml_kxml2_2_3_0.xml	(date 1612107170769)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: net.sf.kxml:kxml2:2.3.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.sf.kxml/kxml2/2.3.0/ccbc77a5fd907ef863c29f3596c6f54ffa4e9442/kxml2-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.sf.kxml/kxml2/2.3.0/dcb10030b92be67fd9dd224ade52310e40bbaf33/kxml2-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/net.sf.kxml/kxml2/2.3.0/309cd2cff7260e465792fda3dcbb063b730d8050/kxml2-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_base_17_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_base_17_1_0_aar.xml	(date 1612107170680)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_measurement_base_17_1_0_aar.xml	(date 1612107170680)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-measurement-base:17.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7678a1acf0ad54916fdaf8d602864959/jetified-play-services-measurement-base-17.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7678a1acf0ad54916fdaf8d602864959/jetified-play-services-measurement-base-17.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7678a1acf0ad54916fdaf8d602864959/jetified-play-services-measurement-base-17.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-measurement-base/17.1.0/b18bc04db70f278c1485415dfaefe2ce66588fe8/play-services-measurement-base-17.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_stripe_stripe_android_16_2_1_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_stripe_stripe_android_16_2_1_aar.xml	(date 1612107170763)
+++ .idea/libraries/Gradle__com_stripe_stripe_android_16_2_1_aar.xml	(date 1612107170763)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: com.stripe:stripe-android:16.2.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/aa899a7c18f82ecf03bd3cb5e5848d48/jetified-stripe-android-16.2.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/aa899a7c18f82ecf03bd3cb5e5848d48/jetified-stripe-android-16.2.1/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/aa899a7c18f82ecf03bd3cb5e5848d48/jetified-stripe-android-16.2.1/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-android/16.2.1/950c72abc0ccd35c79ce00d5964f8889b334e10f/stripe-android-16.2.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-android/16.2.1/9806511d12bb50fc46255a1d1cd08c137774d278/stripe-android-16.2.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/paymentwall-android-sdk/animeApp.paymentwall-android-sdk.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/paymentwall-android-sdk/animeApp.paymentwall-android-sdk.iml	(date 1612157044716)
+++ .idea/modules/paymentwall-android-sdk/animeApp.paymentwall-android-sdk.iml	(date 1612157044716)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":paymentwall-android-sdk" external.linked.project.path="$MODULE_DIR$/../../../paymentwall-android-sdk" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="animeApp" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":paymentwall-android-sdk" />
+        <option name="LAST_SUCCESSFUL_SYNC_AGP_VERSION" />
+        <option name="LAST_KNOWN_AGP_VERSION" />
+      </configuration>
+    </facet>
+    <facet type="java-gradle" name="Java-Gradle">
+      <configuration>
+        <option name="BUILD_FOLDER_PATH" value="$MODULE_DIR$/../../../paymentwall-android-sdk/build" />
+        <option name="BUILDABLE" value="false" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../paymentwall-android-sdk">
+      <excludeFolder url="file://$MODULE_DIR$/../../../paymentwall-android-sdk/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../paymentwall-android-sdk/build" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_gass_18_3_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_gass_18_3_0_aar.xml	(date 1612107170675)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_gass_18_3_0_aar.xml	(date 1612107170675)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-gass:18.3.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3b18212a99df269cf9cf0361a3acafa1/jetified-play-services-gass-18.3.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3b18212a99df269cf9cf0361a3acafa1/jetified-play-services-gass-18.3.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3b18212a99df269cf9cf0361a3acafa1/jetified-play-services-gass-18.3.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-gass/18.3.0/7b2b904a57fae0b77a9d2faf5284e6788f3223ba/play-services-gass-18.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_fragment_fragment_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_fragment_fragment_1_1_0_aar.xml	(date 1612107170519)
+++ .idea/libraries/Gradle__androidx_fragment_fragment_1_1_0_aar.xml	(date 1612107170519)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.fragment:fragment:1.1.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/10bf8424f6b2f6df24d0ac6eeecb0e30/fragment-1.1.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/10bf8424f6b2f6df24d0ac6eeecb0e30/fragment-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/10bf8424f6b2f6df24d0ac6eeecb0e30/fragment-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/10bf8424f6b2f6df24d0ac6eeecb0e30/fragment-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.1.0/b9ebb04df2cb0cad4419af3c658690bc82aa5706/fragment-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/database/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp.database;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.util.Log;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport tvseries.koreandramaengsub.freemovieapp.models.Work;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.ActiveStatus;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.User;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AdsConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AppConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.Configuration;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.PaymentConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\n\r\npublic class DatabaseHelper extends SQLiteOpenHelper {\r\n\r\n    private static final int DATABASE_VERSION = 3;\r\n    public static final String DATABASE_NAME = \"com.oxoo.spagreen.db\";\r\n\r\n    //config table\r\n    private static final String CONFIG_TABLE_NAME = \"configurations\";\r\n    private static final String CONFIG_COLUMN_ID = \"id\";\r\n    private static final String CONFIG_COLUMN_MENU = \"menu\";\r\n    private static final String CONFIG_COLUMN_PROGRAM_GUIDE_ENABLE = \"program_guide\";\r\n    private static final String CONFIG_COLUMN_MANDATORY_LOGIN = \"mandatory_login\";\r\n    private static final String CONFIG_COLUMN_GENRE_SHOW = \"genre_show\";\r\n    private static final String CONFIG_COLUMN_COUNTRY_SHOW = \"country_show\";\r\n    private static final String CONFIG_COLUMN_ADS_ENABLE = \"ads_enable\";\r\n    private static final String CONFIG_COLUMN_AD_NETWOTK_NAME = \"ad_network_name\";\r\n    private static final String CONFIG_COLUMN_ADMOB_APP_ID = \"admob_app_id\";\r\n    private static final String CONFIG_COLUMN_ADMOB_BANNER_ID = \"admob_banner_id\";\r\n    private static final String CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID = \"admob_interstitial_id\";\r\n    private static final String CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID = \"admob_rewardedvideo_id\";\r\n    private static final String CONFIG_COLUMN_ADMOB_APPOPEN_ID = \"admob_appopen_ads_id\";\r\n    private static final String CONFIG_COLUMN_FAN_BANNER_ID = \"fan_banner_id\";\r\n    private static final String CONFIG_COLUMN_FAN_NATIVE_ID = \"fan_native_id\";\r\n    private static final String CONFIG_COLUMN_FAN_INTERSTITIAL_ID = \"fan_interstitial_id\";\r\n    private static final String CONFIG_COLUMN_STARTAPP_ID = \"startapp_id\";\r\n\r\n    private static final String PAYMENT_CONFIG_CURRENCY_SYMBOL = \"payment_config_currency_symbol\";\r\n    private static final String PAYMENT_CONFIG_PAYPAL_EMAIL = \"payment_config_paypal_email\";\r\n    private static final String PAYMENT_CONFIG_PAYPAL_CLIENT_ID = \"payment_config_paypal_client_id\";\r\n    private static final String PAYMENT_CONFIG_STRIPE_PUBLISH_KEY = \"payment_config_stripe_publishable_key\";\r\n    private static final String PAYMENT_CONFIG_STRIPE_SECRET_KEY = \"payment_config_stripe_secret_key\";\r\n    private static final String PAYMENT_CONFIG_CURRENCY = \"payment_config_currency\";\r\n    private static final String PAYMENT_CONFIG_EXCHANGE_RATE = \"exchange_rate\";\r\n    private static final String PAYMENT_CONFIG_RAZOR_PAY_KEY_ID = \"razorpay_key_id\";\r\n    private static final String PAYMENT_CONFIG_RAZOR_PAY_KEY_SECRETE = \"razorpay_key_secrete\";\r\n    private static final String PAYMENT_CONFIG_PAYPAL_ENABLE = \"paypal_enable\";\r\n    private static final String PAYMENT_CONFIG_STRIPE_ENABLE = \"stripe_enable\";\r\n    private static final String PAYMENT_CONFIG_RAZORPAY_ENABLE = \"razorpay_enable\";\r\n    //private static final String PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE = \"razorpay_exchange_rate\";\r\n\r\n    //subscription table\r\n    private static final String SUBS_TABLE_NAME = \"subscription_table\";\r\n    private static final String SUBS_COLUMN_ID = \"id\";\r\n    private static final String SUBS_COLUMN_STATUS = \"status\";\r\n    private static final String SUBS_COLUMN_PACKAGE_TITLE = \"package_title\";\r\n    private static final String SUBS_COLUMN_EXPIRE_DATE = \"expire_date\";\r\n    private static final String SUBS_COLUMN_EXPIRE_TIME = \"expire_time\";\r\n    //user data table\r\n    private static final String USER_TABLE_NAME = \"user_table\";\r\n    private static final String USER_COLUMN_ID = \"id\";\r\n    private static final String USER_COLUMN_NAME = \"user_name\";\r\n    private static final String USER_COLUMN_USER_ID = \"user_id\";\r\n    private static final String USER_COLUMN_EMAIL = \"user_email\";\r\n    // private static final String USER_COLUMN_PHONE = \"user_phone\";\r\n    private static final String USER_COLUMN_STATUS = \"status\";\r\n    private static final String USER_COLUMN_PROFILE_IMAGE_URL = \"user_profile_image\";\r\n\r\n    private static final String MOVIE_TABLE_NAME = \"movie_table\";\r\n    public static final String LAST_MOVIE = \"user_last_movie\";\r\n    //download table\r\n    public static final String DOWNLOAD_TABLE_NAME = \"download_table\";\r\n    public static final String DOWNLOAD_COLUMN_ID = \"id\";\r\n    public static final String WORK_ID = \"work_id\";\r\n    public static final String DOWNLOAD_ID = \"download_id\";\r\n    public static final String FILE_NAME = \"file_name\";\r\n    public static final String TOTAL_SIZE = \"total_size\";\r\n    public static final String DOWNLOAD_SIZE = \"download_size\";\r\n    public static final String DOWNLOAD_STATUS = \"download_status\";\r\n    public static final String URL = \"url\";\r\n    public static final String URL_SUB_LIST = \"url_sub_list\";\r\n    public static final String APP_CLOSE_STATUS = \"app_close_statuss\";\r\n\r\n    public static final String MAP_MOVIE_TABLE_NAME = \"movie_table\";\r\n    public DatabaseHelper(Context context) {\r\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase sqLiteDatabase) {\r\n        sqLiteDatabase.execSQL(CREATE_CONFIG_TABLE());\r\n        sqLiteDatabase.execSQL(CREATE_SUBSCRIPTION_STATUS_TABLE());\r\n        sqLiteDatabase.execSQL(CREATE_USER_DATA_TABLE());\r\n        sqLiteDatabase.execSQL(CREATE_DOWNLOAD_DATA_TABLE());\r\n        sqLiteDatabase.execSQL(CREATE_CONFIG_MOVIE_TABLE_NAME());\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\r\n        sqLiteDatabase.execSQL(\"DROP TABLE IF EXISTS \" + CONFIG_TABLE_NAME);\r\n        sqLiteDatabase.execSQL(\"DROP TABLE IF EXISTS \" + SUBS_TABLE_NAME);\r\n        sqLiteDatabase.execSQL(\"DROP TABLE IF EXISTS \" + USER_TABLE_NAME);\r\n        sqLiteDatabase.execSQL(\"DROP TABLE IF EXISTS \" + DOWNLOAD_TABLE_NAME);\r\n        sqLiteDatabase.execSQL(\"DROP TABLE IF EXISTS \" + MOVIE_TABLE_NAME);\r\n        onCreate(sqLiteDatabase);\r\n\r\n/*\r\n\r\n        if (oldVersion < 2) {\r\n            sqLiteDatabase.execSQL(DATABASE_ALTER_USER_1);\r\n            sqLiteDatabase.execSQL(DATABASE_ALTER_CONFIG_1);\r\n        }\r\n*/\r\n\r\n    }\r\n\r\n    /* private static final String DATABASE_ALTER_USER_1 = \"ALTER TABLE \"\r\n              + USER_TABLE_NAME + \" ADD COLUMN \" + USER_COLUMN_PHONE + \" TEXT;\";\r\n\r\n      private static final String DATABASE_ALTER_CONFIG_1 = \"ALTER TABLE \"\r\n              + CONFIG_TABLE_NAME + \" ADD COLUMN \" + PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE + \" TEXT;\";\r\n  */\r\n    private String CREATE_CONFIG_MOVIE_TABLE_NAME() {\r\n        return \"CREATE TABLE IF NOT EXISTS \" + MOVIE_TABLE_NAME +\r\n                \" (\" + LAST_MOVIE + \" TEXT\" + \")\";\r\n    }\r\n\r\n    public long insertMapMovie(String maps) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues contentValues = new ContentValues();\r\n\r\n        contentValues.put(LAST_MOVIE, maps);\r\n\r\n        long id = db.insert(MOVIE_TABLE_NAME, null, contentValues);\r\n        db.close();\r\n\r\n        return id;\r\n    }\r\n    public void deleteAllMapMovie() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(\"delete from \" + MOVIE_TABLE_NAME);\r\n        db.close();\r\n    }\r\n    public String getMapMovie() {\r\n        // get readable database as we are not inserting anything\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        String out = \"\";\r\n        User user = new User();\r\n\r\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + MOVIE_TABLE_NAME, null);\r\n\r\n        if (cursor != null)\r\n            if (cursor.moveToFirst()) {\r\n                while (!cursor.isAfterLast()) {\r\n                    // prepare appConfig object\r\n                    out = cursor.getString(cursor.getColumnIndex(LAST_MOVIE));\r\n                    cursor.moveToNext();\r\n                }\r\n            }\r\n\r\n        // close the db connection\r\n        cursor.close();\r\n        if(out.equals(\"{}\")) out = \"\";\r\n        return out;\r\n    }\r\n\r\n    //config table\r\n    private String CREATE_CONFIG_TABLE() {\r\n        return \"CREATE TABLE IF NOT EXISTS \" + CONFIG_TABLE_NAME +\r\n                \" (\" + CONFIG_COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\r\n                CONFIG_COLUMN_MENU + \" TEXT,\" +\r\n                CONFIG_COLUMN_PROGRAM_GUIDE_ENABLE + \" INTEGER DEFAULT 0,\" +\r\n                CONFIG_COLUMN_MANDATORY_LOGIN + \" INTEGER DEFAULT 0,\" +\r\n                CONFIG_COLUMN_GENRE_SHOW + \" INTEGER DEFAULT 0,\" +\r\n                CONFIG_COLUMN_COUNTRY_SHOW + \" INTEGER DEFAULT 0,\" +\r\n\r\n                CONFIG_COLUMN_ADS_ENABLE + \" TEXT,\" +\r\n                CONFIG_COLUMN_AD_NETWOTK_NAME + \" TEXT,\" +\r\n                CONFIG_COLUMN_ADMOB_APP_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_ADMOB_BANNER_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_ADMOB_APPOPEN_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_FAN_BANNER_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_FAN_NATIVE_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_FAN_INTERSTITIAL_ID + \" TEXT,\" +\r\n                CONFIG_COLUMN_STARTAPP_ID + \" TEXT,\" +\r\n\r\n                PAYMENT_CONFIG_CURRENCY_SYMBOL + \" TEXT,\" +\r\n                PAYMENT_CONFIG_PAYPAL_EMAIL + \" TEXT,\" +\r\n                PAYMENT_CONFIG_PAYPAL_CLIENT_ID + \" TEXT,\" +\r\n                PAYMENT_CONFIG_EXCHANGE_RATE + \" TEXT,\" +\r\n                PAYMENT_CONFIG_STRIPE_PUBLISH_KEY + \" TEXT,\" +\r\n                PAYMENT_CONFIG_STRIPE_SECRET_KEY + \" TEXT,\" +\r\n                PAYMENT_CONFIG_RAZOR_PAY_KEY_ID + \" TEXT,\" +\r\n                PAYMENT_CONFIG_RAZOR_PAY_KEY_SECRETE + \" TEXT,\" +\r\n                PAYMENT_CONFIG_PAYPAL_ENABLE + \" INTEGER DEFAULT 0,\" +\r\n                PAYMENT_CONFIG_STRIPE_ENABLE + \" INTEGER DEFAULT 0,\" +\r\n                PAYMENT_CONFIG_RAZORPAY_ENABLE + \" INTEGER DEFAULT 0,\" +\r\n                //PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE + \" TEXT,\" +\r\n                PAYMENT_CONFIG_CURRENCY + \" TEXT\" + \")\";\r\n    }\r\n\r\n    public long insertConfigurationData(Configuration configuration) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues contentValues = new ContentValues();\r\n\r\n        contentValues.put(CONFIG_COLUMN_MENU, configuration.getAppConfig().getMenu());\r\n        contentValues.put(CONFIG_COLUMN_PROGRAM_GUIDE_ENABLE, configuration.getAppConfig().getProgramGuideEnable());\r\n        contentValues.put(CONFIG_COLUMN_MANDATORY_LOGIN, configuration.getAppConfig().getMandatoryLogin());\r\n        contentValues.put(CONFIG_COLUMN_GENRE_SHOW, configuration.getAppConfig().getGenreVisible());\r\n        contentValues.put(CONFIG_COLUMN_COUNTRY_SHOW, configuration.getAppConfig().getCountryVisible());\r\n\r\n        contentValues.put(CONFIG_COLUMN_ADS_ENABLE, configuration.getAdsConfig().getAdsEnable());\r\n        contentValues.put(CONFIG_COLUMN_AD_NETWOTK_NAME, configuration.getAdsConfig().getMobileAdsNetwork());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_APP_ID, configuration.getAdsConfig().getAdmobAppId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_BANNER_ID, configuration.getAdsConfig().getAdmobBannerAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobInterstitialAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_BANNER_ID, configuration.getAdsConfig().getFanBannerAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_NATIVE_ID, configuration.getAdsConfig().getFanNativeAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_INTERSTITIAL_ID, configuration.getAdsConfig().getFanInterstitialAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_STARTAPP_ID, configuration.getAdsConfig().getStartappAppId());\r\n\r\n        contentValues.put(PAYMENT_CONFIG_CURRENCY_SYMBOL, configuration.getPaymentConfig().getCurrencySymbol());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_EMAIL, configuration.getPaymentConfig().getPaypalEmail());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_CLIENT_ID, configuration.getPaymentConfig().getPaypalClientId());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_PUBLISH_KEY, configuration.getPaymentConfig().getStripePublishableKey());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_SECRET_KEY, configuration.getPaymentConfig().getStripeSecretKey());\r\n        contentValues.put(PAYMENT_CONFIG_CURRENCY, configuration.getPaymentConfig().getCurrency());\r\n        contentValues.put(PAYMENT_CONFIG_EXCHANGE_RATE, configuration.getPaymentConfig().getExchangeRate());\r\n        contentValues.put(PAYMENT_CONFIG_RAZOR_PAY_KEY_ID, configuration.getPaymentConfig().getRazorpayKeyId());\r\n        contentValues.put(PAYMENT_CONFIG_RAZOR_PAY_KEY_SECRETE, configuration.getPaymentConfig().getRazorpayKeySecret());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_ENABLE, configuration.getPaymentConfig().getPaypalEnable());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_ENABLE, configuration.getPaymentConfig().getStripeEnable());\r\n        contentValues.put(PAYMENT_CONFIG_RAZORPAY_ENABLE, configuration.getPaymentConfig().getRazorpayEnable());\r\n        //contentValues.put(PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE, configuration.getPaymentConfig().getRazorpayExchangeRate());\r\n\r\n        long id = db.insert(CONFIG_TABLE_NAME, null, contentValues);\r\n        db.close();\r\n\r\n        return id;\r\n    }\r\n\r\n    public Configuration getConfigurationData() {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Configuration configuration = new Configuration();\r\n        AppConfig appConfig = new AppConfig();\r\n        AdsConfig adsConfig = new AdsConfig();\r\n        PaymentConfig paymentConfig = new PaymentConfig();\r\n\r\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + CONFIG_TABLE_NAME, null);\r\n\r\n        if (cursor != null)\r\n            if (cursor.moveToFirst()) {\r\n                while (!cursor.isAfterLast()) {\r\n\r\n                    appConfig.setMenu(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_MENU)));\r\n                    appConfig.setProgramGuideEnable(cursor.getInt(cursor.getColumnIndex(CONFIG_COLUMN_PROGRAM_GUIDE_ENABLE)) > 0);\r\n                    appConfig.setMandatoryLogin(cursor.getInt(cursor.getColumnIndex(CONFIG_COLUMN_MANDATORY_LOGIN)) > 0);\r\n                    appConfig.setGenreVisible(cursor.getInt(cursor.getColumnIndex(CONFIG_COLUMN_GENRE_SHOW)) > 0);\r\n                    appConfig.setCountryVisible(cursor.getInt(cursor.getColumnIndex(CONFIG_COLUMN_COUNTRY_SHOW)) > 0);\r\n\r\n                    adsConfig.setAdsEnable(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADS_ENABLE)));\r\n                    adsConfig.setMobileAdsNetwork(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_AD_NETWOTK_NAME)));\r\n                    adsConfig.setAdmobAppId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_APP_ID)));\r\n                    adsConfig.setAdmobBannerAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_BANNER_ID)));\r\n                    adsConfig.setAdmobInterstitialAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID)));\r\n                    adsConfig.setAdmobRewardedVideoAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID)));\r\n                    adsConfig.setAdmobAppOpenAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_APPOPEN_ID)));\r\n                    adsConfig.setFanNativeAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_NATIVE_ID)));\r\n                    adsConfig.setFanBannerAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_BANNER_ID)));\r\n                    adsConfig.setFanInterstitialAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_INTERSTITIAL_ID)));\r\n                    adsConfig.setStartappAppId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_STARTAPP_ID)));\r\n\r\n                    paymentConfig.setCurrencySymbol(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_CURRENCY_SYMBOL)));\r\n                    paymentConfig.setCurrency(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_CURRENCY)));\r\n                    paymentConfig.setPaypalEmail(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_PAYPAL_EMAIL)));\r\n                    paymentConfig.setPaypalClientId(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_PAYPAL_CLIENT_ID)));\r\n                    paymentConfig.setStripePublishableKey(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_STRIPE_PUBLISH_KEY)));\r\n                    paymentConfig.setStripeSecretKey(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_STRIPE_SECRET_KEY)));\r\n                    paymentConfig.setExchangeRate(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_EXCHANGE_RATE)));\r\n                    paymentConfig.setRazorpayKeyId(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_RAZOR_PAY_KEY_ID)));\r\n                    paymentConfig.setRazorpayKeySecret(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_RAZOR_PAY_KEY_SECRETE)));\r\n                    paymentConfig.setPaypalEnable(cursor.getInt(cursor.getColumnIndex(PAYMENT_CONFIG_PAYPAL_ENABLE)) > 0);\r\n                    paymentConfig.setStripeEnable(cursor.getInt(cursor.getColumnIndex(PAYMENT_CONFIG_STRIPE_ENABLE)) > 0);\r\n                    paymentConfig.setRazorpayEnable(cursor.getInt(cursor.getColumnIndex(PAYMENT_CONFIG_RAZORPAY_ENABLE)) > 0);\r\n                    // paymentConfig.setRazorpayExchangeRate(cursor.getString(cursor.getColumnIndex(PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE)));\r\n\r\n                    cursor.moveToNext();\r\n                }\r\n\r\n                configuration.setAppConfig(appConfig);\r\n                configuration.setAdsConfig(adsConfig);\r\n                configuration.setPaymentConfig(paymentConfig);\r\n            }\r\n\r\n        cursor.close();\r\n        return configuration;\r\n    }\r\n\r\n    public int getConfigurationCount() {\r\n        String countQuery = \"SELECT  * FROM \" + CONFIG_TABLE_NAME;\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(countQuery, null);\r\n\r\n        int count = cursor.getCount();\r\n        cursor.close();\r\n\r\n        // return count\r\n        return count;\r\n    }\r\n\r\n    public void deleteAllAppConfig() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(\"delete from \" + CONFIG_TABLE_NAME);\r\n        db.close();\r\n    }\r\n\r\n    public int updateConfigurationData(Configuration configuration, long id) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        ContentValues contentValues = new ContentValues();\r\n\r\n        contentValues.put(CONFIG_COLUMN_MENU, configuration.getAppConfig().getMenu());\r\n        contentValues.put(CONFIG_COLUMN_PROGRAM_GUIDE_ENABLE, configuration.getAppConfig().getProgramGuideEnable());\r\n        contentValues.put(CONFIG_COLUMN_MANDATORY_LOGIN, configuration.getAppConfig().getMandatoryLogin());\r\n        contentValues.put(CONFIG_COLUMN_GENRE_SHOW, configuration.getAppConfig().getGenreVisible());\r\n        contentValues.put(CONFIG_COLUMN_COUNTRY_SHOW, configuration.getAppConfig().getCountryVisible());\r\n\r\n        contentValues.put(CONFIG_COLUMN_ADS_ENABLE, configuration.getAdsConfig().getAdsEnable());\r\n        contentValues.put(CONFIG_COLUMN_AD_NETWOTK_NAME, configuration.getAdsConfig().getMobileAdsNetwork());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_APP_ID, configuration.getAdsConfig().getAdmobAppId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_BANNER_ID, configuration.getAdsConfig().getAdmobBannerAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobInterstitialAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());\r\n        contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_BANNER_ID, configuration.getAdsConfig().getFanBannerAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_NATIVE_ID, configuration.getAdsConfig().getFanNativeAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_FAN_INTERSTITIAL_ID, configuration.getAdsConfig().getFanInterstitialAdsPlacementId());\r\n        contentValues.put(CONFIG_COLUMN_STARTAPP_ID, configuration.getAdsConfig().getStartappAppId());\r\n\r\n        contentValues.put(PAYMENT_CONFIG_CURRENCY_SYMBOL, configuration.getPaymentConfig().getCurrencySymbol());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_EMAIL, configuration.getPaymentConfig().getPaypalEmail());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_CLIENT_ID, configuration.getPaymentConfig().getPaypalClientId());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_PUBLISH_KEY, configuration.getPaymentConfig().getStripePublishableKey());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_SECRET_KEY, configuration.getPaymentConfig().getStripeSecretKey());\r\n        contentValues.put(PAYMENT_CONFIG_CURRENCY, configuration.getPaymentConfig().getCurrency());\r\n        contentValues.put(PAYMENT_CONFIG_EXCHANGE_RATE, configuration.getPaymentConfig().getExchangeRate());\r\n        contentValues.put(PAYMENT_CONFIG_RAZOR_PAY_KEY_ID, configuration.getPaymentConfig().getRazorpayKeyId());\r\n        contentValues.put(PAYMENT_CONFIG_RAZOR_PAY_KEY_SECRETE, configuration.getPaymentConfig().getRazorpayKeySecret());\r\n        contentValues.put(PAYMENT_CONFIG_PAYPAL_ENABLE, configuration.getPaymentConfig().getPaypalEnable());\r\n        contentValues.put(PAYMENT_CONFIG_STRIPE_ENABLE, configuration.getPaymentConfig().getStripeEnable());\r\n        contentValues.put(PAYMENT_CONFIG_RAZORPAY_ENABLE, configuration.getPaymentConfig().getRazorpayEnable());\r\n        // contentValues.put(PAYMENT_CONFIG_RAZORPAY_EXCHANGE_RATE, configuration.getPaymentConfig().getRazorpayExchangeRate());\r\n\r\n        // updating row\r\n        return db.update(CONFIG_TABLE_NAME, contentValues, CONFIG_COLUMN_ID + \" = ?\",\r\n                new String[]{String.valueOf(id)});\r\n    }\r\n\r\n\r\n    //subscription table\r\n    private String CREATE_SUBSCRIPTION_STATUS_TABLE() {\r\n        return \"CREATE TABLE IF NOT EXISTS \" + SUBS_TABLE_NAME +\r\n                \" (\" + SUBS_COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\r\n                SUBS_COLUMN_STATUS + \" TEXT,\" +\r\n                SUBS_COLUMN_PACKAGE_TITLE + \" TEXT,\" +\r\n                SUBS_COLUMN_EXPIRE_TIME + \" INTEGER,\" +\r\n                SUBS_COLUMN_EXPIRE_DATE + \" TEXT\" + \")\";\r\n    }\r\n\r\n    public long insertActiveStatusData(ActiveStatus activeStatus) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(SUBS_COLUMN_STATUS, activeStatus.getStatus());\r\n        contentValues.put(SUBS_COLUMN_PACKAGE_TITLE, activeStatus.getPackageTitle());\r\n        contentValues.put(SUBS_COLUMN_EXPIRE_DATE, activeStatus.getExpireDate());\r\n        contentValues.put(SUBS_COLUMN_EXPIRE_TIME, PreferenceUtils.getExpireTime());\r\n\r\n        long id = db.insert(SUBS_TABLE_NAME, null, contentValues);\r\n        db.close();\r\n        return id;\r\n    }\r\n\r\n    public ActiveStatus getActiveStatusData() {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        ActiveStatus activeStatus = new ActiveStatus();\r\n\r\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + SUBS_TABLE_NAME, null);\r\n\r\n        if (cursor != null)\r\n            if (cursor.moveToFirst()) {\r\n                while (!cursor.isAfterLast()) {\r\n                    // prepare appConfig object\r\n                    activeStatus.setStatus(cursor.getString(cursor.getColumnIndex(SUBS_COLUMN_STATUS)));\r\n                    activeStatus.setPackageTitle(cursor.getString(cursor.getColumnIndex(SUBS_COLUMN_PACKAGE_TITLE)));\r\n                    activeStatus.setExpireDate(cursor.getString(cursor.getColumnIndex(SUBS_COLUMN_EXPIRE_DATE)));\r\n                    activeStatus.setExpireTime(cursor.getLong(cursor.getColumnIndex(SUBS_COLUMN_EXPIRE_TIME)));\r\n\r\n                    cursor.moveToNext();\r\n                }\r\n            }\r\n\r\n        // close the db connection\r\n        cursor.close();\r\n        return activeStatus;\r\n    }\r\n\r\n    public void deleteAllActiveStatusData() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(\"delete from \" + SUBS_TABLE_NAME);\r\n        db.close();\r\n    }\r\n\r\n    public int getActiveStatusCount() {\r\n        String countQuery = \"SELECT  * FROM \" + SUBS_TABLE_NAME;\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(countQuery, null);\r\n\r\n        int count = cursor.getCount();\r\n        cursor.close();\r\n\r\n        // return count\r\n        return count;\r\n    }\r\n\r\n    public int updateActiveStatus(ActiveStatus activeStatus, long row) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(SUBS_COLUMN_STATUS, activeStatus.getStatus());\r\n        contentValues.put(SUBS_COLUMN_PACKAGE_TITLE, activeStatus.getPackageTitle());\r\n        contentValues.put(SUBS_COLUMN_EXPIRE_DATE, activeStatus.getExpireDate());\r\n        contentValues.put(SUBS_COLUMN_EXPIRE_TIME, PreferenceUtils.getExpireTime());\r\n\r\n        // updating row\r\n        return db.update(SUBS_TABLE_NAME, contentValues, SUBS_COLUMN_ID + \" = ?\",\r\n                new String[]{String.valueOf(row)});\r\n    }\r\n\r\n    //user data table\r\n    private String CREATE_USER_DATA_TABLE() {\r\n        return \"CREATE TABLE IF NOT EXISTS \" + USER_TABLE_NAME +\r\n                \" (\" + USER_COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\r\n                USER_COLUMN_NAME + \" TEXT,\" +\r\n                USER_COLUMN_EMAIL + \" TEXT,\" +\r\n                //  USER_COLUMN_PHONE + \" TEXT,\" +\r\n                USER_COLUMN_STATUS + \" TEXT,\" +\r\n                USER_COLUMN_PROFILE_IMAGE_URL + \" TEXT,\" +\r\n                USER_COLUMN_USER_ID + \" TEXT\" + \")\"\r\n                ;\r\n    }\r\n\r\n    public long insertUserData(User user) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(USER_COLUMN_NAME, user.getName());\r\n        contentValues.put(USER_COLUMN_EMAIL, user.getEmail());\r\n        // contentValues.put(USER_COLUMN_PHONE, user.getPhone());\r\n        //contentValues.put(USER_COLUMN_STATUS, user.getStatus());\r\n        contentValues.put(USER_COLUMN_PROFILE_IMAGE_URL, user.getImageUrl());\r\n        contentValues.put(USER_COLUMN_USER_ID, user.getUserId());\r\n\r\n        long id = db.insert(USER_TABLE_NAME, null, contentValues);\r\n        db.close();\r\n        return id;\r\n    }\r\n\r\n    public User getUserData() {\r\n        // get readable database as we are not inserting anything\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        User user = new User();\r\n\r\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + USER_TABLE_NAME, null);\r\n\r\n        if (cursor != null)\r\n            if (cursor.moveToFirst()) {\r\n                while (!cursor.isAfterLast()) {\r\n                    // prepare appConfig object\r\n                    user.setUserId(cursor.getString(cursor.getColumnIndex(USER_COLUMN_USER_ID)));\r\n                    user.setName(cursor.getString(cursor.getColumnIndex(USER_COLUMN_NAME)));\r\n                    user.setEmail(cursor.getString(cursor.getColumnIndex(USER_COLUMN_EMAIL)));\r\n                    //    user.setPhone(cursor.getString(cursor.getColumnIndex(USER_COLUMN_PHONE)));\r\n                    user.setImageUrl(cursor.getString(cursor.getColumnIndex(USER_COLUMN_PROFILE_IMAGE_URL)));\r\n                    user.setStatus(cursor.getString(cursor.getColumnIndex(USER_COLUMN_STATUS)));\r\n\r\n                    cursor.moveToNext();\r\n                }\r\n            }\r\n\r\n        // close the db connection\r\n        cursor.close();\r\n        return user;\r\n\r\n    }\r\n\r\n    public long updateUserData(User user, long id) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(USER_COLUMN_NAME, user.getName());\r\n        contentValues.put(USER_COLUMN_EMAIL, user.getEmail());\r\n        //contentValues.put(USER_COLUMN_PHONE, user.getPhone());\r\n        contentValues.put(USER_COLUMN_USER_ID, user.getUserId());\r\n        contentValues.put(USER_COLUMN_PROFILE_IMAGE_URL, user.getImageUrl());\r\n        contentValues.put(USER_COLUMN_STATUS, user.getStatus());\r\n\r\n        // updating row\r\n        return db.update(USER_TABLE_NAME, contentValues, USER_COLUMN_ID + \" = ?\",\r\n                new String[]{String.valueOf(id)});\r\n\r\n    }\r\n\r\n    public void deleteUserData() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(\"delete from \" + USER_TABLE_NAME);\r\n        db.close();\r\n    }\r\n\r\n    public int getUserDataCount() {\r\n        String countQuery = \"SELECT  * FROM \" + USER_TABLE_NAME;\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(countQuery, null);\r\n\r\n        int count = cursor.getCount();\r\n        cursor.close();\r\n\r\n        // return count\r\n        return count;\r\n    }\r\n\r\n    private String CREATE_DOWNLOAD_DATA_TABLE() {\r\n        return \"CREATE TABLE IF NOT EXISTS \" + DOWNLOAD_TABLE_NAME +\r\n                \" (\" + DOWNLOAD_COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\r\n                WORK_ID + \" TEXT,\" +\r\n                DOWNLOAD_ID + \" INTEGER,\" +\r\n                TOTAL_SIZE + \" TEXT,\" +\r\n                DOWNLOAD_SIZE + \" TEXT,\" +\r\n                URL + \" TEXT,\" +\r\n                URL_SUB_LIST + \" TEXT,\" +\r\n                FILE_NAME + \" TEXT,\" +\r\n                APP_CLOSE_STATUS + \" TEXT,\" +\r\n                DOWNLOAD_STATUS + \" TEXT\" + \")\";\r\n    }\r\n\r\n    public int getDownloadDataCount() {\r\n        String countQuery = \"SELECT  * FROM \" + DOWNLOAD_TABLE_NAME;\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(countQuery, null);\r\n\r\n        int count = cursor.getCount();\r\n        cursor.close();\r\n\r\n        // return count\r\n        return count;\r\n    }\r\n\r\n    public long insertWork(Work work) {\r\n        // get writable database as we want to write data\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        // `id` and `timestamp` will be inserted automatically.\r\n        // no need to add them\r\n        values.put(WORK_ID, work.getWorkId());\r\n        values.put(DOWNLOAD_ID, work.getDownloadId());\r\n        values.put(TOTAL_SIZE, work.getTotalSize());\r\n        values.put(DOWNLOAD_SIZE, work.getDownloadSize());\r\n        values.put(URL, work.getUrl());\r\n        values.put(URL_SUB_LIST, work.getSubListJson());\r\n        values.put(FILE_NAME, work.getFileName());\r\n        values.put(APP_CLOSE_STATUS, work.getAppCloseStatus());\r\n        values.put(DOWNLOAD_STATUS, work.getDownloadStatus());\r\n        // insert row\r\n        long id = db.insert(DOWNLOAD_TABLE_NAME, null, values);\r\n        // close db connection\r\n        db.close();\r\n        // return newly inserted row id\r\n        return id;\r\n    }\r\n\r\n    public int updateWork(Work work) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(WORK_ID, work.getWorkId());\r\n        values.put(DOWNLOAD_ID, work.getDownloadId());\r\n        values.put(TOTAL_SIZE, work.getTotalSize());\r\n        values.put(DOWNLOAD_SIZE, work.getDownloadSize());\r\n        values.put(URL, work.getUrl());\r\n        values.put(URL_SUB_LIST, work.getSubListJson());\r\n        values.put(FILE_NAME, work.getFileName());\r\n        values.put(APP_CLOSE_STATUS, work.getAppCloseStatus());\r\n        values.put(DOWNLOAD_STATUS, work.getDownloadStatus());\r\n\r\n        Log.d(\"workId 2:\", work.getWorkId());\r\n\r\n        // updating row\r\n        return db.update(DOWNLOAD_TABLE_NAME, values, WORK_ID + \" = ?\",\r\n                new String[]{work.getWorkId()});\r\n    }\r\n\r\n    public void deleteByDownloadId(int downloadId) {\r\n        String sql = \"DELETE FROM \" + DOWNLOAD_TABLE_NAME + \" WHERE \" + DOWNLOAD_ID + \"=\" + downloadId;\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(sql);\r\n    }\r\n\r\n    public void deleteAllDownloadData() {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        db.execSQL(\"delete from \" + DOWNLOAD_TABLE_NAME);\r\n        db.close();\r\n    }\r\n\r\n    public Work getWorkByDownloadId(int downloadId) {\r\n        String sql = \"SELECT * FROM \" + DOWNLOAD_TABLE_NAME + \" WHERE \" + DOWNLOAD_ID + \"=\" + downloadId;\r\n\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        Cursor cursor = db.rawQuery(sql, null);\r\n        Work work = new Work();\r\n        if (cursor.moveToFirst()) {\r\n\r\n            work.setId(cursor.getInt(cursor.getColumnIndex(DOWNLOAD_COLUMN_ID)));\r\n            work.setWorkId(cursor.getString(cursor.getColumnIndex(WORK_ID)));\r\n            work.setDownloadId(cursor.getInt(cursor.getColumnIndex(DOWNLOAD_ID)));\r\n            work.setFileName(cursor.getString(cursor.getColumnIndex(FILE_NAME)));\r\n            work.setTotalSize(cursor.getString(cursor.getColumnIndex(TOTAL_SIZE)));\r\n            work.setDownloadSize(cursor.getString(cursor.getColumnIndex(DOWNLOAD_SIZE)));\r\n            work.setDownloadStatus(cursor.getString(cursor.getColumnIndex(DOWNLOAD_STATUS)));\r\n            work.setUrl(cursor.getString(cursor.getColumnIndex(URL)));\r\n            work.setSubListJon(cursor.getString(cursor.getColumnIndex(URL_SUB_LIST)));\r\n            work.setAppCloseStatus(cursor.getString(cursor.getColumnIndex(APP_CLOSE_STATUS)));\r\n        }\r\n        return work;\r\n    }\r\n    public List<Work> getAllWork() {\r\n        List<Work> works = new ArrayList<>();\r\n        // Select All Query\r\n        String selectQuery = \"SELECT  * FROM \" + DOWNLOAD_TABLE_NAME;\r\n\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(selectQuery, null);\r\n\r\n        // looping through all rows and adding to list\r\n        if (cursor != null)\r\n            if (cursor.moveToFirst()) {\r\n                do {\r\n                    Work work = new Work();\r\n                    work.setId(cursor.getInt(cursor.getColumnIndex(DOWNLOAD_COLUMN_ID)));\r\n                    work.setWorkId(cursor.getString(cursor.getColumnIndex(WORK_ID)));\r\n                    work.setDownloadId(cursor.getInt(cursor.getColumnIndex(DOWNLOAD_ID)));\r\n                    work.setFileName(cursor.getString(cursor.getColumnIndex(FILE_NAME)));\r\n                    work.setTotalSize(cursor.getString(cursor.getColumnIndex(TOTAL_SIZE)));\r\n                    work.setDownloadSize(cursor.getString(cursor.getColumnIndex(DOWNLOAD_SIZE)));\r\n                    work.setDownloadStatus(cursor.getString(cursor.getColumnIndex(DOWNLOAD_STATUS)));\r\n                    work.setUrl(cursor.getString(cursor.getColumnIndex(URL)));\r\n                    work.setSubListJon(cursor.getString(cursor.getColumnIndex(URL_SUB_LIST)));\r\n                    work.setAppCloseStatus(cursor.getString(cursor.getColumnIndex(APP_CLOSE_STATUS)));\r\n                    works.add(work);\r\n                } while (cursor.moveToNext());\r\n            }\r\n\r\n        // close db connection\r\n        db.close();\r\n\r\n        // return works list\r\n        return works;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/database/DatabaseHelper.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/database/DatabaseHelper.java	(date 1612114654852)
@@ -1,5 +1,6 @@
 package tvseries.koreandramaengsub.freemovieapp.database;
 
+
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
@@ -37,6 +38,7 @@
     private static final String CONFIG_COLUMN_ADMOB_APP_ID = "admob_app_id";
     private static final String CONFIG_COLUMN_ADMOB_BANNER_ID = "admob_banner_id";
     private static final String CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID = "admob_interstitial_id";
+    private static final String CONFIG_COLUMN_ADMOB_NATIVE_ID = "admob_native_id";
     private static final String CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID = "admob_rewardedvideo_id";
     private static final String CONFIG_COLUMN_ADMOB_APPOPEN_ID = "admob_appopen_ads_id";
     private static final String CONFIG_COLUMN_FAN_BANNER_ID = "fan_banner_id";
@@ -189,6 +191,7 @@
                 CONFIG_COLUMN_ADMOB_APP_ID + " TEXT," +
                 CONFIG_COLUMN_ADMOB_BANNER_ID + " TEXT," +
                 CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID + " TEXT," +
+                CONFIG_COLUMN_ADMOB_NATIVE_ID + " TEXT," +
                 CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID + " TEXT," +
                 CONFIG_COLUMN_ADMOB_APPOPEN_ID + " TEXT," +
                 CONFIG_COLUMN_FAN_BANNER_ID + " TEXT," +
@@ -226,8 +229,9 @@
         contentValues.put(CONFIG_COLUMN_ADMOB_APP_ID, configuration.getAdsConfig().getAdmobAppId());
         contentValues.put(CONFIG_COLUMN_ADMOB_BANNER_ID, configuration.getAdsConfig().getAdmobBannerAdsId());
         contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobInterstitialAdsId());
-        contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());
-        contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());
+        contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobNativeAdsId());
+        //contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());
+        //contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());
         contentValues.put(CONFIG_COLUMN_FAN_BANNER_ID, configuration.getAdsConfig().getFanBannerAdsPlacementId());
         contentValues.put(CONFIG_COLUMN_FAN_NATIVE_ID, configuration.getAdsConfig().getFanNativeAdsPlacementId());
         contentValues.put(CONFIG_COLUMN_FAN_INTERSTITIAL_ID, configuration.getAdsConfig().getFanInterstitialAdsPlacementId());
@@ -277,8 +281,9 @@
                     adsConfig.setAdmobAppId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_APP_ID)));
                     adsConfig.setAdmobBannerAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_BANNER_ID)));
                     adsConfig.setAdmobInterstitialAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID)));
-                    adsConfig.setAdmobRewardedVideoAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID)));
-                    adsConfig.setAdmobAppOpenAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_APPOPEN_ID)));
+                    adsConfig.setAdmobNativeAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID)));
+                    //adsConfig.setAdmobRewardedVideoAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID)));
+                    //adsConfig.setAdmobAppOpenAdsId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_ADMOB_APPOPEN_ID)));
                     adsConfig.setFanNativeAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_NATIVE_ID)));
                     adsConfig.setFanBannerAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_BANNER_ID)));
                     adsConfig.setFanInterstitialAdsPlacementId(cursor.getString(cursor.getColumnIndex(CONFIG_COLUMN_FAN_INTERSTITIAL_ID)));
@@ -344,8 +349,9 @@
         contentValues.put(CONFIG_COLUMN_ADMOB_APP_ID, configuration.getAdsConfig().getAdmobAppId());
         contentValues.put(CONFIG_COLUMN_ADMOB_BANNER_ID, configuration.getAdsConfig().getAdmobBannerAdsId());
         contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobInterstitialAdsId());
-        contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());
-        contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());
+        contentValues.put(CONFIG_COLUMN_ADMOB_INTERSTITIAL_ID, configuration.getAdsConfig().getAdmobInterstitialAdsId());
+       // contentValues.put(CONFIG_COLUMN_ADMOB_REWARDEDVIDEO_ID, configuration.getAdsConfig().getAdmobRewardedVideoAdsId());
+       // contentValues.put(CONFIG_COLUMN_ADMOB_APPOPEN_ID, configuration.getAdsConfig().getAdmobAppOpenAdsId());
         contentValues.put(CONFIG_COLUMN_FAN_BANNER_ID, configuration.getAdsConfig().getFanBannerAdsPlacementId());
         contentValues.put(CONFIG_COLUMN_FAN_NATIVE_ID, configuration.getAdsConfig().getFanNativeAdsPlacementId());
         contentValues.put(CONFIG_COLUMN_FAN_INTERSTITIAL_ID, configuration.getAdsConfig().getFanInterstitialAdsPlacementId());
Index: .idea/libraries/Gradle__animeApp_mobiamosdk_mobiamosdk.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__animeApp_mobiamosdk_mobiamosdk.xml	(date 1612168094027)
+++ .idea/libraries/Gradle__animeApp_mobiamosdk_mobiamosdk.xml	(date 1612168094027)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="Gradle: animeApp.mobiamosdk.mobiamosdk">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/mobiamosdk/mobiamosdk.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/mobiamosdk/animeApp.mobiamosdk.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/mobiamosdk/animeApp.mobiamosdk.iml	(date 1612168094004)
+++ .idea/modules/mobiamosdk/animeApp.mobiamosdk.iml	(date 1612168094004)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":mobiamosdk" external.linked.project.path="$MODULE_DIR$/../../../mobiamosdk" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="animeApp" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":mobiamosdk" />
+        <option name="LAST_SUCCESSFUL_SYNC_AGP_VERSION" />
+        <option name="LAST_KNOWN_AGP_VERSION" />
+      </configuration>
+    </facet>
+    <facet type="java-gradle" name="Java-Gradle">
+      <configuration>
+        <option name="BUILD_FOLDER_PATH" value="$MODULE_DIR$/../../../mobiamosdk/build" />
+        <option name="BUILDABLE" value="false" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../mobiamosdk">
+      <excludeFolder url="file://$MODULE_DIR$/../../../mobiamosdk/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../mobiamosdk/build" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="Gradle: animeApp.mobiamosdk.mobiamosdk" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_ads_base_18_3_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_ads_base_18_3_0_aar.xml	(date 1612107170658)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_ads_base_18_3_0_aar.xml	(date 1612107170658)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-ads-base:18.3.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5c8d147076cb3030d54a230370964365/jetified-play-services-ads-base-18.3.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5c8d147076cb3030d54a230370964365/jetified-play-services-ads-base-18.3.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5c8d147076cb3030d54a230370964365/jetified-play-services-ads-base-18.3.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-ads-base/18.3.0/7b2b904a57fae0b77a9d2faf5284e6788f3223ba/play-services-ads-base-18.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_test_espresso_espresso_core_3_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_test_espresso_espresso_core_3_1_0_aar.xml	(date 1612107170721)
+++ .idea/libraries/Gradle__androidx_test_espresso_espresso_core_3_1_0_aar.xml	(date 1612107170721)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.test.espresso:espresso-core:3.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a255ce3c0205c203cbbf9864a475aa31/espresso-core-3.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a255ce3c0205c203cbbf9864a475aa31/espresso-core-3.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a255ce3c0205c203cbbf9864a475aa31/espresso-core-3.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test.espresso/espresso-core/3.1.0/5ddd7bcd98d83c3eb699422855553fd877292623/espresso-core-3.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test.espresso/espresso-core/3.1.0/e70a553facebdb90cec729ab6653ef91a2a2bc14/espresso-core-3.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_1_0_aar.xml	(date 1612107170709)
+++ .idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_1_0_aar.xml	(date 1612107170709)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-viewmodel:2.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f3a3a99faf9bbb321e7613d44b699bb3/lifecycle-viewmodel-2.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f3a3a99faf9bbb321e7613d44b699bb3/lifecycle-viewmodel-2.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f3a3a99faf9bbb321e7613d44b699bb3/lifecycle-viewmodel-2.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-viewmodel/2.1.0/bfd86b9887c2343516f82bed91acbab34a45841d/lifecycle-viewmodel-2.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_solver_1_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_solver_1_1_3.xml	(date 1612107170638)
+++ .idea/libraries/Gradle__androidx_constraintlayout_constraintlayout_solver_1_1_3.xml	(date 1612107170638)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.constraintlayout:constraintlayout-solver:1.1.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.constraintlayout/constraintlayout-solver/1.1.3/54abe9ffb22cc9019b0b6fcc10f185cc4e67b34e/constraintlayout-solver-1.1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_test_monitor_1_1_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_test_monitor_1_1_0_aar.xml	(date 1612107170733)
+++ .idea/libraries/Gradle__androidx_test_monitor_1_1_0_aar.xml	(date 1612107170733)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.test:monitor:1.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cfdeaed35bf434299bb2bf2401d497c3/monitor-1.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cfdeaed35bf434299bb2bf2401d497c3/monitor-1.1.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cfdeaed35bf434299bb2bf2401d497c3/monitor-1.1.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test/monitor/1.1.0/3d1f748b5f88e6fedbc17128a6f1d24af649d64/monitor-1.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.test/monitor/1.1.0/d5021e13cb13f510b6d876a591a7eb9f33d52688/monitor-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__artifacts_paymentwall_android_sdk_unspecified.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__artifacts_paymentwall_android_sdk_unspecified.xml	(date 1612157203693)
+++ .idea/libraries/Gradle__artifacts_paymentwall_android_sdk_unspecified.xml	(date 1612157203693)
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: artifacts:paymentwall-android-sdk:unspecified">
+    <ANNOTATIONS>
+      <root url="jar://$PROJECT_DIR$/paymentwall-android-sdk/build/.transforms/b1900f7a77121145bba2f6d3aa82fb3f/jetified-paymentwall-android-sdk/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/paymentwall-android-sdk/build/.transforms/b1900f7a77121145bba2f6d3aa82fb3f/jetified-paymentwall-android-sdk/jars/classes.jar!/" />
+      <root url="file://$PROJECT_DIR$/paymentwall-android-sdk/build/.transforms/b1900f7a77121145bba2f6d3aa82fb3f/jetified-paymentwall-android-sdk/res" />
+      <root url="file://$PROJECT_DIR$/paymentwall-android-sdk/build/.transforms/b1900f7a77121145bba2f6d3aa82fb3f/jetified-paymentwall-android-sdk/AndroidManifest.xml" />
+      <root url="jar://$PROJECT_DIR$/paymentwall-android-sdk/build/.transforms/b1900f7a77121145bba2f6d3aa82fb3f/jetified-paymentwall-android-sdk/jars/libs/jsoup-1.10.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/bottomshit/PaymentBottomShitDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp.bottomshit;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Space;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.cardview.widget.CardView;\r\n\r\nimport com.google.android.material.bottomsheet.BottomSheetDialogFragment;\r\n\r\nimport tvseries.koreandramaengsub.freemovieapp.R;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.PaymentConfig;\r\n\r\npublic class PaymentBottomShitDialog extends BottomSheetDialogFragment {\r\n\r\n    public static final String PAYPAL = \"paypal\";\r\n    public static final String STRIP = \"strip\";\r\n    public static final String RAZOR_PAY = \"razorpay\";\r\n    private DatabaseHelper databaseHelper;\r\n\r\n    private OnBottomShitClickListener bottomShitClickListener;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.layout_payment_bottom_shit, container,\r\n                false);\r\n        databaseHelper = new DatabaseHelper(getContext());\r\n        PaymentConfig config = databaseHelper.getConfigurationData().getPaymentConfig();\r\n        CardView paypalBt, stripBt, razorpayBt;\r\n        paypalBt = view.findViewById(R.id.paypal_btn);\r\n        stripBt = view.findViewById(R.id.stripe_btn);\r\n        razorpayBt = view.findViewById(R.id.razorpay_btn);\r\n        Space space = view.findViewById(R.id.space2);\r\n\r\n        if (!config.getPaypalEnable()) {\r\n            paypalBt.setVisibility(View.GONE);\r\n            space.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!config.getStripeEnable()) {\r\n            stripBt.setVisibility(View.GONE);\r\n            space.setVisibility(View.GONE);\r\n        }\r\n        if (!config.getRazorpayEnable())\r\n            razorpayBt.setVisibility(View.GONE);\r\n\r\n        paypalBt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                bottomShitClickListener.onBottomShitClick(PAYPAL);\r\n            }\r\n        });\r\n\r\n        stripBt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                bottomShitClickListener.onBottomShitClick(STRIP);\r\n            }\r\n        });\r\n\r\n        razorpayBt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomShitClickListener.onBottomShitClick(RAZOR_PAY);\r\n            }\r\n        });\r\n\r\n\r\n        return view;\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n\r\n        try {\r\n            bottomShitClickListener = (OnBottomShitClickListener) context;\r\n        } catch (Exception e) {\r\n            throw new ClassCastException(context.toString() + \" must be implemented\");\r\n        }\r\n\r\n    }\r\n\r\n    public interface OnBottomShitClickListener {\r\n        void onBottomShitClick(String paymentMethodName);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/bottomshit/PaymentBottomShitDialog.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/bottomshit/PaymentBottomShitDialog.java	(date 1612159257143)
@@ -22,8 +22,9 @@
     public static final String PAYPAL = "paypal";
     public static final String STRIP = "strip";
     public static final String RAZOR_PAY = "razorpay";
+    public static final String MOBIAMO_PAY = "mobiamo";
     private DatabaseHelper databaseHelper;
-
+    private boolean checkmobiamo=true;
     private OnBottomShitClickListener bottomShitClickListener;
 
     @Nullable
@@ -33,11 +34,13 @@
                 false);
         databaseHelper = new DatabaseHelper(getContext());
         PaymentConfig config = databaseHelper.getConfigurationData().getPaymentConfig();
-        CardView paypalBt, stripBt, razorpayBt;
+        CardView paypalBt, stripBt, razorpayBt, mobiamoBt;
         paypalBt = view.findViewById(R.id.paypal_btn);
         stripBt = view.findViewById(R.id.stripe_btn);
         razorpayBt = view.findViewById(R.id.razorpay_btn);
+        mobiamoBt=view.findViewById(R.id.mobiamobtn);
         Space space = view.findViewById(R.id.space2);
+        Space space3 = view.findViewById(R.id.space3);
 
         if (!config.getPaypalEnable()) {
             paypalBt.setVisibility(View.GONE);
@@ -48,8 +51,15 @@
             stripBt.setVisibility(View.GONE);
             space.setVisibility(View.GONE);
         }
-        if (!config.getRazorpayEnable())
+        if (!config.getRazorpayEnable()){
             razorpayBt.setVisibility(View.GONE);
+            space3.setVisibility(View.GONE);
+        }
+        if (!checkmobiamo){
+            mobiamoBt.setVisibility(View.GONE);
+            space3.setVisibility(View.GONE);
+        }
+
 
         paypalBt.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -72,6 +82,12 @@
             }
         });
 
+        mobiamoBt.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                bottomShitClickListener.onBottomShitClick(MOBIAMO_PAY);
+            }
+        });
 
         return view;
 
Index: app/src/main/res/layout/fragment_advancded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".fragments.AdvancedFragment\">\r\n\r\n    <TextView\r\n        android:gravity=\"left|center_vertical\"\r\n        android:textSize=\"17sp\"\r\n        android:padding=\"10dp\"\r\n        android:layout_marginTop=\"?actionBarSize\"\r\n        style=\"@style/TextAppearance.Medium.Bold\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"From Admin:\"/>\r\n\r\n    <TextView\r\n        android:gravity=\"left|center_vertical\"\r\n        android:textSize=\"17sp\"\r\n        android:paddingHorizontal=\"10dp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/admin_talk\"/>\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/subscribe_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:background=\"?android:attr/selectableItemBackground\"\r\n        app:cardCornerRadius=\"5dp\"\r\n        app:cardElevation=\"5dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_marginHorizontal=\"5dp\"\r\n        android:gravity=\"left|center_vertical\">\r\n\r\n        <ImageView\r\n            android:layout_width=\"35dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginVertical=\"5dp\"\r\n            android:src=\"@drawable/ic_baseline_subscriptions_24\"\r\n            app:tint=\"@color/blue_400\" />\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"17sp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:text=\"Subscriptions\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginRight=\"5dp\"\r\n            android:layout_gravity=\"center_vertical|right\"\r\n            android:text=\"〉\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n    </androidx.cardview.widget.CardView>\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/request_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:background=\"?android:attr/selectableItemBackground\"\r\n        app:cardCornerRadius=\"5dp\"\r\n        app:cardElevation=\"5dp\"\r\n        android:layout_margin=\"5dp\"\r\n        android:gravity=\"left|center_vertical\">\r\n        <ImageView\r\n            android:layout_width=\"37dp\"\r\n            android:layout_height=\"37dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginVertical=\"5dp\"\r\n            android:src=\"@drawable/icon_movie\"\r\n            app:tint=\"@color/blue_400\" />\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"17sp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:text=\"Request Movie\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginRight=\"5dp\"\r\n            android:layout_gravity=\"center_vertical|right\"\r\n            android:text=\"〉\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n    </androidx.cardview.widget.CardView>\r\n\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/facebook_group\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:background=\"?android:attr/selectableItemBackground\"\r\n        app:cardCornerRadius=\"5dp\"\r\n        app:cardElevation=\"5dp\"\r\n        android:layout_marginHorizontal=\"5dp\"\r\n        android:gravity=\"left|center_vertical\">\r\n        <ImageView\r\n            android:layout_width=\"35dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginVertical=\"5dp\"\r\n            android:src=\"@drawable/facebook\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"17sp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:text=\"Group Facebook\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginRight=\"5dp\"\r\n            android:layout_gravity=\"center_vertical|right\"\r\n            android:text=\"〉\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n    </androidx.cardview.widget.CardView>\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/feedback_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        android:background=\"?android:attr/selectableItemBackground\"\r\n        app:cardCornerRadius=\"5dp\"\r\n        app:cardElevation=\"5dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginHorizontal=\"5dp\"\r\n        android:gravity=\"left|center_vertical\">\r\n        <ImageView\r\n            android:layout_width=\"35dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginVertical=\"5dp\"\r\n            android:src=\"@drawable/ic_baseline_send_24\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"17sp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:text=\"Rate/Feedback\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginLeft=\"55dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:includeFontPadding=\"false\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_marginRight=\"5dp\"\r\n            android:layout_gravity=\"center_vertical|right\"\r\n            android:text=\"〉\"\r\n            android:textStyle=\"bold\"\r\n            app:tint=\"?android:attr/colorPrimary\" />\r\n    </androidx.cardview.widget.CardView>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_advancded.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/res/layout/fragment_advancded.xml	(date 1612107250776)
@@ -43,7 +43,7 @@
             android:layout_height="35dp"
             android:layout_marginLeft="10dp"
             android:layout_marginVertical="5dp"
-            android:src="@drawable/ic_baseline_subscriptions_24"
+            android:src="@drawable/ic_subtitle"
             app:tint="@color/blue_400" />
         <TextView
             android:layout_width="match_parent"
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/animeApp.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/animeApp.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/app/animeApp.app.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/app/animeApp.app.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/modules.xml	(date 1612169228269)
@@ -4,6 +4,10 @@
     <modules>
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/animeApp.iml" filepath="$PROJECT_DIR$/.idea/modules/animeApp.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/modules/app/animeApp.app.iml" filepath="$PROJECT_DIR$/.idea/modules/app/animeApp.app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/mobiamosdk/animeApp.mobiamosdk.iml" filepath="$PROJECT_DIR$/.idea/modules/mobiamosdk/animeApp.mobiamosdk.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/mycardadapter-release/animeApp.mycardadapter-release.iml" filepath="$PROJECT_DIR$/.idea/modules/mycardadapter-release/animeApp.mycardadapter-release.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/nativetemplates/animeApp.nativetemplates.iml" filepath="$PROJECT_DIR$/.idea/modules/nativetemplates/animeApp.nativetemplates.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/paymentwall-android-sdk/animeApp.paymentwall-android-sdk.iml" filepath="$PROJECT_DIR$/.idea/modules/paymentwall-android-sdk/animeApp.paymentwall-android-sdk.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>include ':app'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ settings.gradle	(date 1612169169936)
@@ -1,1 +1,5 @@
+include ':mycardadapter-release'
+include ':mobiamosdk'
+include ':paymentwall-android-sdk'
+include ':nativetemplates'
 include ':app'
Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Mon Jan 18 22:54:15 JST 2021\r\nsdk.dir=C\\:\\\\Users\\\\XFACTOR\\\\AppData\\\\Local\\\\Android\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- local.properties	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ local.properties	(date 1612107170467)
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Mon Jan 18 22:54:15 JST 2021
-sdk.dir=C\:\\Users\\XFACTOR\\AppData\\Local\\Android\\Sdk
+#Sun Jan 31 21:41:46 ICT 2021
+sdk.dir=C\:\\Users\\khaih\\AppData\\Local\\Android\\Sdk
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/gradle.xml	(date 1612169175985)
@@ -12,6 +12,10 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/mobiamosdk" />
+            <option value="$PROJECT_DIR$/mycardadapter-release" />
+            <option value="$PROJECT_DIR$/nativetemplates" />
+            <option value="$PROJECT_DIR$/paymentwall-android-sdk" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
Index: app/.cxx/abi_configuration_72w3k6c7.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/abi_configuration_72w3k6c7.json	(date 1612169284565)
+++ app/.cxx/abi_configuration_72w3k6c7.json	(date 1612169284565)
@@ -0,0 +1,14 @@
+{
+  "allAbis": [
+    "armeabi-v7a",
+    "arm64-v8a",
+    "x86",
+    "x86_64"
+  ],
+  "validAbis": [
+    "ARMEABI_V7A",
+    "ARM64_V8A",
+    "X86",
+    "X86_64"
+  ]
+}
\ No newline at end of file
Index: app/.cxx/ndk_locator_record_513d3o2q_key.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/ndk_locator_record_513d3o2q_key.json	(date 1612172737983)
+++ app/.cxx/ndk_locator_record_513d3o2q_key.json	(date 1612172737983)
@@ -0,0 +1,7 @@
+{
+  "ndkVersionFromDsl": "21.3.6528147",
+  "sdkFolder": "C:\\Users\\khaih\\AppData\\Local\\Android\\Sdk",
+  "sideBySideNdkFolderNames": [
+    "21.0.6113669"
+  ]
+}
\ No newline at end of file
Index: mobiamosdk/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mobiamosdk/build.gradle	(date 1612167908865)
+++ mobiamosdk/build.gradle	(date 1612167908865)
@@ -0,0 +1,2 @@
+configurations.maybeCreate("default")
+artifacts.add("default", file('mobiamosdk.jar'))
\ No newline at end of file
Index: app/.cxx/abi_configuration_72w3k6c7.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/abi_configuration_72w3k6c7.log	(date 1612169284564)
+++ app/.cxx/abi_configuration_72w3k6c7.log	(date 1612169284564)
@@ -0,0 +1,1 @@
+[]
\ No newline at end of file
Index: app/.cxx/abi_configuration_72w3k6c7_key.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/abi_configuration_72w3k6c7_key.json	(date 1612169284566)
+++ app/.cxx/abi_configuration_72w3k6c7_key.json	(date 1612169284566)
@@ -0,0 +1,18 @@
+{
+  "ndkHandlerSupportedAbis": [
+    "ARMEABI_V7A",
+    "ARM64_V8A",
+    "X86",
+    "X86_64"
+  ],
+  "ndkHandlerDefaultAbis": [
+    "ARMEABI_V7A",
+    "ARM64_V8A",
+    "X86",
+    "X86_64"
+  ],
+  "externalNativeBuildAbiFilters": [],
+  "ndkConfigAbiFilters": [],
+  "splitsFilterAbis": [],
+  "ideBuildOnlyTargetAbi": true
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\r\n    repositories {\r\n        maven { url 'https://plugins.gradle.org/m2/' }\r\n    }\r\n    dependencies {\r\n        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.12.4, 0.99.99]'\r\n    }\r\n}\r\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\r\n\r\nrepositories {\r\n    mavenCentral()\r\n    jcenter()\r\n    maven{ url 'https://maven.google.com'}\r\n    maven { url 'https://dl.bintray.com/ironsource-mobile/android-sdk' }\r\n    maven { url 'https://adcolony.bintray.com/AdColony' }\r\n\r\n}\r\napply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\nandroid {\r\n\r\n\r\n    // this is for signed apk generate problem for lint\r\n    /*lintOptions {\r\n        checkReleaseBuilds false\r\n    }*/\r\n\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"tvseries.koreandramaengsub.freemovieapp\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0.1\"\r\n        multiDexEnabled true\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables.useSupportLibrary = true\r\n        manifestPlaceholders = [\r\n                onesignal_app_id: '8f8f1416-8631-4856-809c-9a2dffbf1592',\r\n                // Project number pulled from dashboard, local value is ignored.\r\n                onesignal_google_project_number: 'REMOTE'\r\n        ]\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    def room_version = \"2.2.5\"\r\n    def lifecycle_version = '2.2.0'\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n\r\n    implementation 'com.google.android.play:core:1.8.3'\r\n\r\n//appodeal\r\n    implementation 'com.appodeal.ads:sdk:2.7.1.+'\r\n\r\n    //sdk mediation\r\n    //applovin\r\n    implementation 'com.google.ads.mediation:applovin:9.14.5.0'\r\n    //mopub\r\n    implementation 'com.google.ads.mediation:mopub:5.15.0.0'\r\n    //unity ads\r\n    implementation 'com.google.ads.mediation:unity:3.5.0.0'\r\n    //adcolony\r\n    implementation 'com.google.ads.mediation:adcolony:4.3.0.0'\r\n    //tapjoy\r\n    implementation 'com.google.ads.mediation:tapjoy:12.7.1.0'\r\n    //inmobi\r\n    implementation 'com.google.ads.mediation:inmobi:9.1.1.0'\r\n    //ironsource\r\n    implementation 'com.google.ads.mediation:ironsource:7.0.3.1.0'\r\n    //fyber\r\n   // implementation 'com.google.ads.mediation:fyber:7.7.3.0'\r\n    //facebook\r\n    implementation 'com.google.ads.mediation:facebook:6.2.0.0'\r\n    //Room\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    annotationProcessor \"androidx.room:room-compiler:$room_version\"\r\n\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n    implementation \"io.reactivex.rxjava2:rxandroid:2.1.1\"\r\n    //Auto Download and Update\r\n    implementation 'com.github.Piashsarker:AndroidAppUpdateLibrary:1.0.3'\r\n    // ViewModel\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\"\r\n\r\n\r\n\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    //firebase\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    //firebase auth\r\n    implementation 'com.firebaseui:firebase-ui-auth:7.1.1'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    // Required only if Facebook login support is required\r\n    // Find the latest Facebook SDK releases here: https://goo.gl/Ce5L94\r\n    implementation 'com.facebook.android:facebook-android-sdk:8.1.0'\r\n\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.google.android:flexbox:0.3.2'                  // google flexible box\r\n    implementation 'com.crystal:crystalrangeseekbar:1.1.3'             // range seek bar\r\n    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'\r\n    implementation 'androidx.browser:browser:1.2.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha06'\r\n    implementation \"android.arch.work:work-runtime:1.0.1\"\r\n    //implementation 'com.crystal:crystalrangeseekbar:1.1.3'\r\n    //implementation 'com.github.Innovattic:range-seek-bar:v1.0.6'\r\n    //implementation 'com.github.Chrisvin:RubberPicker:v1.1'\r\n    //implementation 'com.github.stfalcon:StfalconPriceRangeBar:0.1.1'\r\n    //implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'\r\n    implementation 'com.makeramen:roundedimageview:2.3.0'\r\n    implementation 'com.orhanobut:dialogplus:1.11@aar'\r\n    // shimmer layout\r\n    implementation 'com.facebook.shimmer:shimmer:0.4.0'\r\n    implementation 'com.balysv:material-ripple:1.0.2'\r\n    // ripple effect\r\n\r\n    implementation 'com.github.JakeWharton:ViewPagerIndicator:2.4.1'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'jp.wasabeef:picasso-transformations:2.2.1'\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    implementation 'jp.wasabeef:glide-transformations:4.0.0'\r\n    // retrofit\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'\r\n    // stripe\r\n    implementation 'com.stripe:stripe-android:+'\r\n    implementation 'com.stripe:stripe-java:5.36.0'\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n    // download manager\r\n    implementation 'com.mindorks.android:prdownloader:0.6.0'\r\n    implementation 'com.mani:ThinDownloadManager:1.4.0'\r\n    // paypal\r\n    implementation 'com.paypal.sdk:paypal-android-sdk:2.16.0'\r\n    // razor pay\r\n    implementation 'com.razorpay:checkout:1.5.12'\r\n    // space bottom navigation view\r\n    implementation 'com.github.armcha:SpaceNavigationView:1.6.0'\r\n    // card slider\r\n    implementation 'com.github.IslamKhSh:CardSlider:0.4'\r\n    implementation 'com.google.android:flexbox:0.3.2'\r\n    //OneSignal\r\n    implementation 'com.onesignal:OneSignal:3.15.4'\r\n    implementation 'com.hootsuite.android:nachos:1.1.1'\r\n    implementation 'com.mikhaellopez:circularimageview:3.2.0'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-ads:19.5.0'\r\n    // exo player\r\n    implementation 'com.google.android.exoplayer:exoplayer-core:2.7.3'\r\n    implementation 'com.google.android.exoplayer:exoplayer-dash:2.7.3'\r\n    implementation 'com.google.android.exoplayer:exoplayer-ui:2.7.3'\r\n    implementation 'com.google.android.exoplayer:exoplayer-hls:2.7.3'\r\n    implementation 'com.google.android.exoplayer:extension-rtmp:2.7.3'\r\n    implementation 'com.google.android.exoplayer:extension-cast:2.7.3'\r\n    implementation 'com.github.HaarigerHarald:android-youtubeExtractor:master-SNAPSHOT'\r\n    implementation 'com.google.android.libraries.cast.companionlibrary:ccl:2.8.4'\r\n    // start app ad\r\n    implementation 'com.startapp:inapp-sdk:3.10.1'\r\n    implementation 'com.github.ixiDev:GDPRChecker:v0.2'\r\n    implementation 'com.google.android.ads.consent:consent-library:1.0.8'\r\n    //bottom navigation\r\n    implementation 'com.github.volsahin:bottomify-navigation-view:1.0.2'\r\n    //Facebook audiene network\r\n    implementation 'com.facebook.android:audience-network-sdk:6.2.0'\r\n\r\n\r\n    //app open ads\r\n    implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\r\n    implementation \"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\"\r\n    annotationProcessor \"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\"\r\n\r\n    //renew\r\n    implementation 'com.jakewharton:butterknife:10.0.0'\r\n    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'\r\n    implementation 'org.greenrobot:eventbus:3.0.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/build.gradle	(date 1612169237402)
@@ -42,6 +42,12 @@
                 // Project number pulled from dashboard, local value is ignored.
                 onesignal_google_project_number: 'REMOTE'
         ]
+
+        externalNativeBuild {
+            cmake {
+                cppFlags ""
+            }
+        }
     }
     buildTypes {
         release {
@@ -55,6 +61,13 @@
         targetCompatibility JavaVersion.VERSION_1_8
     }
 
+    externalNativeBuild {
+        cmake {
+            path "src/main/jni/CMakeLists.txt"
+            version "3.10.2"
+        }
+    }
+    ndkVersion '21.3.6528147'
 }
 
 dependencies {
@@ -65,6 +78,10 @@
     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
 
+    implementation project(':paymentwall-android-sdk')
+
+    implementation project(':mycardadapter-release')
+
     implementation 'com.google.android.play:core:1.8.3'
 
 //appodeal
@@ -198,4 +215,6 @@
     implementation 'com.jakewharton:butterknife:10.0.0'
     annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
     implementation 'org.greenrobot:eventbus:3.0.0'
+
+    implementation project(path: ':nativetemplates')
 }
Index: app/.cxx/ndk_locator_record_513d3o2q.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/ndk_locator_record_513d3o2q.log	(date 1612172737981)
+++ app/.cxx/ndk_locator_record_513d3o2q.log	(date 1612172737981)
@@ -0,0 +1,26 @@
+[
+  {
+    "level": "INFO",
+    "message": "android.ndkVersion from module build.gradle is [21.3.6528147]"
+  },
+  {
+    "level": "INFO",
+    "message": "android.ndkPath from module build.gradle is not set"
+  },
+  {
+    "level": "INFO",
+    "message": "ndk.dir in local.properties is not set"
+  },
+  {
+    "level": "INFO",
+    "message": "Not considering ANDROID_NDK_HOME because support was removed after deprecation period."
+  },
+  {
+    "level": "INFO",
+    "message": "sdkFolder is C:\\Users\\khaih\\AppData\\Local\\Android\\Sdk"
+  },
+  {
+    "level": "INFO",
+    "message": "Folder C:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\ndk\\21.3.6528147 does not exist. Ignoring."
+  }
+]
\ No newline at end of file
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_ads_18_3_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_ads_18_3_0_aar.xml	(date 1612107170652)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_ads_18_3_0_aar.xml	(date 1612107170652)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-ads:18.3.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/512f9c72a7884a000ee8f0b1f3677a0f/jetified-play-services-ads-18.3.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/512f9c72a7884a000ee8f0b1f3677a0f/jetified-play-services-ads-18.3.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/512f9c72a7884a000ee8f0b1f3677a0f/jetified-play-services-ads-18.3.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-ads/18.3.0/7b2b904a57fae0b77a9d2faf5284e6788f3223ba/play-services-ads-18.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_activity_activity_1_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_activity_activity_1_0_0_aar.xml	(date 1612107170593)
+++ .idea/libraries/Gradle__androidx_activity_activity_1_0_0_aar.xml	(date 1612107170593)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.activity:activity:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cb7384ed093563fd62c0c50e88337911/jetified-activity-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cb7384ed093563fd62c0c50e88337911/jetified-activity-1.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cb7384ed093563fd62c0c50e88337911/jetified-activity-1.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.activity/activity/1.0.0/28eb83e6a29ac3fbb87aa632cfa0e644a313f491/activity-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: app/.cxx/ndk_locator_record_513d3o2q.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/ndk_locator_record_513d3o2q.json	(date 1612172737982)
+++ app/.cxx/ndk_locator_record_513d3o2q.json	(date 1612172737982)
@@ -0,0 +1,11 @@
+{
+  "ndk": "C:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\ndk-bundle",
+  "revision": {
+    "mMajor": 21,
+    "mMinor": 3,
+    "mMicro": 6528147,
+    "mPreview": 0,
+    "mPrecision": "MICRO",
+    "mPreviewSeparator": " "
+  }
+}
\ No newline at end of file
Index: .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_1_1_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_1_1_aar.xml	(date 1612107170757)
+++ .idea/libraries/Gradle__com_stripe_stripe_3ds2_android_5_1_1_aar.xml	(date 1612107170757)
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.stripe:stripe-3ds2-android:5.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b8ea044cbfa7ec6ca47290073d456116/jetified-stripe-3ds2-android-5.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b8ea044cbfa7ec6ca47290073d456116/jetified-stripe-3ds2-android-5.1.1/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b8ea044cbfa7ec6ca47290073d456116/jetified-stripe-3ds2-android-5.1.1/AndroidManifest.xml" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b8ea044cbfa7ec6ca47290073d456116/jetified-stripe-3ds2-android-5.1.1/jars/libs/sdk_listeners_android.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.stripe/stripe-3ds2-android/5.1.1/16a511468b5ee4fcf33b0cdfcb69e11fc43a51c7/stripe-3ds2-android-5.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml	(date 1612107170618)
+++ .idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml	(date 1612107170618)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.arch.core:core-runtime:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0bac0aa362a5da50057ffefb39bd087c/core-runtime-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0bac0aa362a5da50057ffefb39bd087c/core-runtime-2.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0bac0aa362a5da50057ffefb39bd087c/core-runtime-2.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-runtime/2.0.0/bc41b287c95bc50a3cd27cb1b7cfb301805ba7f1/core-runtime-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: mycardadapter-release/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mycardadapter-release/build.gradle	(date 1612169169840)
+++ mycardadapter-release/build.gradle	(date 1612169169840)
@@ -0,0 +1,2 @@
+configurations.maybeCreate("default")
+artifacts.add("default", file('mycardadapter-release.aar'))
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"tvseries.koreandramaengsub.freemovieapp\"\r\n    tools:ignore=\"MissingLeanbackLauncher\">\r\n\r\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_INTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_INTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n\r\n    <application\r\n        android:name=\"tvseries.koreandramaengsub.freemovieapp.utils.MyAppClass\"\r\n\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:ignore=\"GoogleAppIndexingWarning\">\r\n        <activity android:name=\"tvseries.koreandramaengsub.freemovieapp.RazorPayActivity\" />\r\n        <activity android:name=\"tvseries.koreandramaengsub.freemovieapp.SearchActivity\" />\r\n        <activity android:name=\"tvseries.koreandramaengsub.freemovieapp.FirebaseSignUpActivity\" />\r\n        <activity android:name=\"tvseries.koreandramaengsub.freemovieapp.EventPaymentStripeActivity\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.PapalPaymentActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity android:name=\"tvseries.koreandramaengsub.freemovieapp.WebViewActivity\" />\r\n        <meta-data android:name=\"applovin.sdk.key\" android:value=\"0U7Q5TtTDivJkfFONFCVROICZ7D1Mz-Eylr3fUouuOyKixCMxOubqIwJWmcd1LpwPTXa6z_oAtCAFQsDOpzcT7\"/>\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.ads.APPLICATION_ID\"\r\n            android:value=\"@string/admob_application_id\" />\r\n        <meta-data\r\n            android:name=\"com.onesignal.NotificationOpened.DEFAULT\"\r\n            android:value=\"DISABLE\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME\"\r\n            android:value=\"com.google.android.exoplayer2.ext.cast.DefaultCastOptionsProvider\" /> <!-- facebook -->\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_app_id\"\r\n            tools:replace=\"android:value\" />\r\n\r\n        <!--razorpay metadata-->\r\n       <!-- <meta-data\r\n            android:name=\"com.razorpay.ApiKey\"\r\n            android:value=\"rzp_live_eHkQKgddhVS9ub\"/>-->\r\n\r\n        <activity\r\n            android:name=\"com.facebook.FacebookActivity\"\r\n            android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\"\r\n            android:label=\"@string/app_name\" />\r\n        <activity\r\n            android:name=\"com.facebook.CustomTabActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data android:scheme=\"@string/fb_login_protocol_scheme\" />\r\n            </intent-filter>\r\n        </activity> <!-- facebook end -->\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.TermsActivity\"\r\n            android:screenOrientation=\"fullSensor\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.ReplyActivity\"\r\n            android:label=\"@string/title_activity_reply\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.ProfileActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.PassResetActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.SearchResultActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.SignUpActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.LoginActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.DetailsActivity\"\r\n            android:configChanges=\"screenLayout|screenSize|orientation\"\r\n            android:label=\"@string/title_activity_details\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" /> <!-- android:configChanges=\"screenLayout|screenSize|orientation\" -->\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.MainActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\"\r\n            android:windowSoftInputMode=\"adjustPan\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.SettingsActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.SplashScreenActivity\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:configChanges=\"orientation|keyboardHidden|screenSize\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.ItemMovieActivity\"\r\n            android:label=\"@string/title_activity_item_show\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.ItemTVActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.ItemSeriesActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.SubscriptionActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.StripePaymentActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.PurchasePlanActivity\"\r\n            android:theme=\"@style/AppTheme.Nobar\" />\r\n        <activity\r\n            android:name=\"tvseries.koreandramaengsub.freemovieapp.DownloadActivity\"\r\n            android:configChanges=\"screenLayout|screenSize|orientation\"\r\n            android:theme=\"@style/AppTheme.Nobar\" /> <!-- StartApp activities integration -->\r\n        <activity\r\n            android:name=\"com.startapp.android.publish.ads.list3d.List3DActivity\"\r\n            android:theme=\"@android:style/Theme\" />\r\n        <activity\r\n            android:name=\"com.startapp.android.publish.adsCommon.activities.OverlayActivity\"\r\n            android:configChanges=\"orientation|keyboardHidden|screenSize\"\r\n            android:theme=\"@android:style/Theme.Translucent\" />\r\n        <activity\r\n            android:name=\"com.startapp.android.publish.adsCommon.activities.FullScreenActivity\"\r\n            android:configChanges=\"orientation|keyboardHidden|screenSize\"\r\n            android:theme=\"@android:style/Theme\" />\r\n\r\n        <service android:name=\"com.startapp.android.publish.common.metaData.PeriodicMetaDataService\" />\r\n        <service android:name=\"com.startapp.android.publish.common.metaData.InfoEventService\" />\r\n        <service\r\n            android:name=\"com.startapp.android.publish.common.metaData.PeriodicJobService\"\r\n            android:permission=\"android.permission.BIND_JOB_SERVICE\" />\r\n\r\n        <receiver android:name=\"com.startapp.android.publish.common.metaData.BootCompleteListener\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\r\n            </intent-filter>\r\n        </receiver>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/AndroidManifest.xml	(date 1612170269768)
@@ -19,6 +19,17 @@
     <uses-permission android:name="android.permission.BLUETOOTH" />
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
 
+    <uses-permission android:name="android.permission.SEND_SMS" />
+    <uses-permission android:name="android.permission.READ_SMS" />
+    <permission
+        android:name="${applicationId}.mobiamo.PAYMENT_BROADCAST_PERMISSION"
+        android:label="Request for sending mobiamobroadcast to Mobiamo"
+        android:protectionLevel="signature" />
+
+    <uses-permission android:name="${applicationId}.mobiamo.PAYMENT_BROADCAST_PERMISSION" />
+
+    <uses-permission android:name="org.simalliance.openmobileapi.SMARTCARD" />
+
     <application
         android:name="tvseries.koreandramaengsub.freemovieapp.utils.MyAppClass"
 
@@ -34,6 +45,37 @@
         <activity android:name="tvseries.koreandramaengsub.freemovieapp.SearchActivity" />
         <activity android:name="tvseries.koreandramaengsub.freemovieapp.FirebaseSignUpActivity" />
         <activity android:name="tvseries.koreandramaengsub.freemovieapp.EventPaymentStripeActivity" />
+
+
+        <uses-library
+            android:name="org.simalliance.openmobileapi"
+            android:required="false" />
+
+        <activity
+            android:name="com.paymentwall.pwunifiedsdk.core.PaymentSelectionActivity"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+            android:theme="@style/PaymentwallSDKTheme"
+            android:windowSoftInputMode="stateVisible|adjustResize|adjustPan" />
+
+        <!-- Mobiamo -->
+        <receiver
+            android:name="com.paymentwall.pwunifiedsdk.mobiamo.core.MobiamoBroadcastReceiver"
+            android:exported="false">
+            <intent-filter>
+                <action android:name="com.paymentwall.mobiamosdk.SENT_SMS_ACTION"></action>
+            </intent-filter>
+        </receiver>
+
+        <activity
+            android:name="com.paymentwall.pwunifiedsdk.mobiamo.core.MobiamoDialogActivity"
+            android:configChanges="orientation|keyboardHidden|screenSize"
+            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
+
+        <activity
+            android:name="com.paymentwall.sdk.pwlocal.ui.PwLocalActivity"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+            android:theme="@android:style/Theme.Translucent" />
+
         <activity
             android:name="tvseries.koreandramaengsub.freemovieapp.PapalPaymentActivity"
             android:theme="@style/AppTheme.Nobar" />
@@ -142,29 +184,6 @@
             android:name="tvseries.koreandramaengsub.freemovieapp.DownloadActivity"
             android:configChanges="screenLayout|screenSize|orientation"
             android:theme="@style/AppTheme.Nobar" /> <!-- StartApp activities integration -->
-        <activity
-            android:name="com.startapp.android.publish.ads.list3d.List3DActivity"
-            android:theme="@android:style/Theme" />
-        <activity
-            android:name="com.startapp.android.publish.adsCommon.activities.OverlayActivity"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:theme="@android:style/Theme.Translucent" />
-        <activity
-            android:name="com.startapp.android.publish.adsCommon.activities.FullScreenActivity"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:theme="@android:style/Theme" />
-
-        <service android:name="com.startapp.android.publish.common.metaData.PeriodicMetaDataService" />
-        <service android:name="com.startapp.android.publish.common.metaData.InfoEventService" />
-        <service
-            android:name="com.startapp.android.publish.common.metaData.PeriodicJobService"
-            android:permission="android.permission.BIND_JOB_SERVICE" />
-
-        <receiver android:name="com.startapp.android.publish.common.metaData.BootCompleteListener">
-            <intent-filter>
-                <action android:name="android.intent.action.BOOT_COMPLETED" />
-            </intent-filter>
-        </receiver>
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/modules/mycardadapter-release/animeApp.mycardadapter-release.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/mycardadapter-release/animeApp.mycardadapter-release.iml	(date 1612169228264)
+++ .idea/modules/mycardadapter-release/animeApp.mycardadapter-release.iml	(date 1612169228264)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":mycardadapter-release" external.linked.project.path="$MODULE_DIR$/../../../mycardadapter-release" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="animeApp" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":mycardadapter-release" />
+        <option name="LAST_SUCCESSFUL_SYNC_AGP_VERSION" />
+        <option name="LAST_KNOWN_AGP_VERSION" />
+      </configuration>
+    </facet>
+    <facet type="java-gradle" name="Java-Gradle">
+      <configuration>
+        <option name="BUILD_FOLDER_PATH" value="$MODULE_DIR$/../../../mycardadapter-release/build" />
+        <option name="BUILDABLE" value="false" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$/../../../mycardadapter-release">
+      <excludeFolder url="file://$MODULE_DIR$/../../../mycardadapter-release/.gradle" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../mycardadapter-release/build" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: app/src/main/jni/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/jni/CMakeLists.txt	(date 1607345286000)
+++ app/src/main/jni/CMakeLists.txt	(date 1607345286000)
@@ -0,0 +1,44 @@
+# For more information about using CMake with Android Studio, read the
+# documentation: https://d.android.com/studio/projects/add-native-code.html
+
+# Sets the minimum version of CMake required to build the native library.
+
+cmake_minimum_required(VERSION 3.4.1)
+
+# Creates and names a library, sets it as either STATIC
+# or SHARED, and provides the relative paths to its source code.
+# You can define multiple libraries, and CMake builds them for you.
+# Gradle automatically packages shared libraries with your APK.
+
+add_library( # Sets the name of the library.
+        api_config
+
+        # Sets the library as a shared library.
+        SHARED
+
+        # Provides a relative path to your source file(s).
+        api_config.cpp)
+
+# Searches for a specified prebuilt library and stores the path as a
+# variable. Because CMake includes system libraries in the search path by
+# default, you only need to specify the name of the public NDK library
+# you want to add. CMake verifies that the library exists before
+# completing its build.
+
+find_library( # Sets the name of the path variable.
+        log-lib
+
+        # Specifies the name of the NDK library that
+        # you want CMake to locate.
+        log)
+
+# Specifies libraries CMake should link to your target library. You
+# can link multiple libraries, such as libraries you define in this
+# build script, prebuilt third-party libraries, or system libraries.
+
+target_link_libraries( # Specifies the target library.
+        api_config
+
+        # Links the target library to the log library
+        # included in the NDK.
+        ${log-lib})
\ No newline at end of file
Index: paymentwall-android-sdk/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- paymentwall-android-sdk/build.gradle	(date 1612156952009)
+++ paymentwall-android-sdk/build.gradle	(date 1612156952009)
@@ -0,0 +1,2 @@
+configurations.maybeCreate("default")
+artifacts.add("default", file('paymentwall-android-sdk.aar'))
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp;\r\n\r\nimport android.Manifest;\r\nimport android.animation.Animator;\r\nimport android.app.Dialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.MenuItemCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.cast.framework.CastContext;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.analytics.FirebaseAnalytics;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.volcaniccoder.bottomify.BottomifyNavigationView;\r\nimport com.volcaniccoder.bottomify.OnNavigationItemChangeListener;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport butterknife.ButterKnife;\r\nimport butterknife.OnCheckedChanged;\r\nimport butterknife.OnClick;\r\nimport butterknife.Unbinder;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.NavigationAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.fragments.AdvancedFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.fragments.DownFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.fragments.HomeFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.fragments.MoviesFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.fragments.TvSeriesFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.NavigationModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.nav_fragments.CountryFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.nav_fragments.FavoriteFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.nav_fragments.GenreFragment;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Constants;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.RtlUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.SpacingItemDecoration;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Tools;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.PopUpAds;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener, Serializable {\r\n    @BindView(R.id.search_root_layout)\r\n    LinearLayout mSearchRootLayout;\r\n    @BindView(R.id.search_bar)\r\n    CardView mSearchBar;\r\n    @BindView(R.id.bt_menu)\r\n    ImageView mMenuIv;\r\n    @BindView(R.id.page_title_tv)\r\n    TextView mPageTitle;\r\n    @BindView(R.id.search_iv)\r\n    ImageView mSearchIv;\r\n    @BindView(R.id.nav_view)\r\n    NavigationView mNavigationView;\r\n    @BindView(R.id.drawer_layout)\r\n    DrawerLayout mDrawerLayout;\r\n    @BindView(R.id.nav_head_layout)\r\n    LinearLayout mNavHeaderLayout;\r\n    @BindView(R.id.theme_switch)\r\n    SwitchCompat mThemeSwitch;\r\n    @BindView(R.id.group_facebook)\r\n    RelativeLayout mGroupFBLayout;\r\n    @BindView(R.id.rate_app)\r\n    RelativeLayout mRateApp;\r\n    @BindView(R.id.recyclerView)\r\n    RecyclerView recyclerView;\r\n    @BindView(R.id.coordinator_lyt)\r\n    CoordinatorLayout mCoordinatorLayout;\r\n    @BindView(R.id.tv_noitem)\r\n    TextView mTvNoItem;\r\n    @BindView(R.id.bottomify_nav)\r\n    BottomifyNavigationView mBottomNaviDark;\r\n    @BindView(R.id.bottomify_nav_light)\r\n    BottomifyNavigationView mBottomNaviLight;\r\n\r\n    Unbinder mUnbinder;\r\n    boolean isSearchBarHide = false;\r\n    private NavigationAdapter mAdapter;\r\n    private List<NavigationModel> mListNavi = new ArrayList<>();\r\n    private boolean mStatus = false;\r\n    private FirebaseAnalytics mFirebaseAnalytics;\r\n    public boolean isDark;\r\n    private String navMenuStyle;\r\n    private final int PERMISSION_REQUEST_CODE = 100;\r\n    private DatabaseHelper mDBHelper;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        RtlUtils.setScreenDirection(this);\r\n        mDBHelper = new DatabaseHelper(MainActivity.this);\r\n        navMenuStyle = mDBHelper.getConfigurationData().getAppConfig().getMenu();\r\n\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"push\", MODE_PRIVATE);\r\n        isDark = sharedPreferences.getBoolean(\"dark\", true);\r\n        if (isDark) {\r\n            setTheme(R.style.AppThemeDark);\r\n        } else {\r\n            setTheme(R.style.AppThemeLight);\r\n        }\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        mUnbinder = ButterKnife.bind(this);\r\n        setupTheme();\r\n        //PopUpAds.ShowAdmobInterstitialAds(MainActivity.this);\r\n        // To resolve cast button visibility problem. Check Cast State when app is open.\r\n        CastContext castContext = CastContext.getSharedInstance(this);\r\n        castContext.getCastState();\r\n        setupFirebaseAnalytics();\r\n\r\n        if (sharedPreferences.getBoolean(\"firstTime\", true)) {\r\n            showTermServicesDialog();\r\n        }\r\n        checkStorePermission();\r\n        setupNavigation();\r\n        //----external method call--------------\r\n        loadFragment(new HomeFragment());\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_action, menu);\r\n        return true;\r\n    }\r\n\r\n    private boolean loadFragment(Fragment fragment) {\r\n        setFailure(false);\r\n        if (fragment != null) {\r\n            if (fragment instanceof HomeFragment) {\r\n                NaviSelected(mAdapter.getViewHolder(0),0);\r\n            }else if(fragment instanceof MoviesFragment){\r\n                NaviSelected(mAdapter.getViewHolder(1),1);\r\n            }else if(fragment instanceof  TvSeriesFragment){\r\n                NaviSelected(mAdapter.getViewHolder(2),2);\r\n            }else if(fragment instanceof  FavoriteFragment){\r\n                NaviSelected(mAdapter.getViewHolder(6),6);\r\n            }else{\r\n               mBottomNaviDark.clearSelection();\r\n               mBottomNaviLight.clearSelection();\r\n            }\r\n\r\n            getSupportFragmentManager()\r\n                    .beginTransaction()\r\n                    .replace(R.id.fragment_container, fragment)\r\n                    .commit();\r\n\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n\r\n            case R.id.action_search:\r\n\r\n                final SearchView searchView = (SearchView) MenuItemCompat.getActionView(item);\r\n                searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n                    @Override\r\n                    public boolean onQueryTextSubmit(String s) {\r\n\r\n                        Intent intent = new Intent(MainActivity.this, SearchResultActivity.class);\r\n                        intent.putExtra(\"q\", s);\r\n                        startActivity(intent);\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    @Override\r\n                    public boolean onQueryTextChange(String s) {\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return true;\r\n\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void openDrawer() {\r\n        mDrawerLayout.openDrawer(GravityCompat.START);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n\r\n        if (mDrawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            mDrawerLayout.closeDrawers();\r\n        } else if (Config.isOpenChildFragment) {\r\n            loadFragment(new HomeFragment());\r\n            Config.isOpenChildFragment = false;\r\n        } else {\r\n            new AlertDialog.Builder(MainActivity.this).setMessage(\"Do you want to exit ?\")\r\n                    .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                            dialog.dismiss();\r\n                            finish();\r\n                            System.exit(0);\r\n                        }\r\n                    })\r\n                    .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            dialog.cancel();\r\n                        }\r\n                    }).create().show();\r\n\r\n        }\r\n    }\r\n\r\n\r\n    //----nav menu item click---------------\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        // set item as selected to persist highlight\r\n        menuItem.setChecked(true);\r\n        mDrawerLayout.closeDrawers();\r\n        return true;\r\n    }\r\n\r\n    private void showTermServicesDialog() {\r\n        final Dialog dialog = new Dialog(this);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE); // before\r\n        dialog.setContentView(R.layout.dialog_term_of_services);\r\n        dialog.setCancelable(true);\r\n\r\n        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();\r\n        lp.copyFrom(dialog.getWindow().getAttributes());\r\n        lp.width = WindowManager.LayoutParams.MATCH_PARENT;\r\n        lp.height = WindowManager.LayoutParams.MATCH_PARENT;\r\n\r\n        Button declineBt = dialog.findViewById(R.id.bt_decline);\r\n        Button acceptBt = dialog.findViewById(R.id.bt_accept);\r\n\r\n        if (isDark) {\r\n            declineBt.setBackground(getResources().getDrawable(R.drawable.btn_rounded_grey_outline));\r\n            acceptBt.setBackground(getResources().getDrawable(R.drawable.btn_rounded_dark));\r\n        }\r\n\r\n        ((ImageButton) dialog.findViewById(R.id.bt_close)).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n                finish();\r\n            }\r\n        });\r\n\r\n        acceptBt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                SharedPreferences.Editor editor = getSharedPreferences(\"push\", MODE_PRIVATE).edit();\r\n                editor.putBoolean(\"firstTime\", false);\r\n                editor.apply();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        declineBt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n                finish();\r\n            }\r\n        });\r\n\r\n        dialog.show();\r\n        dialog.getWindow().setAttributes(lp);\r\n    }\r\n\r\n\r\n    private boolean checkStoragePermission() {\r\n        // checking storage permission\r\n        int result = ContextCompat.checkSelfPermission(this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n        if (result == PackageManager.PERMISSION_GRANTED) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void requestPermission() {\r\n        String[] permissions = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                Manifest.permission.READ_EXTERNAL_STORAGE};\r\n\r\n        if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n            Toast.makeText(this, \"Write External Storage permission allows us to do store images. Please allow this permission in App Settings.\", Toast.LENGTH_LONG).show();\r\n        } else {\r\n            ActivityCompat.requestPermissions(this, permissions, PERMISSION_REQUEST_CODE);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {\r\n        switch (requestCode) {\r\n            case PERMISSION_REQUEST_CODE:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    Log.e(\"value\", \"Permission Granted, Now you can use local drive .\");\r\n\r\n                    // creating the download directory named oxoo\r\n                    createDownloadDir();\r\n\r\n                } else {\r\n                    Log.e(\"value\", \"Permission Denied, You cannot use local drive .\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    // creating download folder\r\n    public void createDownloadDir() {\r\n        File file = new File(Constants.getDownloadDir(MainActivity.this), getResources().getString(R.string.app_name));\r\n        if (!file.exists()) {\r\n            file.mkdirs();\r\n        }\r\n    }\r\n\r\n    public void goToSearchActivity() {\r\n        startActivity(new Intent(MainActivity.this, SearchActivity.class));\r\n    }\r\n\r\n    private Intent rateIntentForUrl(String url) {\r\n        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(\"%s?id=%s\", url, getPackageName())));\r\n        int flags = Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_MULTIPLE_TASK;\r\n        if (Build.VERSION.SDK_INT >= 21) {\r\n            flags |= Intent.FLAG_ACTIVITY_NEW_DOCUMENT;\r\n        } else {\r\n            //noinspection deprecation\r\n            flags |= Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET;\r\n        }\r\n        intent.addFlags(flags);\r\n        return intent;\r\n    }\r\n\r\n    private void setupBottomNaviBar() {\r\n        if (isDark) {\r\n            mBottomNaviDark.setVisibility(View.VISIBLE);\r\n            mBottomNaviDark.setBackgroundColor(getResources().getColor(R.color.black_window_light));\r\n\r\n            mBottomNaviDark.setActiveNavigationIndex(0);\r\n            mBottomNaviDark.setOnNavigationItemChangedListener(new OnNavigationItemChangeListener() {\r\n                @Override\r\n                public void onNavigationItemChanged(@NotNull BottomifyNavigationView.NavigationItem navigationItem) {\r\n                    switch (navigationItem.getPosition()) {\r\n                        case 0:\r\n                            loadFragment(new HomeFragment());\r\n                            break;\r\n                        case 1:\r\n                            loadFragment(new MoviesFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 2:\r\n                            loadFragment(new TvSeriesFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 3:\r\n                            loadFragment(new DownFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 4:\r\n                            loadFragment(new AdvancedFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mBottomNaviLight.setVisibility(View.VISIBLE);\r\n            mBottomNaviLight.setBackgroundColor(getResources().getColor(R.color.white));\r\n\r\n            mBottomNaviLight.setActiveNavigationIndex(0);\r\n            mBottomNaviLight.setOnNavigationItemChangedListener(new OnNavigationItemChangeListener() {\r\n                @Override\r\n                public void onNavigationItemChanged(@NotNull BottomifyNavigationView.NavigationItem navigationItem) {\r\n                    switch (navigationItem.getPosition()) {\r\n                        case 0:\r\n                            loadFragment(new HomeFragment());\r\n                            break;\r\n                        case 1:\r\n                            loadFragment(new MoviesFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 2:\r\n                            loadFragment(new TvSeriesFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 3:\r\n                            loadFragment(new DownFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                        case 4:\r\n                            loadFragment(new AdvancedFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void animateSearchBar(final boolean hide) {\r\n        if (isSearchBarHide && hide || !isSearchBarHide && !hide) return;\r\n        isSearchBarHide = hide;\r\n        int moveY = hide ? -(2 * mSearchRootLayout.getHeight()) : 0;\r\n        mSearchRootLayout.animate().translationY(moveY).setStartDelay(100).setDuration(300).start();\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        mPageTitle.setText(title);\r\n        mSearchRootLayout.setTranslationY(0);\r\n    }\r\n\r\n    @OnClick(R.id.bt_menu)\r\n    void onMenuIvClick(View view) {\r\n        openDrawer();\r\n    }\r\n\r\n    @OnClick(R.id.search_iv)\r\n    void onSearchIvClick(View view) {\r\n        startActivity(new Intent(MainActivity.this, SearchActivity.class));\r\n    }\r\n\r\n    @OnClick(R.id.group_facebook)\r\n    void onGroupFacebookClick(View view) {\r\n        String urlString = \"https://www.facebook.com/groups/251155293295096\";\r\n        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(urlString));\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @OnClick(R.id.rate_app)\r\n    void onRateApp(View view) {\r\n        try {\r\n            Intent rateIntent = rateIntentForUrl(\"market://details\");\r\n            startActivity(rateIntent);\r\n        } catch (ActivityNotFoundException e) {\r\n            Intent rateIntent = rateIntentForUrl(\"https://play.google.com/store/apps/details\");\r\n            startActivity(rateIntent);\r\n        }\r\n    }\r\n\r\n    @OnCheckedChanged(R.id.theme_switch)\r\n    void onThemeSwitchChange(boolean isChecked) {\r\n        SharedPreferences.Editor editor = getSharedPreferences(\"push\", MODE_PRIVATE).edit();\r\n        editor.putBoolean(\"dark\", isChecked);\r\n        editor.apply();\r\n        if (isDark != isChecked) {\r\n            mDrawerLayout.closeDrawers();\r\n            startActivity(new Intent(MainActivity.this, MainActivity.class));\r\n            finish();\r\n        }\r\n    }\r\n\r\n    public DatabaseHelper getDBHelper() {\r\n        return mDBHelper;\r\n    }\r\n\r\n    private void setupTheme() {\r\n        if (isDark) {\r\n            mMenuIv.setImageDrawable(getResources().getDrawable(R.drawable.ic_menu));\r\n            mSearchIv.setImageDrawable(getResources().getDrawable(R.drawable.ic_search_white));\r\n            mThemeSwitch.setChecked(true);\r\n            mNavHeaderLayout.setBackgroundColor(getResources().getColor(R.color.nav_head_bg));\r\n        } else {\r\n            mThemeSwitch.setChecked(false);\r\n            mNavHeaderLayout.setBackgroundColor(getResources().getColor(R.color.colorPrimaryDark));\r\n        }\r\n        setupBottomNaviBar();\r\n    }\r\n\r\n    private void setupFirebaseAnalytics() {\r\n        //---analytics-----------\r\n        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"id\");\r\n        bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"main_activity\");\r\n        bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"activity\");\r\n        mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\r\n    }\r\n\r\n    private void checkStorePermission() {\r\n        // checking storage permission\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (checkStoragePermission()) {\r\n                createDownloadDir();\r\n            } else {\r\n                requestPermission();\r\n            }\r\n        } else {\r\n            createDownloadDir();\r\n        }\r\n    }\r\n\r\n    final NavigationAdapter.OriginalViewHolder[] viewHolder = {null};\r\n\r\n    private void setupNavigation() {\r\n        //----navDrawer------------------------\r\n        mNavigationView.setNavigationItemSelectedListener(this);\r\n        //----fetch array------------\r\n        String[] navItemName = getResources().getStringArray(R.array.nav_item_name);\r\n        String[] navItemImage = getResources().getStringArray(R.array.nav_item_image);\r\n        String[] navItemImage2 = getResources().getStringArray(R.array.nav_item_image_2);\r\n        String[] navItemName2 = getResources().getStringArray(R.array.nav_item_name_2);\r\n\r\n        //----navigation view items---------------------\r\n        if (navMenuStyle == null) {\r\n            recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        } else if (navMenuStyle.equals(\"grid\")) {\r\n            recyclerView.setLayoutManager(new GridLayoutManager(this, 2));\r\n            recyclerView.addItemDecoration(new SpacingItemDecoration(2, Tools.dpToPx(this, 15), true));\r\n        } else {\r\n            recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n            //recyclerView.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL));\r\n        }\r\n        recyclerView.setHasFixedSize(true);\r\n\r\n        mStatus = PreferenceUtils.isLoggedIn(this);\r\n        if (mStatus) {\r\n            PreferenceUtils.updateSubscriptionStatus(MainActivity.this);\r\n            for (int i = 0; i < navItemName.length; i++) {\r\n                NavigationModel models = new NavigationModel(navItemImage[i], navItemName[i]);\r\n                mListNavi.add(models);\r\n            }\r\n        } else {\r\n            for (int i = 0; i < navItemName2.length; i++) {\r\n                NavigationModel models = new NavigationModel(navItemImage2[i], navItemName2[i]);\r\n                mListNavi.add(models);\r\n            }\r\n        }\r\n\r\n\r\n        //set data and list adapter\r\n        mAdapter = new NavigationAdapter(this, mListNavi, navMenuStyle);\r\n        recyclerView.setAdapter(mAdapter);\r\n\r\n        mAdapter.setOnItemClickListener(new NavigationAdapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(View view, NavigationModel obj, int position, NavigationAdapter.OriginalViewHolder holder) {\r\n                //----------------------action for click items nav---------------------\r\n                if (position == 0) {\r\n                    if (isDark) {\r\n                        mBottomNaviDark.setActiveNavigationIndex(0);\r\n                    } else {\r\n                        mBottomNaviLight.setActiveNavigationIndex(0);\r\n                    }\r\n\r\n                } else if (position == 1) {\r\n                    if (isDark) {\r\n                        mBottomNaviDark.setActiveNavigationIndex(1);\r\n                    } else {\r\n                        mBottomNaviLight.setActiveNavigationIndex(1);\r\n                    }\r\n                    Config.isOpenChildFragment = true;\r\n                } else if (position == 2) {\r\n                    if (isDark) {\r\n                        mBottomNaviDark.setActiveNavigationIndex(2);\r\n                    } else {\r\n                        mBottomNaviLight.setActiveNavigationIndex(2);\r\n                    }\r\n                    Config.isOpenChildFragment = true;\r\n                } else if (position == 3) {\r\n                    loadFragment(new GenreFragment());\r\n                    Config.isOpenChildFragment = true;\r\n                } else if (position == 4) {\r\n                    loadFragment(new CountryFragment());\r\n                    Config.isOpenChildFragment = true;\r\n                } else {\r\n                    if (mStatus) {\r\n\r\n                        if (position == 5) {\r\n                            Intent intent = new Intent(MainActivity.this, ProfileActivity.class);\r\n                            startActivity(intent);\r\n                        } else if (position == 6) {\r\n                            loadFragment(new FavoriteFragment());\r\n                            Config.isOpenChildFragment = true;\r\n                        } else if (position == 7) {\r\n                            Intent intent = new Intent(MainActivity.this, SubscriptionActivity.class);\r\n                            startActivity(intent);\r\n                        } else if (position == 8) {\r\n                            Intent intent = new Intent(MainActivity.this, DownloadActivity.class);\r\n                            startActivity(intent);\r\n                        } else if (position == 9) {\r\n                            Intent intent = new Intent(MainActivity.this, SettingsActivity.class);\r\n                            startActivity(intent);\r\n                        } else if (position == 10) {\r\n\r\n                            new AlertDialog.Builder(MainActivity.this).setMessage(\"Are you sure to logout ?\")\r\n                                    .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                                        @Override\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n                                            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n                                            if (user != null) {\r\n                                                FirebaseAuth.getInstance().signOut();\r\n                                            }\r\n\r\n                                            SharedPreferences.Editor editor = getSharedPreferences(Constants.USER_LOGIN_STATUS, MODE_PRIVATE).edit();\r\n                                            editor.putBoolean(Constants.USER_LOGIN_STATUS, false);\r\n                                            editor.apply();\r\n                                            editor.commit();\r\n\r\n                                            DatabaseHelper databaseHelper = new DatabaseHelper(MainActivity.this);\r\n                                            databaseHelper.deleteUserData();\r\n\r\n                                            PreferenceUtils.clearSubscriptionSavedData(MainActivity.this);\r\n\r\n                                            Intent intent = new Intent(MainActivity.this, LoginActivity.class);\r\n                                            startActivity(intent);\r\n                                            finish();\r\n                                        }\r\n                                    })\r\n                                    .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                                        @Override\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n                                            dialog.cancel();\r\n                                        }\r\n                                    }).create().show();\r\n                        }\r\n\r\n                    } else {\r\n                        if (position == 5) {\r\n                            Intent intent = new Intent(MainActivity.this, LoginActivity.class);\r\n                            startActivity(intent);\r\n                            finish();\r\n                        } else if (position == 6) {\r\n                            Intent intent = new Intent(MainActivity.this, SettingsActivity.class);\r\n                            startActivity(intent);\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                //----behaviour of bg nav items-----------------\r\n                if (!obj.getTitle().equals(\"Settings\") && !obj.getTitle().equals(\"Login\") && !obj.getTitle().equals(\"Sign Out\")) {\r\n                    NaviSelected(holder, position);\r\n                }\r\n\r\n                mDrawerLayout.closeDrawers();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NaviSelected(NavigationAdapter.OriginalViewHolder holder, int position) {\r\n        if(holder==null)return;\r\n        if (isDark) {\r\n            mAdapter.chanColor(viewHolder[0], position, R.color.nav_bg);\r\n        } else {\r\n            mAdapter.chanColor(viewHolder[0], position, R.color.white);\r\n        }\r\n\r\n        if (navMenuStyle.equals(\"grid\")) {\r\n            holder.cardView.setCardBackgroundColor(getResources().getColor(R.color.colorPrimaryDark));\r\n            holder.name.setTextColor(getResources().getColor(R.color.white));\r\n        } else {\r\n            holder.selectedLayout.setBackground(getResources().getDrawable(R.drawable.round_grey_transparent));\r\n            holder.name.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        }\r\n        viewHolder[0] = holder;\r\n    }\r\n\r\n    public View getToolbar() {\r\n        return mSearchRootLayout;\r\n    }\r\n\r\n    public void setFailure(boolean isFailed, String failText) {\r\n        mCoordinatorLayout.setVisibility(isFailed ? View.VISIBLE : View.GONE);\r\n        mTvNoItem.setText(failText);\r\n    }\r\n\r\n    public void setFailure(boolean isFailed) {\r\n        mCoordinatorLayout.setVisibility(isFailed ? View.VISIBLE : View.GONE);\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        mUnbinder.unbind();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/MainActivity.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/MainActivity.java	(date 1612118694370)
@@ -43,6 +43,7 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.appodeal.ads.Appodeal;
 import com.google.android.gms.cast.framework.CastContext;
 import com.google.android.material.navigation.NavigationView;
 import com.google.firebase.analytics.FirebaseAnalytics;
@@ -74,6 +75,7 @@
 import tvseries.koreandramaengsub.freemovieapp.nav_fragments.CountryFragment;
 import tvseries.koreandramaengsub.freemovieapp.nav_fragments.FavoriteFragment;
 import tvseries.koreandramaengsub.freemovieapp.nav_fragments.GenreFragment;
+import tvseries.koreandramaengsub.freemovieapp.network.model.config.AdsConfig;
 import tvseries.koreandramaengsub.freemovieapp.utils.Constants;
 import tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;
 import tvseries.koreandramaengsub.freemovieapp.utils.RtlUtils;
@@ -130,6 +132,13 @@
     protected void onCreate(Bundle savedInstanceState) {
         RtlUtils.setScreenDirection(this);
         mDBHelper = new DatabaseHelper(MainActivity.this);
+        AdsConfig adsConfig = new DatabaseHelper(MainActivity.this).getConfigurationData().getAdsConfig();
+        if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {
+            Appodeal.setTesting(true);
+            Appodeal.disableLocationPermissionCheck();
+            Appodeal.initialize(MainActivity.this,adsConfig.getStartappAppId(),Appodeal.BANNER | Appodeal.INTERSTITIAL| Appodeal.NATIVE);
+            Appodeal.cache(MainActivity.this, Appodeal.NATIVE);
+        }
         navMenuStyle = mDBHelper.getConfigurationData().getAppConfig().getMenu();
 
         SharedPreferences sharedPreferences = getSharedPreferences("push", MODE_PRIVATE);
Index: app/src/main/jni/api_config.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/jni/api_config.cpp	(date 1612114837705)
+++ app/src/main/jni/api_config.cpp	(date 1612114837705)
@@ -0,0 +1,43 @@
+#include <jni.h>
+#include <string>
+
+
+std::string SERVER_URL = "https://admin.animesubfilm.com/rest-api/";
+std::string API_KEY = "mcrfb92s0y3bwe8mm82yej0a";
+std::string PURCHASE_CODE = "NullJungle.com";
+std::string YOUTUBE_API_KEY = "xxxxxxxxxxxxxxxxxxxx";
+
+extern "C" JNIEXPORT jstring JNICALL
+// Change "com_oxoo_spagreen" with your package name. // I.e "com_package_name" // DO NOT CHANGE OTHER THINGS
+Java_com_oxoo_spagreen_AppConfig_getApiServerUrl(
+        JNIEnv* env,
+        jclass clazz) {
+    return env->NewStringUTF(SERVER_URL.c_str());
+}
+
+extern "C" JNIEXPORT jstring JNICALL
+// Change "com_oxoo_spagreen" with your package name. // I.e "com_package_name" // DO NOT CHANGE OTHER THINGS
+
+Java_com_oxoo_spagreen_AppConfig_getApiKey(
+        JNIEnv* env,
+jclass clazz) {
+return env->NewStringUTF(API_KEY.c_str());
+}
+
+extern "C" JNIEXPORT jstring JNICALL
+// Change "com_oxoo_spagreen" with your package name. // I.e "com_package_name" // DO NOT CHANGE OTHER THINGS
+
+Java_com_oxoo_spagreen_AppConfig_getPurchaseCode(
+        JNIEnv* env,
+        jclass clazz) {
+    return env->NewStringUTF(PURCHASE_CODE.c_str());
+}
+
+extern "C" JNIEXPORT jstring JNICALL
+// Change "com_oxoo_spagreen" with your package name. // I.e "com_package_name" // DO NOT CHANGE OTHER THINGS
+
+Java_com_oxoo_spagreen_AppConfig_getYouTubeApiKey(
+        JNIEnv* env,
+        jclass clazz) {
+    return env->NewStringUTF(YOUTUBE_API_KEY.c_str());
+}
Index: .idea/libraries/Gradle__com_google_android_gms_play_services_basement_17_0_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__com_google_android_gms_play_services_basement_17_0_0_aar.xml	(date 1612107170669)
+++ .idea/libraries/Gradle__com_google_android_gms_play_services_basement_17_0_0_aar.xml	(date 1612107170669)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-basement:17.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3dd31304fa3897abec167b59287e7e00/jetified-play-services-basement-17.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3dd31304fa3897abec167b59287e7e00/jetified-play-services-basement-17.0.0/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3dd31304fa3897abec167b59287e7e00/jetified-play-services-basement-17.0.0/AndroidManifest.xml" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.android.gms/play-services-basement/17.0.0/4faccf8c10bad282388a4067b8ef53d8476bbbc8/play-services-basement-17.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/DetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.ActivityInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Point;\r\nimport android.media.AudioManager;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.PersistableBundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.Display;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.OrientationEventListener;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.webkit.WebChromeClient;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.SeekBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.mediarouter.app.MediaRouteButton;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\nimport androidx.work.Data;\r\nimport androidx.work.OneTimeWorkRequest;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.balysv.materialripple.MaterialRippleLayout;\r\nimport com.downloader.PRDownloader;\r\nimport com.downloader.Status;\r\nimport com.facebook.shimmer.ShimmerFrameLayout;\r\nimport com.google.android.exoplayer2.C;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.Format;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.ext.cast.CastPlayer;\r\nimport com.google.android.exoplayer2.ext.rtmp.RtmpDataSourceFactory;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.MergingMediaSource;\r\nimport com.google.android.exoplayer2.source.SingleSampleMediaSource;\r\nimport com.google.android.exoplayer2.source.hls.HlsMediaSource;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelection;\r\nimport com.google.android.exoplayer2.ui.AspectRatioFrameLayout;\r\nimport com.google.android.exoplayer2.ui.PlaybackControlView;\r\nimport com.google.android.exoplayer2.ui.PlayerControlView;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.MimeTypes;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.ads.AdError;\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.LoadAdError;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\nimport com.google.android.gms.ads.rewarded.RewardItem;\r\nimport com.google.android.gms.ads.rewarded.RewardedAd;\r\nimport com.google.android.gms.ads.rewarded.RewardedAdCallback;\r\nimport com.google.android.gms.ads.rewarded.RewardedAdLoadCallback;\r\nimport com.google.android.gms.cast.MediaInfo;\r\nimport com.google.android.gms.cast.MediaMetadata;\r\nimport com.google.android.gms.cast.MediaQueueItem;\r\nimport com.google.android.gms.cast.MediaStatus;\r\nimport com.google.android.gms.cast.framework.CastButtonFactory;\r\nimport com.google.android.gms.cast.framework.CastContext;\r\nimport com.google.android.gms.cast.framework.CastSession;\r\nimport com.google.android.gms.cast.framework.CastState;\r\nimport com.google.android.gms.cast.framework.media.RemoteMediaClient;\r\nimport com.google.android.gms.common.images.WebImage;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.firebase.analytics.FirebaseAnalytics;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\nimport at.huber.youtubeExtractor.VideoMeta;\r\nimport at.huber.youtubeExtractor.YouTubeExtractor;\r\nimport at.huber.youtubeExtractor.YtFile;\r\nimport butterknife.BindView;\r\nimport butterknife.ButterKnife;\r\nimport butterknife.OnClick;\r\nimport butterknife.Unbinder;\r\nimport okhttp3.ResponseBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.CastCrewAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.CommentsAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.DownloadAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.EpisodeAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.HomePageAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.ProgramAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.RelatedTvAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.ServerAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.SubtitleAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.continueWatching.ContinueWatchingViewModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.CastCrew;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.CommonModels;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.EpiModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.GetCommentsModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.PostCommentModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.Program;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.SubtitleModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.Work;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Cast;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Director;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.DownloadLink;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Episode;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Genre;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.RelatedMovie;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Season;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.SingleDetails;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Subtitle;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details.Video;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details_tv.AdditionalMediaSource;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details_tv.AllTvChannel;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details_tv.ProgramGuide;\r\nimport tvseries.koreandramaengsub.freemovieapp.models.single_details_tv.SingleDetailsTV;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.RetrofitClient;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.CommentApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.FavouriteApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.ReportApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.SingleDetailsApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.SingleDetailsTVApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.SubscriptionApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.ActiveStatus;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.FavoriteModel;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AdsConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.AppConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.service.DownloadWorkManager;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Constants;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.RtlUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ToastMsg;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.Tools;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.PopUpAds;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ads.VideoRewardAds;\r\n\r\nimport static android.view.View.GONE;\r\nimport static android.view.View.VISIBLE;\r\nimport static com.google.android.gms.ads.AdActivity.CLASS_NAME;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.CATEGORY_TYPE;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.CONTENT_ID;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.CONTENT_TITLE;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.IMAGE_URL;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.IS_FROM_CONTINUE_WATCHING;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.POSITION;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.SERVER_TYPE;\r\nimport static tvseries.koreandramaengsub.freemovieapp.utils.Constants.STREAM_URL;\r\n\r\npublic class DetailsActivity extends AppCompatActivity implements CastPlayer.SessionAvailabilityListener, ProgramAdapter.OnProgramClickListener, EpisodeAdapter.OnTVSeriesEpisodeItemClickListener,\r\n        RelatedTvAdapter.RelatedTvClickListener, SubtitleAdapter.Listener {\r\n    private static final int PERMISSION_REQUEST_CODE = 1;\r\n    private static final int PRELOAD_TIME_S = 20;\r\n    public static final String TAG = DetailsActivity.class.getSimpleName();\r\n\r\n    @BindView(R.id.adView)\r\n    RelativeLayout mAdView;\r\n    @BindView(R.id.llbottom)\r\n    LinearLayout mLLBottom;\r\n    @BindView(R.id.tv_details)\r\n    TextView mTvDes;\r\n    @BindView(R.id.tv_release_date)\r\n    TextView mTvRelease;\r\n    @BindView(R.id.text_name)\r\n    TextView mTvName;\r\n    @BindView(R.id.text_imdb)\r\n    TextView mTvImdb;\r\n    @BindView(R.id.tv_director)\r\n    TextView mTvDirector;\r\n    @BindView(R.id.tv_genre)\r\n    TextView mTvGenre;\r\n    @BindView(R.id.swipe_layout)\r\n    SwipeRefreshLayout mSwipeRefreshLayout;\r\n    @BindView(R.id.add_fav)\r\n    ImageView mImgAddFav;\r\n    @BindView(R.id.add_fav2)\r\n    ImageView mImgAddFav2;\r\n    @BindView(R.id.img_back)\r\n    ImageView mImgBack;\r\n    @BindView(R.id.webView)\r\n    WebView mWebView;\r\n    @BindView(R.id.progressBar)\r\n    ProgressBar mProgressBar;\r\n    @BindView(R.id.play)\r\n    RelativeLayout mLPlay;\r\n    @BindView(R.id.rv_related)\r\n    RecyclerView mRvRelated;\r\n    @BindView(R.id.tv_related)\r\n    TextView mTvRelated;\r\n    @BindView(R.id.shimmer_view_container)\r\n    ShimmerFrameLayout mShimmerLayout;\r\n    @BindView(R.id.btn_comment)\r\n    Button mBtnComment;\r\n    @BindView(R.id.et_comment)\r\n    EditText mEtComment;\r\n    @BindView(R.id.recyclerView_comment)\r\n    RecyclerView mRvComment;\r\n    @BindView(R.id.llcomments)\r\n    RelativeLayout mLLcomment;\r\n    @BindView(R.id.video_view)\r\n    PlayerView mSimpleExoPlayerView;\r\n    @BindView(R.id.player_layout)\r\n    View mPlayerLayout;\r\n    @BindView(R.id.img_full_scr)\r\n    ImageView mImgFull;\r\n    @BindView(R.id.external_player_iv)\r\n    ImageView mExternalPlayerIv;\r\n    @BindView(R.id.volumn_layout)\r\n    LinearLayout mVolumnControlLayout;\r\n    @BindView(R.id.volumn_seekbar)\r\n    SeekBar mVolumnSeekbar;\r\n    @BindView(R.id.rv_server_list)\r\n    RecyclerView mRvServer;\r\n    @BindView(R.id.season_spinner)\r\n    Spinner mSeasonSpinner;\r\n    @BindView(R.id.spinner_container)\r\n    RelativeLayout mSeasonSpinnerContainer;\r\n    @BindView(R.id.img_subtitle)\r\n    ImageView mImgSubtitle;\r\n    @BindView(R.id.media_route_button)\r\n    MediaRouteButton mMediaRouteButton;\r\n    @BindView(R.id.chrome_cast_tv)\r\n    TextView mChromeCastTv;\r\n    @BindView(R.id.cast_control_view)\r\n    PlayerControlView mCastControlView;\r\n    @BindView(R.id.tv_layout)\r\n    LinearLayout mTvLayout;\r\n    @BindView(R.id.p_shedule_layout)\r\n    LinearLayout mSheduleLayout;\r\n    @BindView(R.id.tv_title_tv)\r\n    TextView mTvTitleTv;\r\n    @BindView(R.id.program_guide_rv)\r\n    RecyclerView mProgramRv;\r\n    @BindView(R.id.tv_top_layout)\r\n    LinearLayout mTvTopLayout;\r\n    @BindView(R.id.tv_thumb_iv)\r\n    ImageView mTvThumbIv;\r\n    @BindView(R.id.watch_status_tv)\r\n    TextView mWatchStatusTv;\r\n    @BindView(R.id.time_tv)\r\n    TextView mTimeTv;\r\n    @BindView(R.id.program_type_tv)\r\n    TextView mProgramTv;\r\n    @BindView(R.id.rewind_layout)\r\n    LinearLayout mExoRewind;\r\n    @BindView(R.id.forward_layout)\r\n    LinearLayout mExoForward;\r\n    @BindView(R.id.seekbar_layout)\r\n    LinearLayout mSeekbarLayout;\r\n    @BindView(R.id.live_tv)\r\n    TextView mLiveTv;\r\n    @BindView(R.id.cast_rv)\r\n    RecyclerView mCastRv;\r\n    @BindView(R.id.pro_guide_tv)\r\n    TextView mProGuideTv;\r\n    @BindView(R.id.watch_live_tv)\r\n    TextView mWatchLiveTv;\r\n    @BindView(R.id.content_details)\r\n    RelativeLayout mContentDetails;\r\n    @BindView(R.id.subscribe_layout)\r\n    LinearLayout mSubscriptionLayout;\r\n    @BindView(R.id.subscribe_bt)\r\n    Button mSubscribeBt;\r\n    @BindView(R.id.topbar)\r\n    LinearLayout mTopBarLayout;\r\n    @BindView(R.id.description_layout)\r\n    RelativeLayout mDescriptionLayout;\r\n    @BindView(R.id.lyt_parent)\r\n    MaterialRippleLayout mDescriptionContainer;\r\n    @BindView(R.id.watch_now_bt)\r\n    Button mWatchNowBt;\r\n    @BindView(R.id.download_bt)\r\n    Button mDownloadBt;\r\n    @BindView(R.id.poster_iv)\r\n    ImageView mPosterIv;\r\n    @BindView(R.id.image_thumb)\r\n    ImageView mThumbIv;\r\n    @BindView(R.id.genre_tv)\r\n    TextView mDGenryTv;\r\n    @BindView(R.id.img_server)\r\n    ImageView mServerIv;\r\n    @BindView(R.id.series_layout)\r\n    RelativeLayout mSeriesLayout;\r\n    @BindView(R.id.seriest_title_tv)\r\n    TextView mSeriesTitleTv;\r\n    @BindView(R.id.linear_share)\r\n    View mTopShareLayout;\r\n    private Unbinder mUnbinder;\r\n    private ContinueWatchingViewModel mContinueViewModel;\r\n    private boolean isFromContinueWatching = false;\r\n    private long resumePosition = 0L;\r\n    private static long playerCurrentPosition = 0L;\r\n    private static long mediaDuration = 0L;\r\n\r\n    private EpisodeAdapter mEpisodeAdapter;\r\n    private ServerAdapter mServerAdapter;\r\n    private HomePageAdapter mRelatedAdapter;\r\n    private RelatedTvAdapter mRelatedTvAdapter;\r\n    private CastCrewAdapter mCastCrewAdapter;\r\n    private List<CommonModels> mListServer = new ArrayList<>();\r\n    private List<CommonModels> mListRelated = new ArrayList<>();\r\n    private List<GetCommentsModel> mListComment = new ArrayList<>();\r\n    private List<CommonModels> mListDownload = new ArrayList<>();\r\n    private List<CommonModels> mListInternalDownload = new ArrayList<>();\r\n    private List<CommonModels> mListExternalDownload = new ArrayList<>();\r\n    private List<CastCrew> mCastCrews = new ArrayList<>();\r\n    private HashMap<String, Integer> mMapMovies = new HashMap<String, Integer>();\r\n    private String mStrDirector = \"\", strCast = \"\", mStrGenre = \"\";\r\n    private String mType = \"\", mId = \"\";\r\n    private String V_URL = \"\";\r\n    private boolean mIsFav = false;\r\n    private CommentsAdapter mCommentsAdapter;\r\n    public static SimpleExoPlayer mPlayer;\r\n    private CastContext mCastContext;\r\n    public static boolean mIsPlaying, mIsFullScr;\r\n    private int mPlayerHeight;\r\n    public static boolean mIsVideo = true;\r\n    private FirebaseAnalytics mFirebaseAnalytics;\r\n    private String mStrSubtitle = \"Null\";\r\n    public static MediaSource mMediaSource = null;\r\n    private List<SubtitleModel> mListSub = new ArrayList<>();\r\n    private AlertDialog mAlertDialog;\r\n    private String mMediaUrl;\r\n    private boolean tv = false;\r\n    private String mDownload_check = \"\";\r\n    private String mSeason;\r\n    private String mEpisode = \"\";\r\n    private String movieTitle;\r\n    private String mSeriesTitle;\r\n    private CastPlayer mCastPlayer;\r\n    private boolean mCastSession;\r\n    private String mTitle, mImdb_rating;\r\n    String mCastImageUrl;\r\n    private ProgramAdapter mProgramAdapter;\r\n    List<Program> mPrograms = new ArrayList<>();\r\n    boolean mIsDark;\r\n    private OrientationEventListener myOrientationEventListener;\r\n    private String mServerType;\r\n    private boolean fullScreenByClick;\r\n    private String mCurrentProgramTime;\r\n    private String mCurrentProgramTitle;\r\n    private String mUserId;\r\n    private String mYoutubeDownloadUr;\r\n    private String mUrlType = \"\";\r\n    private boolean mActiveMovie;\r\n    private boolean mIntLeft, mIntRight;\r\n    private int sWidth, sHeight;\r\n    private long diffX, diffY;\r\n    private Display display;\r\n    private Point size;\r\n    private float downX, downY;\r\n    private AudioManager mAudioManager;\r\n    private int mAspectClickCount = 1;\r\n    private DatabaseHelper mDBHelper;\r\n    private static DetailsActivity instance;\r\n    private RewardedAd mRewardedAd;\r\n    private AdsConfig adsConfig;\r\n    String videoReport = \"\", audioReport = \"\", subtitleReport = \"\", messageReport = \"\";\r\n\r\n    @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        RtlUtils.setScreenDirection(this);\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"push\", MODE_PRIVATE);\r\n        mIsDark = sharedPreferences.getBoolean(\"dark\", false);\r\n        if (mIsDark) {\r\n            setTheme(R.style.AppThemeDark);\r\n        } else {\r\n            setTheme(R.style.AppThemeLight);\r\n        }\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_details);\r\n        mUnbinder = ButterKnife.bind(this);\r\n        instance = this;\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n\r\n            }\r\n        });\r\n        // loadAdReward();\r\n        mDBHelper = new DatabaseHelper(DetailsActivity.this);\r\n        mAudioManager = (AudioManager) getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\r\n        //---analytics-----------\r\n        mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"id\");\r\n        bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"details_activity\");\r\n        bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"activity\");\r\n        mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\r\n\r\n        if (!mDBHelper.getMapMovie().equals(\"\")) {\r\n            setMapMovies(mDBHelper.getMapMovie());\r\n        }\r\n        if (mIsDark) {\r\n            mTvTopLayout.setBackgroundColor(getResources().getColor(R.color.black_window_light));\r\n            mSheduleLayout.setBackground(getResources().getDrawable(R.drawable.rounded_black_transparent));\r\n            mEtComment.setBackground(getResources().getDrawable(R.drawable.round_grey_transparent));\r\n            mBtnComment.setTextColor(getResources().getColor(R.color.grey_20));\r\n            mTopBarLayout.setBackgroundColor(getResources().getColor(R.color.dark));\r\n            mSubscribeBt.setBackground(getResources().getDrawable(R.drawable.btn_rounded_dark));\r\n            //tvName.setTextColor(getResources().getColor(R.color.black_window_light));\r\n            mDescriptionContainer.setBackground(getResources().getDrawable(R.drawable.gradient_black_transparent));\r\n        }\r\n\r\n        // chrome cast\r\n        CastButtonFactory.setUpMediaRouteButton(getApplicationContext(), mMediaRouteButton);\r\n        mCastContext = CastContext.getSharedInstance(this);\r\n        mCastPlayer = new CastPlayer(mCastContext);\r\n        mCastPlayer.setSessionAvailabilityListener(this);\r\n\r\n        // cast button will show if the cast device will be available\r\n        if (mCastContext.getCastState() != CastState.NO_DEVICES_AVAILABLE)\r\n            mMediaRouteButton.setVisibility(View.VISIBLE);\r\n        // start the shimmer effect\r\n        mShimmerLayout.startShimmer();\r\n        mPlayerHeight = mLPlay.getLayoutParams().height;\r\n        mProgressBar.setMax(100); // 100 maximum value for the progress value\r\n        mProgressBar.setProgress(50);\r\n\r\n        WebSettings webSettings = mWebView.getSettings();\r\n        webSettings.setSupportMultipleWindows(true);\r\n        webSettings.setJavaScriptEnabled(true);\r\n        mWebView.setWebChromeClient(new WebChromeClient());\r\n\r\n        mType = getIntent().getStringExtra(\"vType\");\r\n        mId = getIntent().getStringExtra(\"id\");\r\n        mCastSession = getIntent().getBooleanExtra(\"castSession\", false);\r\n\r\n        // getting user login info for favourite button visibility\r\n        mUserId = mDBHelper.getUserData().getUserId();\r\n        if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n            mImgAddFav.setVisibility(VISIBLE);\r\n            mImgAddFav2.setVisibility(VISIBLE);\r\n        } else {\r\n            mImgAddFav.setVisibility(GONE);\r\n            mImgAddFav2.setVisibility(GONE);\r\n        }\r\n        mCommentsAdapter = new CommentsAdapter(this, mListComment);\r\n        mRvComment.setLayoutManager(new LinearLayoutManager(this));\r\n        mRvComment.setHasFixedSize(true);\r\n        mRvComment.setNestedScrollingEnabled(false);\r\n        mRvComment.setAdapter(mCommentsAdapter);\r\n        if (!isNetworkAvailable()) {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.no_internet));\r\n        }\r\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                clear_previous();\r\n                initGetData();\r\n            }\r\n        });\r\n        //handle Continue watching task\r\n        isFromContinueWatching = getIntent().getBooleanExtra(IS_FROM_CONTINUE_WATCHING, false);\r\n        try {\r\n            if (isFromContinueWatching) {\r\n                //get info\r\n                mId = getIntent().getStringExtra(CONTENT_ID);\r\n                mType = getIntent().getStringExtra(CATEGORY_TYPE);\r\n                mServerType = getIntent().getStringExtra(SERVER_TYPE);\r\n                playerCurrentPosition = getIntent().getLongExtra(POSITION, 0);\r\n                resumePosition = playerCurrentPosition;\r\n                mTitle = getIntent().getStringExtra(CONTENT_TITLE);\r\n                mCastImageUrl = getIntent().getStringExtra(IMAGE_URL);\r\n                mMediaUrl = getIntent().getStringExtra(STREAM_URL);\r\n                hideDescriptionLayout();\r\n                showSeriesLayout();\r\n\r\n            }\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mContinueViewModel = new ViewModelProvider(this).get(ContinueWatchingViewModel.class);\r\n        loadAd();\r\n    }\r\n\r\n    public static DetailsActivity getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    private void updateContinueWatchingData() {\r\n        if (!mType.equals(\"tv\")) {\r\n            try {\r\n                long position = playerCurrentPosition;\r\n                long duration = mediaDuration;\r\n                float progress = 0;\r\n                if (position != 0 && duration != 0) {\r\n                    progress = calculateProgress(position, duration);\r\n                }\r\n\r\n                //---update into continueWatching------\r\n                ContinueWatchingModel model = new ContinueWatchingModel(mId, mTitle + \" \" + mEpisode,\r\n                        mCastImageUrl, progress, position, mMediaUrl,\r\n                        mType, mServerType);\r\n                mContinueViewModel.update(model);\r\n            } catch (NullPointerException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private long calculateProgress(long position, long duration) {\r\n        return (position * 100 / duration);\r\n    }\r\n\r\n    @SuppressLint(\"SourceLockedOrientationActivity\")\r\n    public void controlFullScreenPlayer() {\r\n        if (mIsFullScr) {\r\n            fullScreenByClick = false;\r\n            mIsFullScr = false;\r\n            mSwipeRefreshLayout.setVisibility(VISIBLE);\r\n            getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n\r\n            if (mIsVideo) {\r\n                mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, mPlayerHeight));\r\n            } else {\r\n                mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, mPlayerHeight));\r\n            }\r\n\r\n            // reset the orientation\r\n            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);\r\n\r\n        } else {\r\n\r\n            fullScreenByClick = true;\r\n            mIsFullScr = true;\r\n            mSwipeRefreshLayout.setVisibility(GONE);\r\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n\r\n            if (mIsVideo) {\r\n                mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT));\r\n\r\n            } else {\r\n                mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT));\r\n\r\n            }\r\n\r\n            // reset the orientation\r\n            //setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);\r\n            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n\r\n        if (!Config.ENABLE_EXTERNAL_PLAYER) {\r\n            mExternalPlayerIv.setVisibility(GONE);\r\n        }\r\n        initGetData();\r\n        if (mAudioManager != null) {\r\n            mVolumnSeekbar.setMax(mAudioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));\r\n            int currentVolumn = mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);\r\n            mVolumnSeekbar.setProgress(currentVolumn);\r\n        }\r\n\r\n        mVolumnSeekbar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n            @Override\r\n            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {\r\n                if (b) {\r\n                    //volumnTv.setText(i+\"\");\r\n                    mAudioManager.setStreamVolume(mPlayer.getAudioStreamType(), i, 0);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onStartTrackingTouch(SeekBar seekBar) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onStopTrackingTouch(SeekBar seekBar) {\r\n\r\n            }\r\n        });\r\n        mCastPlayer.addListener(new Player.DefaultEventListener() {\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                if (playWhenReady && playbackState == CastPlayer.STATE_READY) {\r\n                    mProgressBar.setVisibility(View.GONE);\r\n\r\n                    Log.e(\"STATE PLAYER:::\", String.valueOf(mIsPlaying));\r\n\r\n                } else if (playbackState == CastPlayer.STATE_READY) {\r\n                    mProgressBar.setVisibility(View.GONE);\r\n                    Log.e(\"STATE PLAYER:::\", String.valueOf(mIsPlaying));\r\n                } else if (playbackState == CastPlayer.STATE_BUFFERING) {\r\n                    mProgressBar.setVisibility(VISIBLE);\r\n\r\n                    Log.e(\"STATE PLAYER:::\", String.valueOf(mIsPlaying));\r\n                } else {\r\n                    Log.e(\"STATE PLAYER:::\", String.valueOf(mIsPlaying));\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mSimpleExoPlayerView.setControllerVisibilityListener(new PlayerControlView.VisibilityListener() {\r\n            @Override\r\n            public void onVisibilityChange(int visibility) {\r\n                if (visibility == 0) {\r\n                    mImgBack.setVisibility(VISIBLE);\r\n\r\n                    if (mType.equals(\"tv\") || mType.equals(\"tvseries\")) {\r\n                        mImgFull.setVisibility(VISIBLE);\r\n                    } else {\r\n                        mImgFull.setVisibility(GONE);\r\n                    }\r\n\r\n                    // invisible download icon for live tv\r\n                    if (mDownload_check.equals(\"1\")) {\r\n                        if (!tv) {\r\n                            if (mActiveMovie) {\r\n                                mServerIv.setVisibility(VISIBLE);\r\n                            }\r\n                        } else {\r\n                        }\r\n                    } else {\r\n                    }\r\n\r\n                    if (mListSub.size() != 0) {\r\n                        mImgSubtitle.setVisibility(VISIBLE);\r\n                    }\r\n                    //imgSubtitle.setVisibility(VISIBLE);\r\n                } else {\r\n                    mImgBack.setVisibility(GONE);\r\n                    mImgFull.setVisibility(GONE);\r\n                    mImgSubtitle.setVisibility(GONE);\r\n                    mVolumnControlLayout.setVisibility(GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"SourceLockedOrientationActivity\")\r\n    public void setPlayerNormalScreen() {\r\n        mSwipeRefreshLayout.setVisibility(VISIBLE);\r\n        mLPlay.setVisibility(GONE);\r\n        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\r\n        //close embed link playing\r\n        if (mWebView.getVisibility() == VISIBLE) {\r\n            if (mWebView != null) {\r\n                Intent intent = new Intent(DetailsActivity.this, DetailsActivity.class);\r\n                intent.putExtra(\"vType\", mType);\r\n                intent.putExtra(\"id\", mId);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(intent);\r\n            }\r\n        }\r\n\r\n        if (mIsVideo) {\r\n            mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, mPlayerHeight));\r\n\r\n        } else {\r\n            mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, mPlayerHeight));\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"SourceLockedOrientationActivity\")\r\n    public void setPlayerFullScreen() {\r\n        mSwipeRefreshLayout.setVisibility(GONE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n\r\n        if (mIsVideo) {\r\n            mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT));\r\n        } else {\r\n            mLPlay.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT));\r\n        }\r\n    }\r\n\r\n    private void openDownloadServerDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View view = LayoutInflater.from(this).inflate(R.layout.layout_download_server_dialog, null);\r\n        LinearLayout internalDownloadLayout = view.findViewById(R.id.internal_download_layout);\r\n        LinearLayout externalDownloadLayout = view.findViewById(R.id.external_download_layout);\r\n        if (mListExternalDownload.isEmpty()) {\r\n            externalDownloadLayout.setVisibility(GONE);\r\n        }\r\n        if (mListInternalDownload.isEmpty()) {\r\n            internalDownloadLayout.setVisibility(GONE);\r\n        }\r\n        RecyclerView internalServerRv = view.findViewById(R.id.internal_download_rv);\r\n        RecyclerView externalServerRv = view.findViewById(R.id.external_download_rv);\r\n        DownloadAdapter internalDownloadAdapter = new DownloadAdapter(this, mTitle, mListInternalDownload, true);\r\n        internalServerRv.setLayoutManager(new LinearLayoutManager(this));\r\n        internalServerRv.setHasFixedSize(true);\r\n        internalServerRv.setAdapter(internalDownloadAdapter);\r\n\r\n        DownloadAdapter externalDownloadAdapter = new DownloadAdapter(this, mTitle, mListExternalDownload, true);\r\n        externalServerRv.setLayoutManager(new LinearLayoutManager(this));\r\n        externalServerRv.setHasFixedSize(true);\r\n        externalServerRv.setAdapter(externalDownloadAdapter);\r\n\r\n        builder.setView(view);\r\n\r\n        final AlertDialog dialog = builder.create();\r\n        dialog.setOnDismissListener(new DialogInterface.OnDismissListener() {\r\n            @Override\r\n            public void onDismiss(DialogInterface dialog) {\r\n                if (isDownloading()) {\r\n                    Toast.makeText(DetailsActivity.this, \"Go to Downloads to follow download progress \", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        dialog.show();\r\n\r\n    }\r\n\r\n    private boolean isDownloading() {\r\n        List<Work> works = mDBHelper.getAllWork();\r\n        for (Work work : works) {\r\n            if (work.getDownloadId() == 0 && !work.getDownloadStatus().equals(getApplicationContext().getString(R.string.download_waiting))) {\r\n                return true;\r\n            }\r\n            if (PRDownloader.getStatus(work.getDownloadId()) == Status.RUNNING) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void openServerDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View view = LayoutInflater.from(this).inflate(R.layout.layout_server_dialog, null);\r\n        RecyclerView serverRv = view.findViewById(R.id.serverRv);\r\n        mServerAdapter = new ServerAdapter(this, mListServer, \"movie\");\r\n        serverRv.setLayoutManager(new LinearLayoutManager(this));\r\n        serverRv.setHasFixedSize(true);\r\n        serverRv.setAdapter(mServerAdapter);\r\n\r\n        ImageView closeIv = view.findViewById(R.id.close_iv);\r\n        builder.setView(view);\r\n\r\n        final AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n\r\n        closeIv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        dialog.setOnDismissListener(new DialogInterface.OnDismissListener() {\r\n            @Override\r\n            public void onDismiss(DialogInterface dialog) {\r\n                //reset\r\n                if (resumePosition > 0) {\r\n                    showDescriptionLayout();\r\n                }\r\n            }\r\n        });\r\n\r\n        final ServerAdapter.OriginalViewHolder[] viewHolder = {null};\r\n        mServerAdapter.setOnItemClickListener(new ServerAdapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(View view, CommonModels obj, int position, ServerAdapter.OriginalViewHolder holder) {\r\n                releasePlayer();\r\n                resetCastPlayer();\r\n                preparePlayer(obj);\r\n                resumePosition = 0;\r\n                playerCurrentPosition = 0;\r\n                //serverAdapter.chanColor(viewHolder[0], position);\r\n                //holder.name.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                //viewHolder[0] = holder;\r\n            }\r\n\r\n            @Override\r\n            public void getFirstUrl(String url) {\r\n                mMediaUrl = url;\r\n            }\r\n\r\n            @Override\r\n            public void hideDescriptionLayout() {\r\n                mDescriptionLayout.setVisibility(GONE);\r\n                mLPlay.setVisibility(VISIBLE);\r\n                dialog.dismiss();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void preparePlayer(CommonModels obj) {\r\n        mActiveMovie = true;\r\n        setPlayerFullScreen();\r\n        mMediaUrl = obj.getStremURL();\r\n        if (!mCastSession) {\r\n            initMoviePlayer(obj.getStremURL(), obj.getServerType(), DetailsActivity.this);\r\n\r\n            mListSub.clear();\r\n            if (obj.getListSub() != null) {\r\n                mListSub.addAll(obj.getListSub());\r\n            }\r\n\r\n            if (mListSub.size() != 0) {\r\n                mImgSubtitle.setVisibility(VISIBLE);\r\n            } else {\r\n                mImgSubtitle.setVisibility(GONE);\r\n            }\r\n\r\n        } else {\r\n            if (obj.getServerType().toLowerCase().equals(\"embed\")) {\r\n\r\n                mCastSession = false;\r\n                mCastPlayer.setSessionAvailabilityListener(null);\r\n                mCastPlayer.release();\r\n\r\n                // invisible control ui of exoplayer\r\n                mPlayer.setPlayWhenReady(true);\r\n                mSimpleExoPlayerView.setUseController(true);\r\n\r\n                // invisible control ui of casting\r\n                mCastControlView.setVisibility(GONE);\r\n                mChromeCastTv.setVisibility(GONE);\r\n\r\n\r\n            } else {\r\n                showQueuePopup(DetailsActivity.this, getMediaInfo());\r\n            }\r\n        }\r\n    }\r\n\r\n    void clear_previous() {\r\n        strCast = \"\";\r\n        mStrDirector = \"\";\r\n        mStrGenre = \"\";\r\n        mListDownload.clear();\r\n        mListInternalDownload.clear();\r\n        mListExternalDownload.clear();\r\n        mPrograms.clear();\r\n        mCastCrews.clear();\r\n    }\r\n\r\n    public void showSubtitleDialog(Context context, List<SubtitleModel> list) {\r\n        ViewGroup viewGroup = findViewById(android.R.id.content);\r\n        View dialogView = LayoutInflater.from(this).inflate(R.layout.custom_dialog_subtitle, viewGroup, false);\r\n        ImageView cancel = dialogView.findViewById(R.id.cancel);\r\n\r\n        RecyclerView recyclerView = dialogView.findViewById(R.id.recyclerView);\r\n        SubtitleAdapter adapter = new SubtitleAdapter(context, list);\r\n        adapter.setListener(this);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n        recyclerView.setAdapter(adapter);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setView(dialogView);\r\n\r\n        mAlertDialog = builder.create();\r\n        mAlertDialog.show();\r\n\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                mAlertDialog.cancel();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClickSubtitles(int position) {\r\n        setSelectedSubtitle(mMediaSource, mListSub.get(position).getUrl(), this);\r\n        mAlertDialog.cancel();\r\n    }\r\n\r\n    @Override\r\n    public void onCastSessionAvailable() {\r\n        mCastSession = true;\r\n\r\n        MediaMetadata movieMetadata = new MediaMetadata(MediaMetadata.MEDIA_TYPE_MOVIE);\r\n        movieMetadata.putString(MediaMetadata.KEY_TITLE, mTitle);\r\n        //movieMetadata.putString(MediaMetadata.KEY_ALBUM_ARTIST, \"Test Artist\");\r\n        movieMetadata.addImage(new WebImage(Uri.parse(mCastImageUrl)));\r\n        MediaInfo mediaInfo = new MediaInfo.Builder(mMediaUrl)\r\n                .setStreamType(MediaInfo.STREAM_TYPE_BUFFERED)\r\n                .setContentType(MimeTypes.VIDEO_UNKNOWN)\r\n                .setMetadata(movieMetadata).build();\r\n\r\n        //array of media sources\r\n        final MediaQueueItem[] mediaItems = {new MediaQueueItem.Builder(mediaInfo).build()};\r\n\r\n        mCastPlayer.loadItems(mediaItems, 0, 3000, Player.REPEAT_MODE_OFF);\r\n\r\n        // visible control ui of casting\r\n        mCastControlView.setVisibility(VISIBLE);\r\n        mCastControlView.setPlayer(mCastPlayer);\r\n        mCastControlView.setVisibilityListener(new PlaybackControlView.VisibilityListener() {\r\n            @Override\r\n            public void onVisibilityChange(int visibility) {\r\n                if (visibility == GONE) {\r\n                    mCastControlView.setVisibility(VISIBLE);\r\n                    mChromeCastTv.setVisibility(VISIBLE);\r\n                }\r\n            }\r\n        });\r\n\r\n        // invisible control ui of exoplayer\r\n        mPlayer.setPlayWhenReady(false);\r\n        mSimpleExoPlayerView.setUseController(false);\r\n    }\r\n\r\n    @Override\r\n    public void onCastSessionUnavailable() {\r\n        // make cast session false\r\n        mCastSession = false;\r\n        // invisible control ui of exoplayer\r\n        mPlayer.setPlayWhenReady(true);\r\n        mSimpleExoPlayerView.setUseController(true);\r\n\r\n        // invisible control ui of casting\r\n        mCastControlView.setVisibility(GONE);\r\n        mChromeCastTv.setVisibility(GONE);\r\n    }\r\n\r\n    public void initServerTypeForTv(String serverType) {\r\n        this.mServerType = serverType;\r\n    }\r\n\r\n    @Override\r\n    public void onProgramClick(Program program) {\r\n        if (program.getProgramStatus().equals(\"onaired\")) {\r\n            showExoControlForTv();\r\n            initMoviePlayer(program.getVideoUrl(), \"tv\", this);\r\n            mTimeTv.setText(program.getTime());\r\n            mProgramTv.setText(program.getTitle());\r\n        } else {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(\"Not Yet\");\r\n        }\r\n    }\r\n\r\n\r\n    //this method will be called when related tv channel is clicked\r\n    @Override\r\n    public void onRelatedTvClicked(CommonModels obj) {\r\n        mType = obj.getVideoType();\r\n        mId = obj.getId();\r\n        initGetData();\r\n    }\r\n\r\n    // this will call when any episode is clicked\r\n    //if it is embed player will go full screen\r\n    @Override\r\n    public void onEpisodeItemClickTvSeries(String type, EpiModel obj, int position) {\r\n        //PopUpAds.ShowAdmobInterstitialAds(this);\r\n        if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n            if (!PreferenceUtils.isActivePlan(DetailsActivity.this)) {\r\n                if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {\r\n                    PopUpAds.showAppodealInterstitialAds(DetailsActivity.this);\r\n                } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                    PopUpAds.ShowAdmobInterstitialAds(DetailsActivity.this);\r\n                }\r\n            }\r\n        }\r\n        if (type.equalsIgnoreCase(\"embed\")) {\r\n            CommonModels model = new CommonModels();\r\n            model.setStremURL(obj.getStreamURL());\r\n            model.setServerType(obj.getServerType());\r\n            model.setListSub(null);\r\n            releasePlayer();\r\n            resetCastPlayer();\r\n            mMapMovies.put(mId, position);\r\n            mDBHelper.deleteAllMapMovie();\r\n            mDBHelper.insertMapMovie(getMapMovies());\r\n            if (mMapMovies.containsKey(mId) && mMapMovies.get(mId) != null) {\r\n                mRvServer.scrollToPosition(mMapMovies.get(mId) - 1);\r\n            }\r\n            mActiveMovie = true;\r\n            preparePlayer(model);\r\n        } else {\r\n            mMapMovies.put(mId, position);\r\n            mDBHelper.deleteAllMapMovie();\r\n            mDBHelper.insertMapMovie(getMapMovies());\r\n            mActiveMovie = true;\r\n            if (mMapMovies.containsKey(mId) && mMapMovies.get(mId) != null) {\r\n                mRvServer.scrollToPosition(mMapMovies.get(mId));\r\n            }\r\n            if (obj != null) {\r\n                if (obj.getSubtitleList().size() != 0) {\r\n                    mListSub.clear();\r\n                    mListSub.addAll(obj.getSubtitleList());\r\n                    mImgSubtitle.setVisibility(VISIBLE);\r\n                } else {\r\n                    mListSub.clear();\r\n                    mImgSubtitle.setVisibility(GONE);\r\n                }\r\n\r\n                initMoviePlayer(obj.getStreamURL(), obj.getServerType(), DetailsActivity.this);\r\n            }\r\n            if (mListSub.size() > 0) {\r\n                setSelectedSubtitle(mMediaSource, mListSub.get(0).getUrl(), DetailsActivity.this);\r\n            }\r\n            //reset\r\n            playerCurrentPosition = 0L;\r\n            resumePosition = 0;\r\n        }\r\n    }\r\n\r\n\r\n    private void loadAd() {\r\n        adsConfig = mDBHelper.getConfigurationData().getAdsConfig();\r\n        if (PreferenceUtils.isLoggedIn(this) && PreferenceUtils.isActivePlan(this)) return;\r\n        if (adsConfig.getAdsEnable().equals(\"1\")) {\r\n            if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                BannerAds.ShowAdmobBannerAds(this, mAdView);\r\n                VideoRewardAds.prepareAd(this);\r\n                //PopUpAds.ShowAdmobInterstitialAds(this);\r\n            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {\r\n                //   PopUpAds.showStartappInterstitialAds(DetailsActivity.this);\r\n                BannerAds.showAppodealBanner(DetailsActivity.this, R.id.appodealBannerView);\r\n            } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {\r\n                BannerAds.showFANBanner(this, mAdView);\r\n                PopUpAds.showFANInterstitialAds(DetailsActivity.this);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private void initGetData() {\r\n        if (!mType.equals(\"tv\")) {\r\n\r\n            //----related rv----------\r\n            mRelatedAdapter = new HomePageAdapter(this, mListRelated);\r\n            mRvRelated.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL,\r\n                    false));\r\n            mRvRelated.setHasFixedSize(true);\r\n            mRvRelated.setAdapter(mRelatedAdapter);\r\n\r\n            if (mType.equals(\"tvseries\")) {\r\n\r\n                mSeasonSpinnerContainer.setVisibility(VISIBLE);\r\n\r\n                mRvServer.setVisibility(VISIBLE);\r\n                mServerIv.setVisibility(GONE);\r\n\r\n                mRvRelated.removeAllViews();\r\n                mListRelated.clear();\r\n                mRvServer.removeAllViews();\r\n                mListServer.clear();\r\n\r\n               /* mDownloadBt.setVisibility(GONE);\r\n                mWatchNowBt.setVisibility(GONE);*/\r\n\r\n                // cast & crew adapter\r\n                mCastCrewAdapter = new CastCrewAdapter(this, mCastCrews);\r\n                mCastRv.setLayoutManager(new LinearLayoutManager(this, RecyclerView.HORIZONTAL, false));\r\n                mCastRv.setHasFixedSize(true);\r\n                mCastRv.setAdapter(mCastCrewAdapter);\r\n\r\n                getSeriesData(mType, mId);\r\n\r\n                if (mListSub.size() == 0) {\r\n                    mImgSubtitle.setVisibility(GONE);\r\n                }\r\n\r\n            } else {\r\n                mSeasonSpinnerContainer.setVisibility(GONE);\r\n                mSeriesLayout.setVisibility(GONE);\r\n                mImgFull.setVisibility(GONE);\r\n                mListServer.clear();\r\n                mRvRelated.removeAllViews();\r\n                mListRelated.clear();\r\n                if (mListSub.size() == 0) {\r\n                    mImgSubtitle.setVisibility(GONE);\r\n                }\r\n\r\n                // cast & crew adapter\r\n                mCastCrewAdapter = new CastCrewAdapter(this, mCastCrews);\r\n                mCastRv.setLayoutManager(new LinearLayoutManager(this, RecyclerView.HORIZONTAL, false));\r\n                mCastRv.setHasFixedSize(true);\r\n                mCastRv.setAdapter(mCastCrewAdapter);\r\n\r\n                getMovieData(mType, mId);\r\n\r\n                final ServerAdapter.OriginalViewHolder[] viewHolder = {null};\r\n            }\r\n\r\n            if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n                getFavStatus();\r\n            }\r\n\r\n        } else {\r\n            tv = true;\r\n            mImgSubtitle.setVisibility(GONE);\r\n            mLLcomment.setVisibility(GONE);\r\n            mServerIv.setVisibility(GONE);\r\n            mSeasonSpinnerContainer.setVisibility(VISIBLE);\r\n            mRvServer.setVisibility(VISIBLE);\r\n            mDescriptionLayout.setVisibility(GONE);\r\n            mLPlay.setVisibility(VISIBLE);\r\n\r\n\r\n            // hide exo player some control\r\n            hideExoControlForTv();\r\n\r\n            mTvLayout.setVisibility(VISIBLE);\r\n\r\n            // hide program guide if its disable from api\r\n            if (!PreferenceUtils.isProgramGuideEnabled(DetailsActivity.this)) {\r\n                mProGuideTv.setVisibility(GONE);\r\n                mProgramRv.setVisibility(GONE);\r\n\r\n            }\r\n\r\n            mWatchStatusTv.setText(getString(R.string.watching_on) + \" \" + getString(R.string.app_name));\r\n\r\n            mTvRelated.setText(getString(R.string.all_tv_channel));\r\n\r\n            mRvServer.removeAllViews();\r\n            mListServer.clear();\r\n            mRvRelated.removeAllViews();\r\n            mListRelated.clear();\r\n\r\n            mProgramAdapter = new ProgramAdapter(mPrograms, this);\r\n            mProgramAdapter.setOnProgramClickListener(this);\r\n            mProgramRv.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n            mProgramRv.setHasFixedSize(true);\r\n            mProgramRv.setAdapter(mProgramAdapter);\r\n\r\n            //----related rv----------\r\n            //relatedTvAdapter = new LiveTvHomeAdapter(this, listRelated, TAG);\r\n            mRelatedTvAdapter = new RelatedTvAdapter(mListRelated, DetailsActivity.this);\r\n            mRvRelated.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n            mRvRelated.setHasFixedSize(true);\r\n            mRvRelated.setAdapter(mRelatedTvAdapter);\r\n            mRelatedTvAdapter.setListener(DetailsActivity.this);\r\n\r\n            mImgAddFav.setVisibility(GONE);\r\n            mImgAddFav2.setVisibility(GONE);\r\n\r\n            mServerAdapter = new ServerAdapter(this, mListServer, \"tv\");\r\n            mRvServer.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n            mRvServer.setHasFixedSize(true);\r\n            mRvServer.setAdapter(mServerAdapter);\r\n            getTvData(mType, mId);\r\n            mLLBottom.setVisibility(GONE);\r\n\r\n            final ServerAdapter.OriginalViewHolder[] viewHolder = {null};\r\n            mServerAdapter.setOnItemClickListener(new ServerAdapter.OnItemClickListener() {\r\n                @Override\r\n                public void onItemClick(View view, CommonModels obj, int position, ServerAdapter.OriginalViewHolder holder) {\r\n                    mMediaUrl = obj.getStremURL();\r\n\r\n                    if (!mCastSession) {\r\n                        initMoviePlayer(obj.getStremURL(), obj.getServerType(), DetailsActivity.this);\r\n\r\n                    } else {\r\n\r\n                        if (obj.getServerType().toLowerCase().equals(\"embed\")) {\r\n\r\n                            mCastSession = false;\r\n                            mCastPlayer.setSessionAvailabilityListener(null);\r\n                            mCastPlayer.release();\r\n\r\n                            // invisible control ui of exoplayer\r\n                            mPlayer.setPlayWhenReady(true);\r\n                            mSimpleExoPlayerView.setUseController(true);\r\n\r\n                            // invisible control ui of casting\r\n                            mCastControlView.setVisibility(GONE);\r\n                            mChromeCastTv.setVisibility(GONE);\r\n                        } else {\r\n                            showQueuePopup(DetailsActivity.this, getMediaInfo());\r\n                        }\r\n                    }\r\n\r\n                    mServerAdapter.chanColor(viewHolder[0], position);\r\n                    holder.name.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                    viewHolder[0] = holder;\r\n                }\r\n\r\n                @Override\r\n                public void getFirstUrl(String url) {\r\n                    mMediaUrl = url;\r\n                }\r\n\r\n                @Override\r\n                public void hideDescriptionLayout() {\r\n\r\n                }\r\n            });\r\n        }\r\n        getComments();\r\n    }\r\n\r\n    private void openWebActivity(String s, Context context, String videoType) {\r\n\r\n        if (mIsPlaying) {\r\n            mPlayer.release();\r\n        }\r\n        mProgressBar.setVisibility(GONE);\r\n        mPlayerLayout.setVisibility(GONE);\r\n\r\n        mWebView.loadUrl(s);\r\n        mWebView.setWebChromeClient(new WebChromeClient());\r\n        WebSettings webSettings = mWebView.getSettings();\r\n        webSettings.setSupportMultipleWindows(true);\r\n        webSettings.setJavaScriptEnabled(true);\r\n        mWebView.setVisibility(VISIBLE);\r\n\r\n    }\r\n\r\n    public void initMoviePlayer(String url, String type, Context context) {\r\n        Log.e(\"vTYpe :: \", type);\r\n        mUrlType = type;\r\n        if (type.equals(\"embed\") || type.equals(\"vimeo\") || type.equals(\"gdrive\") || type.equals(\"youtube-live\")) {\r\n            mIsVideo = false;\r\n            openWebActivity(url, context, type);\r\n        } else {\r\n            mIsVideo = true;\r\n            initVideoPlayer(url, context, type);\r\n        }\r\n    }\r\n\r\n    public void initVideoPlayer(String url, Context context, String type) {\r\n        mServerType = type;\r\n        mProgressBar.setVisibility(VISIBLE);\r\n        if (!mType.equals(\"tv\")) {\r\n            ContinueWatchingModel model = new ContinueWatchingModel(mId, mTitle + \" \" + mEpisode, mCastImageUrl, 0, 0, url, mType, type);\r\n            mContinueViewModel.insert(model);\r\n        }\r\n        if (mPlayer != null) {\r\n            mPlayer.stop();\r\n            mPlayer.release();\r\n        }\r\n        mWebView.setVisibility(GONE);\r\n        mPlayerLayout.setVisibility(VISIBLE);\r\n\r\n        BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        TrackSelection.Factory videoTrackSelectionFactory = new\r\n                AdaptiveTrackSelection.Factory(bandwidthMeter);\r\n\r\n        DefaultTrackSelector trackSelector = new\r\n                DefaultTrackSelector(videoTrackSelectionFactory);\r\n        mPlayer = ExoPlayerFactory.newSimpleInstance(context, trackSelector);\r\n        // player.setPlayWhenReady(true);\r\n        //simpleExoPlayerView.setPlayer(player);\r\n\r\n        Uri uri = Uri.parse(url);\r\n\r\n        if (type.equals(\"hls\")) {\r\n            mMediaSource = hlsMediaSource(uri, context);\r\n        } else if (type.equals(\"youtube\")) {\r\n            Log.e(\"youtube url  :: \", url);\r\n            extractYoutubeUrl(url, context, 18);\r\n        } else if (type.equals(\"youtube-live\")) {\r\n            Log.e(\"youtube url  :: \", url);\r\n            extractYoutubeUrl(url, context, 133);\r\n        } else if (type.equals(\"rtmp\")) {\r\n            mMediaSource = rtmpMediaSource(uri);\r\n        } else {\r\n            mMediaSource = mediaSource(uri, context);\r\n        }\r\n\r\n        //Toast.makeText(context, \"castSession:\"+getCastSessionObj()+\"\", Toast.LENGTH_SHORT).show();\r\n        mPlayer.prepare(mMediaSource, true, false);\r\n        mSimpleExoPlayerView.setPlayer(mPlayer);\r\n        mPlayer.setPlayWhenReady(true);\r\n        if (resumePosition > 0) {\r\n            mPlayer.seekTo(resumePosition);\r\n            mPlayer.setPlayWhenReady(true);\r\n        }\r\n\r\n        mPlayer.addListener(new Player.DefaultEventListener() {\r\n            @Override\r\n            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n                if (playWhenReady && playbackState == Player.STATE_READY) {\r\n\r\n                    mIsPlaying = true;\r\n                    mProgressBar.setVisibility(View.GONE);\r\n                } else if (playbackState == Player.STATE_READY) {\r\n                    mProgressBar.setVisibility(View.GONE);\r\n                    mIsPlaying = false;\r\n                } else if (playbackState == Player.STATE_BUFFERING) {\r\n                    mIsPlaying = false;\r\n                    mProgressBar.setVisibility(VISIBLE);\r\n                } else if (playbackState == Player.STATE_ENDED) {\r\n                    //---delete into continueWatching------\r\n                    ContinueWatchingModel model = new ContinueWatchingModel(mId, mTitle + \" \" + mEpisode,\r\n                            mCastImageUrl, 0, 0, mMediaUrl,\r\n                            mType, mServerType);\r\n                    mContinueViewModel.delete(model);\r\n                } else {\r\n                    // player paused in any state\r\n                    mIsPlaying = false;\r\n                    playerCurrentPosition = mPlayer.getCurrentPosition();\r\n                    mediaDuration = mPlayer.getDuration();\r\n                    if (mType.equals(\"movie\")) {\r\n                        resumePosition = playerCurrentPosition;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @SuppressLint(\"StaticFieldLeak\")\r\n    private void extractYoutubeUrl(String url, final Context context, final int tag) {\r\n        new YouTubeExtractor(context) {\r\n            @Override\r\n            public void onExtractionComplete(SparseArray<YtFile> ytFiles, VideoMeta vMeta) {\r\n                if (ytFiles != null) {\r\n                    int itag = tag;\r\n                    String downloadUrl = ytFiles.get(itag).getUrl();\r\n                    mYoutubeDownloadUr = downloadUrl;\r\n                    Log.e(\"YOUTUBE::\", String.valueOf(downloadUrl));\r\n                    try {\r\n\r\n                        MediaSource mediaSource = mediaSource(Uri.parse(downloadUrl), context);\r\n                        mPlayer.prepare(mediaSource, true, false);\r\n                        if (Config.YOUTUBE_VIDEO_AUTO_PLAY) {\r\n                            mPlayer.setPlayWhenReady(true);\r\n                        } else {\r\n                            mPlayer.setPlayWhenReady(false);\r\n                        }\r\n                        if (resumePosition > 0) {\r\n                            mPlayer.seekTo(resumePosition);\r\n                            mPlayer.setPlayWhenReady(true);\r\n                        }\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            }\r\n        }.extract(url, true, true);\r\n    }\r\n\r\n    private MediaSource rtmpMediaSource(Uri uri) {\r\n        MediaSource videoSource = null;\r\n        RtmpDataSourceFactory dataSourceFactory = new RtmpDataSourceFactory();\r\n        videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                .createMediaSource(uri);\r\n\r\n        return videoSource;\r\n    }\r\n\r\n    private MediaSource hlsMediaSource(Uri uri, Context context) {\r\n        DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context,\r\n                Util.getUserAgent(context, \"oxoo\"), bandwidthMeter);\r\n\r\n        MediaSource videoSource = new HlsMediaSource.Factory(dataSourceFactory)\r\n                .createMediaSource(uri);\r\n\r\n\r\n        return videoSource;\r\n    }\r\n\r\n    private MediaSource mediaSource(Uri uri, Context context) {\r\n        return new ExtractorMediaSource.Factory(\r\n                new DefaultHttpDataSourceFactory(\"exoplayer\")).\r\n                createMediaSource(uri);\r\n    }\r\n\r\n\r\n    public void setSelectedSubtitle(MediaSource mediaSource, String subtitle, Context context) {\r\n        MergingMediaSource mergedSource;\r\n        if (subtitle != null) {\r\n            Uri subtitleUri = Uri.parse(subtitle);\r\n\r\n            Format subtitleFormat = Format.createTextSampleFormat(\r\n                    null, // An identifier for the track. May be null.\r\n                    MimeTypes.TEXT_VTT, // The mime type. Must be set correctly.\r\n                    Format.NO_VALUE, // Selection flags for the track.\r\n                    \"en\"); // The subtitle language. May be null.\r\n\r\n            DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(context,\r\n                    Util.getUserAgent(context, CLASS_NAME), new DefaultBandwidthMeter());\r\n\r\n\r\n            MediaSource subtitleSource = new SingleSampleMediaSource\r\n                    .Factory(dataSourceFactory)\r\n                    .createMediaSource(subtitleUri, subtitleFormat, C.TIME_UNSET);\r\n\r\n\r\n            mergedSource = new MergingMediaSource(mediaSource, subtitleSource);\r\n            mPlayer.prepare(mergedSource, false, false);\r\n            mPlayer.setPlayWhenReady(true);\r\n            //resumePlayer();\r\n\r\n        } else {\r\n            Toast.makeText(context, \"there is no subtitle\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void addToFav() {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        FavouriteApi api = retrofit.create(FavouriteApi.class);\r\n        Call<FavoriteModel> call = api.addToFavorite(Config.API_KEY, mUserId, mId);\r\n        call.enqueue(new Callback<FavoriteModel>() {\r\n            @Override\r\n            public void onResponse(Call<FavoriteModel> call, retrofit2.Response<FavoriteModel> response) {\r\n                if (response.code() == 200) {\r\n                    if (response.body().getStatus().equalsIgnoreCase(\"success\")) {\r\n                        new ToastMsg(DetailsActivity.this).toastIconSuccess(response.body().getMessage());\r\n                        mIsFav = true;\r\n                        mImgAddFav.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                        mImgAddFav2.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                    } else {\r\n                        new ToastMsg(DetailsActivity.this).toastIconError(response.body().getMessage());\r\n                    }\r\n                } else {\r\n                    new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.error_toast));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<FavoriteModel> call, Throwable t) {\r\n                new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.error_toast));\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void paidControl(String isPaid) {\r\n        if (isPaid.equals(\"1\")) {\r\n            if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n                if (PreferenceUtils.isActivePlan(DetailsActivity.this)) {\r\n                    if (PreferenceUtils.isValid(DetailsActivity.this)) {\r\n                        mContentDetails.setVisibility(VISIBLE);\r\n                        mSubscriptionLayout.setVisibility(GONE);\r\n                        Log.e(\"SUBCHECK\", \"validity: \" + PreferenceUtils.isValid(DetailsActivity.this));\r\n\r\n                    } else {\r\n                        Log.e(\"SUBCHECK\", \"not valid\");\r\n                        /*contentDetails.setVisibility(GONE);\r\n                        subscriptionLayout.setVisibility(VISIBLE);*/\r\n                        PreferenceUtils.updateSubscriptionStatus(DetailsActivity.this);\r\n                        //paidControl(isPaid);\r\n                    }\r\n                } else {\r\n                    Log.e(\"SUBCHECK\", \"not active plan\");\r\n                    mContentDetails.setVisibility(GONE);\r\n                    mSubscriptionLayout.setVisibility(VISIBLE);\r\n                }\r\n            } else {\r\n                startActivity(new Intent(DetailsActivity.this, LoginActivity.class));\r\n                finish();\r\n            }\r\n\r\n        } else {\r\n            //free content\r\n            mContentDetails.setVisibility(VISIBLE);\r\n            mSubscriptionLayout.setVisibility(GONE);\r\n        }\r\n    }\r\n\r\n    private void getActiveStatus(String userId) {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        SubscriptionApi subscriptionApi = retrofit.create(SubscriptionApi.class);\r\n\r\n        Call<ActiveStatus> call = subscriptionApi.getActiveStatus(Config.API_KEY, userId);\r\n        call.enqueue(new Callback<ActiveStatus>() {\r\n            @Override\r\n            public void onResponse(Call<ActiveStatus> call, retrofit2.Response<ActiveStatus> response) {\r\n                ActiveStatus activeStatus = response.body();\r\n                if (!activeStatus.getStatus().equals(\"active\")) {\r\n                    mContentDetails.setVisibility(GONE);\r\n                    mSubscriptionLayout.setVisibility(VISIBLE);\r\n                } else {\r\n                    mContentDetails.setVisibility(VISIBLE);\r\n                    mSubscriptionLayout.setVisibility(GONE);\r\n                }\r\n\r\n                PreferenceUtils.updateSubscriptionStatus(DetailsActivity.this);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ActiveStatus> call, Throwable t) {\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getTvData(final String vtype, final String vId) {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        SingleDetailsTVApi api = retrofit.create(SingleDetailsTVApi.class);\r\n        Call<SingleDetailsTV> call = api.getSingleDetails(Config.API_KEY, vtype, vId);\r\n        call.enqueue(new Callback<SingleDetailsTV>() {\r\n            @Override\r\n            public void onResponse(Call<SingleDetailsTV> call, retrofit2.Response<SingleDetailsTV> response) {\r\n                if (response.code() == 200) {\r\n                    if (mSwipeRefreshLayout == null) return;\r\n                    if (response.body() != null) {\r\n                        mSwipeRefreshLayout.setRefreshing(false);\r\n                        mShimmerLayout.stopShimmer();\r\n                        mShimmerLayout.setVisibility(GONE);\r\n                        paidControl(response.body().getIsPaid());\r\n\r\n                        SingleDetailsTV detailsModel = response.body();\r\n\r\n                        mTitle = detailsModel.getTvName();\r\n                        mTvName.setText(mTitle);\r\n                        mTvName.setVisibility(GONE);\r\n                        mTvTitleTv.setText(mTitle);\r\n\r\n                        mImdb_rating = detailsModel.getTvImdb();\r\n                        mTvImdb.setText(mImdb_rating);\r\n                        mTvImdb.setVisibility(GONE);\r\n\r\n                        if (!detailsModel.getDescription().equals(\"\")) {\r\n                            mTvDes.setText(detailsModel.getDescription());\r\n                        }\r\n                        V_URL = detailsModel.getStreamUrl();\r\n                        mCastImageUrl = detailsModel.getThumbnailUrl();\r\n\r\n                        Picasso.get().load(detailsModel.getThumbnailUrl()).placeholder(R.drawable.album_art_placeholder)\r\n                                .into(mTvThumbIv);\r\n\r\n                        CommonModels model = new CommonModels();\r\n                        model.setTitle(\"HD\");\r\n                        model.setStremURL(V_URL);\r\n                        model.setServerType(detailsModel.getStreamFrom());\r\n                        mListServer.add(model);\r\n\r\n                        mCurrentProgramTime = detailsModel.getCurrentProgramTime();\r\n                        mCurrentProgramTitle = detailsModel.getCurrentProgramTitle();\r\n\r\n                        mTimeTv.setText(mCurrentProgramTime);\r\n                        mProgramTv.setText(mCurrentProgramTitle);\r\n                        if (PreferenceUtils.isProgramGuideEnabled(DetailsActivity.this)) {\r\n                            List<ProgramGuide> programGuideList = response.body().getProgramGuide();\r\n                            for (int i = 0; i < programGuideList.size(); i++) {\r\n                                ProgramGuide programGuide = programGuideList.get(i);\r\n                                Program program = new Program();\r\n                                program.setId(programGuide.getId());\r\n                                program.setTitle(programGuide.getTitle());\r\n                                program.setProgramStatus(programGuide.getProgramStatus());\r\n                                program.setTime(programGuide.getTime());\r\n                                program.setVideoUrl(programGuide.getVideoUrl());\r\n\r\n                                mPrograms.add(program);\r\n                            }\r\n\r\n                            if (mPrograms.size() <= 0) {\r\n                                mProGuideTv.setVisibility(GONE);\r\n                                mProgramRv.setVisibility(GONE);\r\n                            } else {\r\n                                mProGuideTv.setVisibility(VISIBLE);\r\n                                mProgramRv.setVisibility(VISIBLE);\r\n                                mProgramAdapter.notifyDataSetChanged();\r\n                            }\r\n                        }\r\n                        //all tv channel data\r\n                        List<AllTvChannel> allTvChannelList = response.body().getAllTvChannel();\r\n                        for (int i = 0; i < allTvChannelList.size(); i++) {\r\n                            AllTvChannel allTvChannel = allTvChannelList.get(i);\r\n                            CommonModels models = new CommonModels();\r\n                            models.setImageUrl(allTvChannel.getPosterUrl());\r\n                            models.setTitle(allTvChannel.getTvName());\r\n\r\n                            models.setVideoType(\"tv\");\r\n                            models.setIsPaid(allTvChannel.getIsPaid());\r\n                            models.setId(allTvChannel.getLiveTvId());\r\n                            mListRelated.add(models);\r\n                        }\r\n                        if (mListRelated.size() == 0) {\r\n                            mTvRelated.setVisibility(GONE);\r\n                        }\r\n                        mRelatedTvAdapter.notifyDataSetChanged();\r\n\r\n                        //additional media source data\r\n                        List<AdditionalMediaSource> serverArray = response.body().getAdditionalMediaSource();\r\n                        for (int i = 0; i < serverArray.size(); i++) {\r\n                            AdditionalMediaSource jsonObject = serverArray.get(i);\r\n                            CommonModels models = new CommonModels();\r\n                            models.setTitle(jsonObject.getLabel());\r\n                            models.setStremURL(jsonObject.getUrl());\r\n                            models.setServerType(jsonObject.getSource());\r\n\r\n                            mListServer.add(models);\r\n                        }\r\n                        mServerAdapter.notifyDataSetChanged();\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<SingleDetailsTV> call, Throwable t) {\r\n                mSwipeRefreshLayout.setRefreshing(false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getSeriesData(String vtype, String vId) {\r\n        final List<String> seasonList = new ArrayList<>();\r\n        final List<String> seasonListForDownload = new ArrayList<>();\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        SingleDetailsApi api = retrofit.create(SingleDetailsApi.class);\r\n        Call<SingleDetails> call = api.getSingleDetails(Config.API_KEY, vtype, vId);\r\n        call.enqueue(new Callback<SingleDetails>() {\r\n            @Override\r\n            public void onResponse(Call<SingleDetails> call, retrofit2.Response<SingleDetails> response) {\r\n                if (response.code() == 200) {\r\n                    if (mSwipeRefreshLayout == null) return;\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(GONE);\r\n\r\n                    SingleDetails singleDetails = response.body();\r\n                    String isPaid = singleDetails.getIsPaid();\r\n                    paidControl(isPaid);\r\n\r\n                    mTitle = singleDetails.getTitle();\r\n                    mImdb_rating = singleDetails.getImdb_rating();\r\n                    mSeriesTitleTv.setText(mTitle);\r\n                    mCastImageUrl = singleDetails.getThumbnailUrl();\r\n                    mSeriesTitle = mTitle;\r\n                    mTvName.setText(mTitle);\r\n                    mTvImdb.setText(mImdb_rating);\r\n                    mTvRelease.setText(\"Release On : \" + singleDetails.getRelease());\r\n                    if (!singleDetails.getDescription().equals(\"\")) {\r\n                        mTvDes.setText(singleDetails.getDescription());\r\n                    }\r\n\r\n                    Picasso.get().load(singleDetails.getPosterUrl()).placeholder(R.drawable.album_art_placeholder_large)\r\n                            .into(mPosterIv);\r\n                    Picasso.get().load(singleDetails.getThumbnailUrl()).placeholder(R.drawable.poster_placeholder)\r\n                            .into(mThumbIv);\r\n\r\n                    mDownload_check = singleDetails.getEnableDownload();\r\n\r\n                    //----director---------------\r\n                    for (int i = 0; i < singleDetails.getDirector().size(); i++) {\r\n                        Director director = singleDetails.getDirector().get(i);\r\n                        if (i == singleDetails.getDirector().size() - 1) {\r\n                            mStrDirector = mStrDirector + director.getName();\r\n                        } else {\r\n                            mStrDirector = mStrDirector + director.getName() + \", \";\r\n                        }\r\n                    }\r\n                    mTvDirector.setText(mStrDirector);\r\n\r\n                    //----cast---------------\r\n                    for (int i = 0; i < singleDetails.getCast().size(); i++) {\r\n                        Cast cast = singleDetails.getCast().get(i);\r\n\r\n                        CastCrew castCrew = new CastCrew();\r\n                        castCrew.setId(cast.getStarId());\r\n                        castCrew.setName(cast.getName());\r\n                        castCrew.setUrl(cast.getUrl());\r\n                        castCrew.setImageUrl(cast.getImageUrl());\r\n                        mCastCrews.add(castCrew);\r\n                    }\r\n                    mCastCrewAdapter.notifyDataSetChanged();\r\n                    //---genre---------------\r\n                    for (int i = 0; i < singleDetails.getGenre().size(); i++) {\r\n                        Genre genre = singleDetails.getGenre().get(i);\r\n                        if (i == singleDetails.getCast().size() - 1) {\r\n                            mStrGenre = mStrGenre + genre.getName();\r\n                        } else {\r\n                            if (i == singleDetails.getGenre().size() - 1) {\r\n                                mStrGenre = mStrGenre + genre.getName();\r\n                            } else {\r\n                                mStrGenre = mStrGenre + genre.getName() + \", \";\r\n                            }\r\n                        }\r\n                    }\r\n                    setGenreText();\r\n\r\n                    //----related tv series---------------\r\n                    for (int i = 0; i < singleDetails.getRelatedTvseries().size(); i++) {\r\n                        RelatedMovie relatedTvSeries = singleDetails.getRelatedTvseries().get(i);\r\n\r\n                        CommonModels models = new CommonModels();\r\n                        models.setTitle(relatedTvSeries.getTitle());\r\n                        models.setImageUrl(relatedTvSeries.getThumbnailUrl());\r\n                        models.setId(relatedTvSeries.getVideosId());\r\n                        models.setVideoType(\"tvseries\");\r\n                        models.setIsPaid(relatedTvSeries.getIsPaid());\r\n                        mListRelated.add(models);\r\n                    }\r\n                    if (mListRelated.size() == 0) {\r\n                        mTvRelated.setVisibility(GONE);\r\n                    }\r\n                    mRelatedAdapter.notifyDataSetChanged();\r\n\r\n                    //----seasson------------\r\n                    for (int i = 0; i < singleDetails.getSeason().size(); i++) {\r\n                        Season season = singleDetails.getSeason().get(i);\r\n\r\n                        CommonModels models = new CommonModels();\r\n                        String season_name = season.getSeasonsName();\r\n                        models.setTitle(season.getSeasonsName());\r\n                        seasonList.add(\"#SV: \" + season.getSeasonsName());\r\n                        seasonListForDownload.add(season.getSeasonsName());\r\n\r\n                        //----episode------\r\n                        List<EpiModel> epList = new ArrayList<>();\r\n                        epList.clear();\r\n                        for (int j = 0; j < singleDetails.getSeason().get(i).getEpisodes().size(); j++) {\r\n                            Episode episode = singleDetails.getSeason().get(i).getEpisodes().get(j);\r\n\r\n                            EpiModel model = new EpiModel();\r\n                            model.setSeson(season_name);\r\n                            model.setEpi(episode.getEpisodesName());\r\n                            model.setStreamURL(episode.getFileUrl());\r\n                            model.setServerType(episode.getFileType());\r\n                            model.setImageUrl(episode.getImageUrl());\r\n                            model.setSubtitleList(episode.getSubtitle());\r\n                            epList.add(model);\r\n                        }\r\n                        models.setListEpi(epList);\r\n                        mListServer.add(models);\r\n                        if (seasonList.size() > 0) {\r\n                            setSeasonData(seasonList, singleDetails.getSeason());\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<SingleDetails> call, Throwable t) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void onLoadDataFinish() {\r\n        if (isFromContinueWatching) {\r\n            onWatchNowClick();\r\n            isFromContinueWatching = false;\r\n        }\r\n    }\r\n\r\n\r\n    private void setSeasonData(List<String> seasonData, List<Season> seasonList) {\r\n\r\n        ArrayAdapter aa = new ArrayAdapter(this, android.R.layout.simple_spinner_item, seasonData);\r\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        mSeasonSpinner.setAdapter(aa);\r\n\r\n        mSeasonSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, final int position, long l) {\r\n                mRvServer.removeAllViewsInLayout();\r\n                mRvServer.setLayoutManager(new LinearLayoutManager(DetailsActivity.this,\r\n                        RecyclerView.HORIZONTAL, false));\r\n                mEpisodeAdapter = new EpisodeAdapter(DetailsActivity.this,\r\n                        mListServer.get(position).getListEpi());\r\n                if (mListServer.get(position).getListEpi().size() == 0) {\r\n                    mSeasonSpinnerContainer.setVisibility(View.GONE);\r\n                }\r\n                if (mMapMovies.containsKey(mId) && mMapMovies.get(mId) != null) {\r\n                    mEpisodeAdapter.setNowPlaying(mMapMovies.get(mId));\r\n                }\r\n                mRvServer.setAdapter(mEpisodeAdapter);\r\n\r\n                if (mMapMovies.containsKey(mId) && mMapMovies.get(mId) != null) {\r\n                    mRvServer.scrollToPosition(mMapMovies.get(mId) - 1);\r\n                }\r\n                mEpisodeAdapter.setOnEmbedItemClickListener(DetailsActivity.this);\r\n                //get download link\r\n                mListExternalDownload.clear();\r\n                mListInternalDownload.clear();\r\n                for (int i = 0; i < seasonList.get(position).getDownloadLinks().size(); i++) {\r\n                    DownloadLink downloadLink = seasonList.get(position).getDownloadLinks().get(i);\r\n                    CommonModels models = new CommonModels();\r\n                    models.setTitle(downloadLink.getLabel());\r\n                    models.setStremURL(downloadLink.getDownloadUrl());\r\n                    models.setFileSize(downloadLink.getFileSize());\r\n                    models.setResulation(downloadLink.getResolution());\r\n                    models.setInAppDownload(downloadLink.isInAppDownload());\r\n                    models.setListSub(mListServer.get(position).getListEpi().get(i).getSubtitleList());\r\n                    if (downloadLink.isInAppDownload()) {\r\n                        mListInternalDownload.add(models);\r\n                    } else {\r\n                        mListExternalDownload.add(models);\r\n                    }\r\n                }\r\n                onLoadDataFinish();\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public String getMapMovies() {\r\n        Gson gson = new Gson();\r\n        return gson.toJson(mMapMovies);\r\n    }\r\n\r\n    public void setMapMovies(String json) {\r\n        Gson gson = new Gson();\r\n        Type type = new TypeToken<HashMap<String, Integer>>() {\r\n        }.getType();\r\n        mMapMovies = gson.fromJson(json, type);\r\n    }\r\n\r\n    private void setGenreText() {\r\n\r\n        mTvGenre.setText(mStrGenre);\r\n\r\n        mDGenryTv.setText(mStrGenre);\r\n\r\n    }\r\n\r\n    private void getMovieData(String vtype, String vId) {\r\n        strCast = \"\";\r\n        mStrDirector = \"\";\r\n        mStrGenre = \"\";\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        SingleDetailsApi api = retrofit.create(SingleDetailsApi.class);\r\n        Call<SingleDetails> call = api.getSingleDetails(Config.API_KEY, vtype, vId);\r\n        call.enqueue(new Callback<SingleDetails>() {\r\n            @Override\r\n            public void onResponse(Call<SingleDetails> call, retrofit2.Response<SingleDetails> response) {\r\n                if (response.code() == 200) {\r\n                    if (mShimmerLayout == null) return;\r\n                    mShimmerLayout.stopShimmer();\r\n                    mShimmerLayout.setVisibility(GONE);\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n\r\n                    SingleDetails singleDetails = response.body();\r\n                    paidControl(singleDetails.getIsPaid());\r\n                    mDownload_check = singleDetails.getEnableDownload();\r\n                    mCastImageUrl = singleDetails.getThumbnailUrl();\r\n                    if (mDownload_check.equals(\"1\")) {\r\n                        mDownloadBt.setVisibility(VISIBLE);\r\n                    } else {\r\n                        //mDownloadBt.setVisibility(GONE);\r\n                    }\r\n                    mTitle = singleDetails.getTitle();\r\n                    mImdb_rating = singleDetails.getImdb_rating();\r\n                    movieTitle = mTitle;\r\n\r\n                    mTvName.setText(mTitle);\r\n                    mTvImdb.setText(mImdb_rating);\r\n                    mTvRelease.setText(\"Release On : \" + singleDetails.getRelease());\r\n                    if (!singleDetails.getDescription().equals(\"\")) {\r\n                        mTvDes.setText(singleDetails.getDescription());\r\n                    }\r\n\r\n                    Picasso.get().load(singleDetails.getPosterUrl()).placeholder(R.drawable.album_art_placeholder_large)\r\n                            .into(mPosterIv);\r\n                    Picasso.get().load(singleDetails.getThumbnailUrl()).placeholder(R.drawable.poster_placeholder)\r\n                            .into(mThumbIv);\r\n\r\n                    //----director---------------\r\n                    for (int i = 0; i < singleDetails.getDirector().size(); i++) {\r\n                        Director director = response.body().getDirector().get(i);\r\n                        if (i == singleDetails.getDirector().size() - 1) {\r\n                            mStrDirector = mStrDirector + director.getName();\r\n                        } else {\r\n                            mStrDirector = mStrDirector + director.getName() + \", \";\r\n                        }\r\n                    }\r\n                    mTvDirector.setText(mStrDirector);\r\n\r\n                    //----cast---------------\r\n                    for (int i = 0; i < singleDetails.getCast().size(); i++) {\r\n                        Cast cast = singleDetails.getCast().get(i);\r\n\r\n                        CastCrew castCrew = new CastCrew();\r\n                        castCrew.setId(cast.getStarId());\r\n                        castCrew.setName(cast.getName());\r\n                        castCrew.setUrl(cast.getUrl());\r\n                        castCrew.setImageUrl(cast.getImageUrl());\r\n\r\n                        mCastCrews.add(castCrew);\r\n\r\n                    }\r\n                    mCastCrewAdapter.notifyDataSetChanged();\r\n\r\n                    //---genre---------------\r\n                    for (int i = 0; i < singleDetails.getGenre().size(); i++) {\r\n                        Genre genre = singleDetails.getGenre().get(i);\r\n                        if (i == singleDetails.getCast().size() - 1) {\r\n                            mStrGenre = mStrGenre + genre.getName();\r\n                        } else {\r\n                            if (i == singleDetails.getGenre().size() - 1) {\r\n                                mStrGenre = mStrGenre + genre.getName();\r\n                            } else {\r\n                                mStrGenre = mStrGenre + genre.getName() + \", \";\r\n                            }\r\n                        }\r\n                    }\r\n                    mTvGenre.setText(mStrGenre);\r\n                    mDGenryTv.setText(mStrGenre);\r\n\r\n                    //-----server----------\r\n                    List<Video> serverList = new ArrayList<>();\r\n                    serverList.addAll(singleDetails.getVideos());\r\n                    for (int i = 0; i < serverList.size(); i++) {\r\n                        Video video = serverList.get(i);\r\n\r\n                        CommonModels models = new CommonModels();\r\n                        models.setTitle(video.getLabel());\r\n                        models.setStremURL(video.getFileUrl());\r\n                        models.setServerType(video.getFileType());\r\n\r\n                        if (video.getFileType().equals(\"mp4\")) {\r\n                            V_URL = video.getFileUrl();\r\n                        }\r\n\r\n                        //----subtitle-----------\r\n                        List<Subtitle> subArray = new ArrayList<>();\r\n                        subArray.addAll(singleDetails.getVideos().get(i).getSubtitle());\r\n                        if (subArray.size() != 0) {\r\n\r\n                            List<SubtitleModel> list = new ArrayList<>();\r\n                            for (int j = 0; j < subArray.size(); j++) {\r\n                                Subtitle subtitle = subArray.get(j);\r\n                                SubtitleModel subtitleModel = new SubtitleModel();\r\n                                subtitleModel.setUrl(subtitle.getUrl());\r\n                                subtitleModel.setLanguage(subtitle.getLanguage());\r\n                                list.add(subtitleModel);\r\n                            }\r\n                            if (i == 0) {\r\n                                mListSub.addAll(list);\r\n                            }\r\n                            models.setListSub(list);\r\n                        } else {\r\n                            models.setSubtitleURL(mStrSubtitle);\r\n                        }\r\n                        mListServer.add(models);\r\n                    }\r\n\r\n                    if (mServerAdapter != null) {\r\n                        mServerAdapter.notifyDataSetChanged();\r\n                    }\r\n\r\n                    //----related post---------------\r\n                    for (int i = 0; i < singleDetails.getRelatedMovie().size(); i++) {\r\n                        RelatedMovie relatedMovie = singleDetails.getRelatedMovie().get(i);\r\n                        CommonModels models = new CommonModels();\r\n                        models.setTitle(relatedMovie.getTitle());\r\n                        models.setImageUrl(relatedMovie.getThumbnailUrl());\r\n                        models.setId(relatedMovie.getVideosId());\r\n                        models.setVideoType(\"movie\");\r\n                        models.setIsPaid(relatedMovie.getIsPaid());\r\n                        models.setIsPaid(relatedMovie.getIsPaid());\r\n                        mListRelated.add(models);\r\n                    }\r\n\r\n                    if (mListRelated.size() == 0) {\r\n                        mTvRelated.setVisibility(GONE);\r\n                    }\r\n                    mRelatedAdapter.notifyDataSetChanged();\r\n\r\n                    //----download list---------\r\n                    mListExternalDownload.clear();\r\n                    mListInternalDownload.clear();\r\n                    for (int i = 0; i < singleDetails.getDownloadLinks().size(); i++) {\r\n                        DownloadLink downloadLink = singleDetails.getDownloadLinks().get(i);\r\n\r\n                        CommonModels models = new CommonModels();\r\n                        models.setTitle(downloadLink.getLabel());\r\n                        models.setStremURL(downloadLink.getDownloadUrl());\r\n                        models.setFileSize(downloadLink.getFileSize());\r\n                        models.setResulation(downloadLink.getResolution());\r\n                        models.setInAppDownload(downloadLink.isInAppDownload());\r\n                        if (downloadLink.isInAppDownload()) {\r\n                            mListInternalDownload.add(models);\r\n                        } else {\r\n                            mListExternalDownload.add(models);\r\n                        }\r\n                    }\r\n                    onLoadDataFinish();\r\n                } else {\r\n                    mSwipeRefreshLayout.setRefreshing(false);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<SingleDetails> call, Throwable t) {\r\n                mSwipeRefreshLayout.setRefreshing(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getFavStatus() {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        FavouriteApi api = retrofit.create(FavouriteApi.class);\r\n        Call<FavoriteModel> call = api.verifyFavoriteList(Config.API_KEY, mUserId, mId);\r\n        call.enqueue(new Callback<FavoriteModel>() {\r\n            @Override\r\n            public void onResponse(Call<FavoriteModel> call, retrofit2.Response<FavoriteModel> response) {\r\n                if (response.code() == 200) {\r\n                    if (mImgAddFav == null) return;\r\n                    if (response.body().getStatus().equalsIgnoreCase(\"success\")) {\r\n                        mIsFav = true;\r\n                        mImgAddFav.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                        mImgAddFav.setVisibility(VISIBLE);\r\n                        mImgAddFav2.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                        mImgAddFav2.setVisibility(VISIBLE);\r\n                    } else {\r\n                        mIsFav = false;\r\n                        mImgAddFav.setBackgroundResource(R.drawable.ic_favorite_border_white);\r\n                        mImgAddFav.setVisibility(VISIBLE);\r\n                        mImgAddFav2.setBackgroundResource(R.drawable.ic_favorite_border_white);\r\n                        mImgAddFav2.setVisibility(VISIBLE);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(@NotNull Call<FavoriteModel> call, @NotNull Throwable t) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void removeFromFav() {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        FavouriteApi api = retrofit.create(FavouriteApi.class);\r\n        Call<FavoriteModel> call = api.removeFromFavorite(Config.API_KEY, mUserId, mId);\r\n        call.enqueue(new Callback<FavoriteModel>() {\r\n            @Override\r\n            public void onResponse(Call<FavoriteModel> call, retrofit2.Response<FavoriteModel> response) {\r\n                if (response.code() == 200) {\r\n                    if (response.body().getStatus().equalsIgnoreCase(\"success\")) {\r\n                        mIsFav = false;\r\n                        new ToastMsg(DetailsActivity.this).toastIconSuccess(response.body().getMessage());\r\n                        mImgAddFav.setBackgroundResource(R.drawable.ic_favorite_border_white);\r\n                        mImgAddFav2.setBackgroundResource(R.drawable.ic_favorite_border_white);\r\n                    } else {\r\n                        mIsFav = true;\r\n                        new ToastMsg(DetailsActivity.this).toastIconError(response.body().getMessage());\r\n                        mImgAddFav.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                        mImgAddFav2.setBackgroundResource(R.drawable.ic_favorite_white);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<FavoriteModel> call, Throwable t) {\r\n                new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.fetch_error));\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isNetworkAvailable() {\r\n        ConnectivityManager connectivityManager\r\n                = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n\r\n    private void addComment(String videoId, String userId, final String comments) {\r\n\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        CommentApi api = retrofit.create(CommentApi.class);\r\n        Call<PostCommentModel> call = api.postComment(Config.API_KEY, videoId, userId, comments);\r\n        call.enqueue(new Callback<PostCommentModel>() {\r\n            @Override\r\n            public void onResponse(Call<PostCommentModel> call, retrofit2.Response<PostCommentModel> response) {\r\n                if (response.body().getStatus().equals(\"success\")) {\r\n                    mRvComment.removeAllViews();\r\n                    mListComment.clear();\r\n                    getComments();\r\n                    mEtComment.setText(\"\");\r\n                    new ToastMsg(DetailsActivity.this).toastIconSuccess(response.body().getMessage());\r\n                } else {\r\n                    new ToastMsg(DetailsActivity.this).toastIconError(response.body().getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<PostCommentModel> call, Throwable t) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getComments() {\r\n\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        CommentApi api = retrofit.create(CommentApi.class);\r\n        Call<List<GetCommentsModel>> call = api.getAllComments(Config.API_KEY, mId);\r\n        call.enqueue(new Callback<List<GetCommentsModel>>() {\r\n            @Override\r\n            public void onResponse(Call<List<GetCommentsModel>> call, retrofit2.Response<List<GetCommentsModel>> response) {\r\n                if (response.code() == 200) {\r\n                    mListComment.addAll(response.body());\r\n\r\n                    mCommentsAdapter.notifyDataSetChanged();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<GetCommentsModel>> call, Throwable t) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void hideDescriptionLayout() {\r\n        mDescriptionLayout.setVisibility(GONE);\r\n        mLPlay.setVisibility(VISIBLE);\r\n    }\r\n\r\n    public void showSeriesLayout() {\r\n        mSeriesLayout.setVisibility(VISIBLE);\r\n        mTopShareLayout.setVisibility(GONE);\r\n    }\r\n\r\n    public void showDescriptionLayout() {\r\n        mDescriptionLayout.setVisibility(VISIBLE);\r\n        mLPlay.setVisibility(GONE);\r\n        mSeriesLayout.setVisibility(GONE);\r\n        mTopShareLayout.setVisibility(VISIBLE);\r\n        if (mRvServer != null) {\r\n            if (mRvServer.getAdapter() != null) {\r\n                mRvServer.getAdapter().notifyDataSetChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        Log.e(\"OnPause\", \"isPlaying: \" + mIsPlaying);\r\n        if (mIsPlaying && mPlayer != null) {\r\n            //Log.e(\"PLAY:::\",\"PAUSE\");\r\n            mPlayer.setPlayWhenReady(false);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        //castManager.removeProgressWatcher(this);\r\n\r\n        Log.e(\"onStop\", \"isPlaying: \" + mIsPlaying);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        updateContinueWatchingData();\r\n        resetCastPlayer();\r\n        releasePlayer();\r\n        mUnbinder.unbind();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (mActiveMovie) {\r\n            setPlayerNormalScreen();\r\n            if (mPlayer != null) {\r\n                mPlayer.setPlayWhenReady(false);\r\n                mPlayer.stop();\r\n            }\r\n            showDescriptionLayout();\r\n            mActiveMovie = false;\r\n        } else {\r\n            releasePlayer();\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        //startPlayer();\r\n        if (mPlayer != null) {\r\n            if (mType.equals(\"youtube\") || mType.equals(\"youtube-live\")) {\r\n                if (Config.YOUTUBE_VIDEO_AUTO_PLAY) {\r\n                    mPlayer.setPlayWhenReady(true);\r\n                } else {\r\n                    mPlayer.setPlayWhenReady(false);\r\n                }\r\n            } else {\r\n                mPlayer.setPlayWhenReady(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void releasePlayer() {\r\n        if (mPlayer != null) {\r\n            mPlayer.setPlayWhenReady(true);\r\n            mPlayer.stop();\r\n            mPlayer.release();\r\n            mPlayer = null;\r\n            mSimpleExoPlayerView.setPlayer(null);\r\n            //simpleExoPlayerView = null;\r\n        }\r\n    }\r\n\r\n    public void setMediaUrlForTvSeries(String url, String season, String episod) {\r\n        mMediaUrl = url;\r\n        this.mSeason = season;\r\n        this.mEpisode = episod;\r\n    }\r\n\r\n    public boolean getCastSession() {\r\n        return mCastSession;\r\n    }\r\n\r\n    public void resetCastPlayer() {\r\n        if (mCastPlayer != null) {\r\n            mCastPlayer.setPlayWhenReady(false);\r\n            mCastPlayer.release();\r\n        }\r\n    }\r\n\r\n    public void showQueuePopup(final Context context, final MediaInfo mediaInfo) {\r\n        CastSession castSession =\r\n                CastContext.getSharedInstance(context).getSessionManager().getCurrentCastSession();\r\n        if (castSession == null || !castSession.isConnected()) {\r\n            Log.w(TAG, \"showQueuePopup(): not connected to a cast device\");\r\n            return;\r\n        }\r\n        final RemoteMediaClient remoteMediaClient = castSession.getRemoteMediaClient();\r\n        if (remoteMediaClient == null) {\r\n            Log.w(TAG, \"showQueuePopup(): null RemoteMediaClient\");\r\n            return;\r\n        }\r\n        MediaQueueItem queueItem = new MediaQueueItem.Builder(mediaInfo).setAutoplay(\r\n                true).setPreloadTime(PRELOAD_TIME_S).build();\r\n        MediaQueueItem[] newItemArray = new MediaQueueItem[]{queueItem};\r\n        remoteMediaClient.queueLoad(newItemArray, 0,\r\n                MediaStatus.REPEAT_MODE_REPEAT_OFF, null);\r\n\r\n    }\r\n\r\n    public void playNextCast(MediaInfo mediaInfo) {\r\n\r\n        //simpleExoPlayerView.setPlayer(castPlayer);\r\n        mSimpleExoPlayerView.setUseController(false);\r\n        mCastControlView.setVisibility(VISIBLE);\r\n        mCastControlView.setPlayer(mCastPlayer);\r\n        //simpleExoPlayerView.setDefaultArtwork();\r\n        mCastControlView.setVisibilityListener(new PlaybackControlView.VisibilityListener() {\r\n            @Override\r\n            public void onVisibilityChange(int visibility) {\r\n                if (visibility == GONE) {\r\n                    mCastControlView.setVisibility(VISIBLE);\r\n                    mChromeCastTv.setVisibility(VISIBLE);\r\n                }\r\n            }\r\n        });\r\n        CastSession castSession =\r\n                CastContext.getSharedInstance(this).getSessionManager().getCurrentCastSession();\r\n\r\n        if (castSession == null || !castSession.isConnected()) {\r\n            Log.w(TAG, \"showQueuePopup(): not connected to a cast device\");\r\n            return;\r\n        }\r\n\r\n        final RemoteMediaClient remoteMediaClient = castSession.getRemoteMediaClient();\r\n\r\n        if (remoteMediaClient == null) {\r\n            Log.w(TAG, \"showQueuePopup(): null RemoteMediaClient\");\r\n            return;\r\n        }\r\n        MediaQueueItem queueItem = new MediaQueueItem.Builder(mediaInfo).setAutoplay(\r\n                true).setPreloadTime(PRELOAD_TIME_S).build();\r\n        MediaQueueItem[] newItemArray = new MediaQueueItem[]{queueItem};\r\n\r\n        remoteMediaClient.queueLoad(newItemArray, 0,\r\n                MediaStatus.REPEAT_MODE_REPEAT_OFF, null);\r\n        mCastPlayer.setPlayWhenReady(true);\r\n\r\n    }\r\n\r\n    public MediaInfo getMediaInfo() {\r\n        MediaMetadata movieMetadata = new MediaMetadata(MediaMetadata.MEDIA_TYPE_MOVIE);\r\n        movieMetadata.putString(MediaMetadata.KEY_TITLE, mTitle);\r\n        //movieMetadata.putString(MediaMetadata.KEY_ALBUM_ARTIST, \"Test Artist\");\r\n        movieMetadata.addImage(new WebImage(Uri.parse(mCastImageUrl)));\r\n        MediaInfo mediaInfo = new MediaInfo.Builder(mMediaUrl)\r\n                .setStreamType(MediaInfo.STREAM_TYPE_BUFFERED)\r\n                .setContentType(MimeTypes.VIDEO_UNKNOWN)\r\n                .setMetadata(movieMetadata).build();\r\n\r\n        return mediaInfo;\r\n\r\n    }\r\n\r\n    public void downloadVideo(final String url) {\r\n\r\n        if (Build.VERSION.SDK_INT >= 23) {\r\n            if (checkPermission()) {\r\n                // Code for above or equal 23 API Oriented Device\r\n                // Your Permission granted already .Do next code\r\n                Handler handler = new Handler();\r\n                Runnable runnable = new Runnable() {\r\n                    public void run() {\r\n                        downloadFile(url);\r\n                    }\r\n                };\r\n                handler.post(runnable);\r\n\r\n            } else {\r\n                requestPermission(); // Code for permission\r\n            }\r\n        } else {\r\n\r\n            // Code for Below 23 API Oriented Device\r\n            // Do next code\r\n\r\n            Handler handler = new Handler();\r\n            Runnable runnable = new Runnable() {\r\n                public void run() {\r\n                    downloadFile(url);\r\n                }\r\n            };\r\n            handler.post(runnable);\r\n        }\r\n    }\r\n\r\n    private boolean checkPermission() {\r\n        int result = ContextCompat.checkSelfPermission(this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n        if (result == PackageManager.PERMISSION_GRANTED) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void requestPermission() {\r\n\r\n        if (ActivityCompat.shouldShowRequestPermissionRationale(this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n            Toast.makeText(this, \"Write External Storage permission allows us to do store images. Please allow this permission in App Settings.\", Toast.LENGTH_LONG).show();\r\n        } else {\r\n            ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSION_REQUEST_CODE);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {\r\n        switch (requestCode) {\r\n            case PERMISSION_REQUEST_CODE:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    new ToastMsg(DetailsActivity.this).toastIconSuccess(\"Now You can download.\");\r\n                    Log.e(\"value\", \"Permission Granted, Now you can use local drive .\");\r\n                } else {\r\n                    Log.e(\"value\", \"Permission Denied, You cannot use local drive .\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void downloadFile(String url) {\r\n        String fileName = \"\";\r\n        int notificationId = new Random().nextInt(100 - 1) - 1;\r\n        Log.d(\"id:\", notificationId + \"\");\r\n\r\n        if (url == null || url.isEmpty()) {\r\n            return;\r\n        }\r\n\r\n        if (mType.equals(\"movie\")) {\r\n            fileName = mTvName.getText().toString();\r\n        } else {\r\n            fileName = mSeriesTitle + \"_\" + mSeason + \"_\" + mEpisode;\r\n        }\r\n\r\n        String path = Constants.getDownloadDir(DetailsActivity.this);\r\n\r\n        String fileExt = url.substring(url.lastIndexOf('.')); // output like .mkv\r\n        fileName = fileName + fileExt;\r\n\r\n        fileName = fileName.replaceAll(\" \", \"_\");\r\n        fileName = fileName.replaceAll(\":\", \"_\");\r\n\r\n        File file = new File(path, \"e_\" + fileName); // e_ for encode\r\n        if (file.exists()) {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.file_already_downloaded));\r\n            return;\r\n        }\r\n\r\n        //download with workManager\r\n        String dir = getExternalFilesDir(Environment.DIRECTORY_DOWNLOADS).toString();\r\n        Data data = new Data.Builder()\r\n                .putString(\"url\", url)\r\n                .putString(\"dir\", dir)\r\n                .putString(\"fileName\", fileName)\r\n                .build();\r\n\r\n        OneTimeWorkRequest request = new OneTimeWorkRequest.Builder(DownloadWorkManager.class)\r\n                .setInputData(data)\r\n                .build();\r\n\r\n        String workId = request.getId().toString();\r\n        Constants.workId = workId;\r\n        WorkManager.getInstance().enqueue(request);\r\n    }\r\n\r\n    public void hideExoControlForTv() {\r\n        mExoRewind.setVisibility(GONE);\r\n        mExoForward.setVisibility(GONE);\r\n        mLiveTv.setVisibility(VISIBLE);\r\n        mSeekbarLayout.setVisibility(GONE);\r\n    }\r\n\r\n    public void showExoControlForTv() {\r\n        mExoRewind.setVisibility(VISIBLE);\r\n        mExoForward.setVisibility(VISIBLE);\r\n        mLiveTv.setVisibility(GONE);\r\n        mSeekbarLayout.setVisibility(VISIBLE);\r\n        mWatchLiveTv.setVisibility(VISIBLE);\r\n        mLiveTv.setVisibility(GONE);\r\n        mWatchStatusTv.setText(getResources().getString(R.string.watching_catch_up_tv));\r\n    }\r\n\r\n    private void getScreenSize() {\r\n        display = getWindowManager().getDefaultDisplay();\r\n        size = new Point();\r\n        display.getSize(size);\r\n        sWidth = size.x;\r\n        sHeight = size.y;\r\n        //Toast.makeText(this, \"fjiaf\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\npublic class RelativeLayoutTouchListener implements View.OnTouchListener {\r\n    @Override\r\n    public boolean onTouch(View v, MotionEvent event) {\r\n        switch (event.getAction()) {\r\n            case MotionEvent.ACTION_DOWN:\r\n\r\n                //touch is start\r\n                downX = event.getX();\r\n                downY = event.getY();\r\n                if (event.getX() < (sWidth / 2)) {\r\n\r\n                    //here check touch is screen left or right side\r\n                    mIntLeft = true;\r\n                    mIntRight = false;\r\n\r\n                } else if (event.getX() > (sWidth / 2)) {\r\n\r\n                    //here check touch is screen left or right side\r\n                    mIntLeft = false;\r\n                    mIntRight = true;\r\n                }\r\n                break;\r\n\r\n            case MotionEvent.ACTION_UP:\r\n\r\n            case MotionEvent.ACTION_MOVE:\r\n\r\n                //finger move to screen\r\n                float x2 = event.getX();\r\n                float y2 = event.getY();\r\n\r\n                diffX = (long) (Math.ceil(event.getX() - downX));\r\n                diffY = (long) (Math.ceil(event.getY() - downY));\r\n\r\n                if (Math.abs(diffY) > Math.abs(diffX)) {\r\n                    if (mIntLeft) {\r\n                        //if left its for brightness\r\n\r\n                        if (downY < y2) {\r\n                            //down swipe brightness decrease\r\n                        } else if (downY > y2) {\r\n                            //up  swipe brightness increase\r\n                        }\r\n\r\n                    } else if (mIntRight) {\r\n\r\n                        //if right its for audio\r\n                        if (downY < y2) {\r\n                            //down swipe volume decrease\r\n                            mAudioManager.adjustVolume(AudioManager.ADJUST_LOWER, AudioManager.FLAG_PLAY_SOUND);\r\n\r\n                        } else if (downY > y2) {\r\n                            //up  swipe volume increase\r\n                            mAudioManager.adjustVolume(AudioManager.ADJUST_RAISE, AudioManager.FLAG_PLAY_SOUND);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n\r\n    @Override\r\n    public void onSaveInstanceState(Bundle outState, PersistableBundle outPersistentState) {\r\n        super.onSaveInstanceState(outState, outPersistentState);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\r\n        super.onRestoreInstanceState(savedInstanceState);\r\n    }\r\n\r\n\r\n    @OnClick(R.id.img_back)\r\n    void onBackClick() {\r\n        if (mActiveMovie) {\r\n            setPlayerNormalScreen();\r\n            if (mPlayer != null) {\r\n                mPlayer.setPlayWhenReady(false);\r\n                mPlayer.stop();\r\n            }\r\n            showDescriptionLayout();\r\n            mActiveMovie = false;\r\n        } else {\r\n            finish();\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.img_subtitle)\r\n    void onSubtitleClick() {\r\n        showSubtitleDialog(DetailsActivity.this, mListSub);\r\n    }\r\n\r\n    @OnClick(R.id.btn_comment)\r\n    void onCommentBtnClick() {\r\n        if (!PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n            startActivity(new Intent(DetailsActivity.this, LoginActivity.class));\r\n            new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.login_first));\r\n        } else if (mEtComment.getText().toString().equals(\"\")) {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(getString(R.string.comment_empty));\r\n        } else {\r\n            String comment = mEtComment.getText().toString();\r\n            addComment(mId, PreferenceUtils.getUserId(DetailsActivity.this), comment);\r\n        }\r\n    }\r\n\r\n    @OnClick({R.id.add_fav, R.id.add_fav2})\r\n    void onFavClick() {\r\n        if (mIsFav) {\r\n            removeFromFav();\r\n        } else {\r\n            addToFav();\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.img_full_scr)\r\n    void onFullScrClick() {\r\n        controlFullScreenPlayer();\r\n    }\r\n\r\n    @OnClick(R.id.volumn_control_iv)\r\n    void onVolumnControlClick() {\r\n        mVolumnControlLayout.setVisibility(VISIBLE);\r\n    }\r\n\r\n    @OnClick(R.id.aspect_ratio_iv)\r\n    void onAspectRatioClick() {\r\n        if (mAspectClickCount == 1) {\r\n            //Toast.makeText(DetailsActivity.this, \"Fill\", Toast.LENGTH_SHORT).show();\r\n            mSimpleExoPlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FILL);\r\n            mPlayer.setVideoScalingMode(C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING);\r\n            mAspectClickCount = 2;\r\n        } else if (mAspectClickCount == 2) {\r\n            //Toast.makeText(DetailsActivity.this, \"Fit\", Toast.LENGTH_SHORT).show();\r\n            mSimpleExoPlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FIT);\r\n            mPlayer.setVideoScalingMode(C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING);\r\n            mAspectClickCount = 3;\r\n        } else if (mAspectClickCount == 3) {\r\n            //Toast.makeText(DetailsActivity.this, \"Zoom\", Toast.LENGTH_SHORT).show();\r\n            mSimpleExoPlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FIT);\r\n            mPlayer.setVideoScalingMode(C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING);\r\n            mAspectClickCount = 1;\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.external_player_iv)\r\n    void onExternalPlayerClick() {\r\n        if (mMediaUrl != null) {\r\n            if (!tv) {\r\n                // set player normal/ potrait screen if not tv\r\n                mDescriptionLayout.setVisibility(VISIBLE);\r\n                setPlayerNormalScreen();\r\n            }\r\n            Intent intent = new Intent(Intent.ACTION_VIEW);\r\n            intent.setDataAndType(Uri.parse(mMediaUrl), \"video/*\");\r\n            startActivity(Intent.createChooser(intent, \"Complete action using\"));\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.watch_now_bt)\r\n    void onWatchNowClick() {\r\n        if (mType.equals(\"tvseries\")) {\r\n            if (mEpisodeAdapter != null) {\r\n                mEpisodeAdapter.getWatchEpisode();\r\n                return;\r\n            }\r\n            Toast.makeText(DetailsActivity.this, \"Please select an episode\", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n        //PopUpAds.ShowAdmobInterstitialAds(DetailsActivity.this);\r\n        if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n            if (!PreferenceUtils.isActivePlan(DetailsActivity.this)) {\r\n                if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {\r\n                    PopUpAds.showAppodealInterstitialAds(DetailsActivity.this);\r\n                } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {\r\n                    PopUpAds.ShowAdmobInterstitialAds(DetailsActivity.this);\r\n                }\r\n            }\r\n        }\r\n        if (!mListServer.isEmpty()) {\r\n            if (mListServer.size() == 1) {\r\n                releasePlayer();\r\n                resetCastPlayer();\r\n                preparePlayer(mListServer.get(0));\r\n                mDescriptionLayout.setVisibility(GONE);\r\n                mLPlay.setVisibility(VISIBLE);\r\n            } else {\r\n                openServerDialog();\r\n            }\r\n        } else {\r\n            Toast.makeText(DetailsActivity.this, R.string.no_video_found, Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.download_bt)\r\n    void onDownloadClick() {\r\n        if (PreferenceUtils.isLoggedIn(DetailsActivity.this)) {\r\n            //PopUpAds.ShowAdmobInterstitialAds(DetailsActivity.this);\r\n//                    DetailsActivity.getInstance().loadAdReward();\r\n            VideoRewardAds.showRewardedVideo(DetailsActivity.getInstance());\r\n            if (!mListInternalDownload.isEmpty() || !mListExternalDownload.isEmpty()) {\r\n                if (Config.ENABLE_DOWNLOAD_TO_ALL) {\r\n                    openDownloadServerDialog();\r\n                } else {\r\n                    if (PreferenceUtils.isLoggedIn(DetailsActivity.this) && PreferenceUtils.isActivePlan(DetailsActivity.this)) {\r\n                        openDownloadServerDialog();\r\n                    } else {\r\n                        Toast.makeText(DetailsActivity.this, R.string.download_not_permitted, Toast.LENGTH_SHORT).show();\r\n                        Log.e(\"Download\", \"not permitted\");\r\n                    }\r\n                }\r\n            } else {\r\n                Toast.makeText(DetailsActivity.this, R.string.no_download_server_found, Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else {\r\n            Intent intent = new Intent(DetailsActivity.this, LoginActivity.class);\r\n            startActivity(intent);\r\n        }\r\n    }\r\n\r\n    @OnClick(R.id.watch_live_tv)\r\n    void onWatchLiveClick() {\r\n        hideExoControlForTv();\r\n        initMoviePlayer(mMediaUrl, mServerType, DetailsActivity.this);\r\n\r\n        mWatchStatusTv.setText(getString(R.string.watching_on) + \" \" + getString(R.string.app_name));\r\n        mWatchLiveTv.setVisibility(GONE);\r\n\r\n        mTimeTv.setText(mCurrentProgramTime);\r\n        mProgramTv.setText(mCurrentProgramTitle);\r\n    }\r\n\r\n    @OnClick({R.id.share_iv2, R.id.share_iv, R.id.share_iv3})\r\n    void onShare2Click() {\r\n        if (mTitle == null) {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(\"Title should not be empty.\");\r\n            return;\r\n        }\r\n        Tools.share(DetailsActivity.this, mTitle);\r\n    }\r\n\r\n    @OnClick(R.id.img_server)\r\n    void onSeverClick() {\r\n        openServerDialog();\r\n    }\r\n\r\n    @OnClick(R.id.subscribe_bt)\r\n    void onSubscribeClick() {\r\n        if (mUserId == null) {\r\n            new ToastMsg(DetailsActivity.this).toastIconError(getResources().getString(R.string.subscribe_error));\r\n            startActivity(new Intent(DetailsActivity.this, LoginActivity.class));\r\n            finish();\r\n        } else {\r\n            startActivity(new Intent(DetailsActivity.this, PurchasePlanActivity.class));\r\n        }\r\n    }\r\n\r\n    @OnClick({R.id.des_back_iv, R.id.back_iv})\r\n    void onDesBackClick() {\r\n        if (mActiveMovie) {\r\n            setPlayerNormalScreen();\r\n            if (mPlayer != null) {\r\n                mPlayer.setPlayWhenReady(false);\r\n                mPlayer.stop();\r\n            }\r\n            showDescriptionLayout();\r\n            mActiveMovie = false;\r\n        } else {\r\n            releasePlayer();\r\n            finish();\r\n        }\r\n\r\n    }\r\n\r\n    @OnClick({R.id.report_iv, R.id.report_iv2})\r\n    void onReportClick() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View view = LayoutInflater.from(this).inflate(R.layout.movie_report_dialog, null);\r\n        builder.setView(view);\r\n        final AlertDialog dialog = builder.create();\r\n        dialog.setCancelable(false);\r\n\r\n        TextView movieTitle = view.findViewById(R.id.movie_title);\r\n        RadioGroup videoGroup = view.findViewById(R.id.radio_group_video);\r\n        RadioGroup audioGroup = view.findViewById(R.id.radio_group_audio);\r\n        RadioGroup subtitleGroup = view.findViewById(R.id.radio_group_subtitle);\r\n        //EditText message = view.findViewById(R.id.report_message_et);\r\n        TextInputEditText message = view.findViewById(R.id.report_message_et);\r\n        Button submitButton = view.findViewById(R.id.submit_button);\r\n        Button cancelButton = view.findViewById(R.id.cancel_button);\r\n        LinearLayout subtitleLayout = view.findViewById(R.id.subtitleLayout);\r\n        if (mType.equalsIgnoreCase(\"tv\")) {\r\n            subtitleLayout.setVisibility(GONE);\r\n        }\r\n\r\n        movieTitle.setText(\"Report for: \" + mTitle);\r\n        if (!mIsDark) {\r\n            movieTitle.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        }\r\n\r\n        videoGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // find the radiobutton by returned id\r\n                RadioButton radioButton = (RadioButton) view.findViewById(checkedId);\r\n                videoReport = radioButton.getText().toString();\r\n            }\r\n        });\r\n\r\n        audioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // find the radiobutton by returned id\r\n                RadioButton radioButton = (RadioButton) view.findViewById(checkedId);\r\n                audioReport = radioButton.getText().toString();\r\n            }\r\n        });\r\n\r\n        subtitleGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // find the radiobutton by returned id\r\n                RadioButton radioButton = (RadioButton) view.findViewById(checkedId);\r\n                subtitleReport = radioButton.getText().toString();\r\n            }\r\n        });\r\n\r\n        submitButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                messageReport = message.getText().toString().trim();\r\n                Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n                ReportApi api = retrofit.create(ReportApi.class);\r\n                Call<ResponseBody> call = api.submitReport(Config.API_KEY, mType, mId, videoReport, audioReport, subtitleReport, messageReport);\r\n                call.enqueue(new Callback<ResponseBody>() {\r\n                    @Override\r\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n                        if (response.code() == 200) {\r\n                            new ToastMsg(getApplicationContext()).toastIconSuccess(\"Report submitted\");\r\n                        } else {\r\n                            new ToastMsg(getApplicationContext()).toastIconError(getResources().getString(R.string.something_went_text));\r\n                        }\r\n                        dialog.dismiss();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<ResponseBody> call, Throwable t) {\r\n                        new ToastMsg(getApplicationContext()).toastIconError(getResources().getString(R.string.something_went_text));\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        cancelButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        dialog.show();\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/DetailsActivity.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/DetailsActivity.java	(date 1612123044386)
@@ -58,10 +58,18 @@
 import androidx.work.OneTimeWorkRequest;
 import androidx.work.WorkManager;
 
+import com.appodeal.ads.Appodeal;
+import com.appodeal.ads.Native;
+import com.appodeal.ads.NativeAd;
+import com.appodeal.ads.NativeAdView;
+import com.appodeal.ads.NativeCallbacks;
+import com.appodeal.ads.NativeMediaView;
+import com.appodeal.ads.native_ad.views.NativeAdViewContentStream;
 import com.balysv.materialripple.MaterialRippleLayout;
 import com.downloader.PRDownloader;
 import com.downloader.Status;
 import com.facebook.shimmer.ShimmerFrameLayout;
+import com.google.android.ads.nativetemplates.TemplateView;
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.ExoPlayerFactory;
 import com.google.android.exoplayer2.Format;
@@ -187,6 +195,7 @@
 import tvseries.koreandramaengsub.freemovieapp.utils.ToastMsg;
 import tvseries.koreandramaengsub.freemovieapp.utils.Tools;
 import tvseries.koreandramaengsub.freemovieapp.utils.ads.BannerAds;
+import tvseries.koreandramaengsub.freemovieapp.utils.ads.NativeAds;
 import tvseries.koreandramaengsub.freemovieapp.utils.ads.PopUpAds;
 import tvseries.koreandramaengsub.freemovieapp.utils.ads.VideoRewardAds;
 
@@ -340,6 +349,8 @@
     TextView mSeriesTitleTv;
     @BindView(R.id.linear_share)
     View mTopShareLayout;
+    @BindView(R.id.admob_nativead_template)
+    TemplateView admobNativeAdView;
     private Unbinder mUnbinder;
     private ContinueWatchingViewModel mContinueViewModel;
     private boolean isFromContinueWatching = false;
@@ -1067,12 +1078,22 @@
         if (PreferenceUtils.isLoggedIn(this) && PreferenceUtils.isActivePlan(this)) return;
         if (adsConfig.getAdsEnable().equals("1")) {
             if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.ADMOB)) {
-                BannerAds.ShowAdmobBannerAds(this, mAdView);
+                //BannerAds.ShowAdmobBannerAds(this, mAdView);
                 VideoRewardAds.prepareAd(this);
                 //PopUpAds.ShowAdmobInterstitialAds(this);
+
+                admobNativeAdView.setVisibility(View.VISIBLE);
+                NativeAds.showAdmobNativeAds(DetailsActivity.this, admobNativeAdView);
             } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.START_APP)) {
                 //   PopUpAds.showStartappInterstitialAds(DetailsActivity.this);
                 BannerAds.showAppodealBanner(DetailsActivity.this, R.id.appodealBannerView);
+
+                Appodeal.cache(DetailsActivity.this, Appodeal.NATIVE);
+               // List<NativeAd> loadedNativeAds = Appodeal.getNativeAds(1)[0];
+
+                //NativeAd nativeAd = Appodeal.getNativeAds(1)[0];
+               // NativeAdViewContentStream nativeAdView = (NativeAdViewContentStream) findViewById(R.id.native_ad_view_content_stream);
+                //nativeAdView.setNativeAd(loadedNativeAds);
             } else if (adsConfig.getMobileAdsNetwork().equalsIgnoreCase(Constants.NETWORK_AUDIENCE)) {
                 BannerAds.showFANBanner(this, mAdView);
                 PopUpAds.showFANInterstitialAds(DetailsActivity.this);
@@ -1081,6 +1102,41 @@
         }
     }
 
+    public void loadNativeAds() {
+        Appodeal.setRequiredNativeMediaAssetType(Native.MediaAssetType.ICON);
+        Appodeal.setNativeCallbacks(new NativeCallbacks() {
+            @Override
+            public void onNativeLoaded() {
+                Toast.makeText(DetailsActivity.this, "onNativeLoaded", Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onNativeFailedToLoad() {
+                Toast.makeText(DetailsActivity.this, "onNativeFailedToLoad", Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onNativeShown(NativeAd nativeAd) {
+                Toast.makeText(DetailsActivity.this, "onNativeShown", Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onNativeShowFailed(NativeAd nativeAd) {
+
+            }
+
+            @Override
+            public void onNativeClicked(NativeAd nativeAd) {
+                Toast.makeText(DetailsActivity.this, "onNativeClicked", Toast.LENGTH_SHORT).show();
+            }
+
+            @Override
+            public void onNativeExpired() {
+                Toast.makeText(DetailsActivity.this, "onNativeExpired", Toast.LENGTH_SHORT).show();
+            }
+        });
+    };
+
     private void initGetData() {
         if (!mType.equals("tv")) {
 
Index: app/src/main/java/tvseries/koreandramaengsub/freemovieapp/PurchasePlanActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tvseries.koreandramaengsub.freemovieapp;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.paypal.android.sdk.payments.PayPalConfiguration;\r\nimport com.paypal.android.sdk.payments.PayPalPayment;\r\nimport com.paypal.android.sdk.payments.PayPalService;\r\nimport com.paypal.android.sdk.payments.PaymentActivity;\r\nimport com.paypal.android.sdk.payments.PaymentConfirmation;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport okhttp3.ResponseBody;\r\nimport tvseries.koreandramaengsub.freemovieapp.adapters.PackageAdapter;\r\nimport tvseries.koreandramaengsub.freemovieapp.bottomshit.PaymentBottomShitDialog;\r\nimport tvseries.koreandramaengsub.freemovieapp.database.DatabaseHelper;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.RetrofitClient;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.PackageApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.PaymentApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.apis.SubscriptionApi;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.ActiveStatus;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.AllPackage;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.Package;\r\nimport tvseries.koreandramaengsub.freemovieapp.network.model.config.PaymentConfig;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ApiResources;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.PreferenceUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.RtlUtils;\r\nimport tvseries.koreandramaengsub.freemovieapp.utils.ToastMsg;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\n\r\npublic class PurchasePlanActivity extends AppCompatActivity implements PackageAdapter.OnItemClickListener, PaymentBottomShitDialog.OnBottomShitClickListener {\r\n\r\n    private static final String TAG = PurchasePlanActivity.class.getSimpleName();\r\n    private static final int PAYPAL_REQUEST_CODE = 100;\r\n    private TextView noTv;\r\n    private ProgressBar progressBar;\r\n    private ImageView closeIv;\r\n    private RecyclerView packageRv;\r\n    private List<Package> packages = new ArrayList<>();\r\n    private List<ImageView> imageViews = new ArrayList<>();\r\n    private String currency = \"\";\r\n    private String exchangeRate;\r\n    private boolean isDark;\r\n\r\n    private static PayPalConfiguration config = new PayPalConfiguration()\r\n            .environment(PayPalConfiguration.ENVIRONMENT_SANDBOX)\r\n            .clientId(ApiResources.PAYPAL_CLIENT_ID);\r\n    private Package packageItem;\r\n    private PaymentBottomShitDialog paymentBottomShitDialog;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        RtlUtils.setScreenDirection(this);\r\n        super.onCreate(savedInstanceState);\r\n\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"push\", MODE_PRIVATE);\r\n        isDark = sharedPreferences.getBoolean(\"dark\", false);\r\n\r\n        if (isDark) {\r\n            setTheme(R.style.AppThemeDark);\r\n        } else {\r\n            setTheme(R.style.AppThemeLight);\r\n        }\r\n        setContentView(R.layout.activity_purchase_plan);\r\n\r\n        initView();\r\n\r\n        // ---------- start paypal service ----------\r\n        Intent intent = new Intent(this, PayPalService.class);\r\n        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);\r\n        startService(intent);\r\n\r\n        // getting currency symbol\r\n        PaymentConfig config = new DatabaseHelper(PurchasePlanActivity.this).getConfigurationData().getPaymentConfig();\r\n        currency = config.getCurrencySymbol();\r\n        exchangeRate = config.getExchangeRate();\r\n        packageRv.setHasFixedSize(true);\r\n        packageRv.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        getPurchasePlanInfo();\r\n    }\r\n\r\n    private void getPurchasePlanInfo() {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        final PackageApi packageApi = retrofit.create(PackageApi.class);\r\n        Call<AllPackage> call = packageApi.getAllPackage(Config.API_KEY);\r\n        call.enqueue(new Callback<AllPackage>() {\r\n            @Override\r\n            public void onResponse(Call<AllPackage> call, Response<AllPackage> response) {\r\n                AllPackage allPackage = response.body();\r\n                packages = allPackage.getPackage();\r\n                if (allPackage.getPackage().size() > 0) {\r\n                    noTv.setVisibility(View.GONE);\r\n                    PackageAdapter adapter = new PackageAdapter(PurchasePlanActivity.this, allPackage.getPackage(), currency);\r\n                    adapter.setItemClickListener(PurchasePlanActivity.this);\r\n                    packageRv.setAdapter(adapter);\r\n                } else {\r\n                    noTv.setVisibility(View.VISIBLE);\r\n                }\r\n                progressBar.setVisibility(View.GONE);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<AllPackage> call, Throwable t) {\r\n                progressBar.setVisibility(View.GONE);\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        closeIv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        if (requestCode == PAYPAL_REQUEST_CODE) {\r\n            if (resultCode == RESULT_OK) {\r\n                PaymentConfirmation confirmation = data.getParcelableExtra(PaymentActivity.EXTRA_RESULT_CONFIRMATION);\r\n                if (confirmation != null) {\r\n                    try {\r\n                        String paymentDetails = confirmation.toJSONObject().toString(4);\r\n                        completePayment(paymentDetails);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                } else if (resultCode == Activity.RESULT_CANCELED) {\r\n                    new ToastMsg(this).toastIconError(\"Cancel\");\r\n                }\r\n            }\r\n\r\n        }else if (resultCode == PaymentActivity.RESULT_EXTRAS_INVALID) {\r\n            new ToastMsg(this).toastIconError(\"Invalid\");\r\n        }\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n    }\r\n\r\n    private void completePayment(String paymentDetails) {\r\n        try {\r\n            JSONObject jsonObject = new JSONObject(paymentDetails);\r\n            sendDataToServer(jsonObject.getJSONObject(\"response\"));\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void sendDataToServer(JSONObject response) {\r\n        try {\r\n            String payId = response.getString(\"id\");\r\n            final String state = response.getString(\"state\");\r\n            final String userId = PreferenceUtils.getUserId(PurchasePlanActivity.this);\r\n\r\n            Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n            PaymentApi paymentApi = retrofit.create(PaymentApi.class);\r\n            Call<ResponseBody> call = paymentApi.savePayment(Config.API_KEY, packageItem.getPlanId(), userId, packageItem.getPrice(),\r\n                    payId, \"Paypal\");\r\n\r\n            call.enqueue(new Callback<ResponseBody>() {\r\n                @Override\r\n                public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n                    if (response.code() == 200) {\r\n\r\n                        updateActiveStatus(userId);\r\n\r\n                    } else {\r\n                        new ToastMsg(PurchasePlanActivity.this).toastIconError(getString(R.string.something_went_wrong));\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<ResponseBody> call, Throwable t) {\r\n                    new ToastMsg(PurchasePlanActivity.this).toastIconError(getString(R.string.something_went_wrong));\r\n                    t.printStackTrace();\r\n                    Log.e(\"PAYMENT\", \"error: \" + t.getLocalizedMessage());\r\n                }\r\n\r\n            });\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void updateActiveStatus(String userId) {\r\n        Retrofit retrofit = RetrofitClient.getRetrofitInstance();\r\n        SubscriptionApi subscriptionApi = retrofit.create(SubscriptionApi.class);\r\n        Call<ActiveStatus> call = subscriptionApi.getActiveStatus(Config.API_KEY, userId);\r\n        call.enqueue(new Callback<ActiveStatus>() {\r\n            @Override\r\n            public void onResponse(Call<ActiveStatus> call, Response<ActiveStatus> response) {\r\n                if (response.code() == 200) {\r\n                    ActiveStatus activiStatus = response.body();\r\n                    saveActiveStatus(activiStatus);\r\n                } else {\r\n                    new ToastMsg(PurchasePlanActivity.this).toastIconError(\"Payment info not save to the own server. something went wrong.\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ActiveStatus> call, Throwable t) {\r\n                new ToastMsg(PurchasePlanActivity.this).toastIconError(t.getMessage());\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void saveActiveStatus(ActiveStatus activeStatus) {\r\n        DatabaseHelper db = new DatabaseHelper(PurchasePlanActivity.this);\r\n        if (db.getActiveStatusCount() > 1) {\r\n            db.deleteAllActiveStatusData();\r\n        }\r\n        if (db.getActiveStatusCount() == 0) {\r\n            db.insertActiveStatusData(activeStatus);\r\n        } else {\r\n            db.updateActiveStatus(activeStatus, 1);\r\n        }\r\n        new ToastMsg(PurchasePlanActivity.this).toastIconSuccess(getResources().getString(R.string.payment_success));\r\n\r\n        /*Intent intent = new Intent(PurchasePlanActivity.this, PapalPaymentActivity.class);\r\n        intent.putExtra(\"state\", state);\r\n        intent.putExtra(\"amount\", packageItem.getPrice());\r\n        startActivity(intent);\r\n*/\r\n\r\n        finish();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        stopService(new Intent(this, PayPalService.class));\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void processPaypalPayment(Package packageItem) {\r\n        String[] paypalAcceptedList = getResources().getStringArray(R.array.paypal_currency_list);\r\n        if (Arrays.asList(paypalAcceptedList).contains(ApiResources.CURRENCY)){\r\n            PayPalPayment payPalPayment = new PayPalPayment((new BigDecimal(String.valueOf(packageItem.getPrice()))),\r\n                    ApiResources.CURRENCY,\r\n                    \"Payment for Package\",\r\n                    PayPalPayment.PAYMENT_INTENT_SALE);\r\n\r\n            Log.e(\"Payment\", \"currency: \" + ApiResources.CURRENCY);\r\n            Intent intent = new Intent(this, PaymentActivity.class);\r\n            intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);\r\n            intent.putExtra(PaymentActivity.EXTRA_PAYMENT, payPalPayment);\r\n            startActivityForResult(intent, PAYPAL_REQUEST_CODE);\r\n        }else {\r\n            PaymentConfig paymentConfig = new DatabaseHelper(PurchasePlanActivity.this).getConfigurationData().getPaymentConfig();\r\n            double exchangeRate = Double.parseDouble(paymentConfig.getExchangeRate());\r\n            double price = Double.parseDouble(packageItem.getPrice());\r\n            double priceInUSD = (double) price / exchangeRate;\r\n            PayPalPayment payPalPayment = new PayPalPayment((new BigDecimal(String.valueOf(priceInUSD))),\r\n                    \"USD\",\r\n                    \"Payment for Package\",\r\n                    PayPalPayment.PAYMENT_INTENT_SALE);\r\n            Intent intent = new Intent(this, PaymentActivity.class);\r\n            intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);\r\n            intent.putExtra(PaymentActivity.EXTRA_PAYMENT, payPalPayment);\r\n            startActivityForResult(intent, PAYPAL_REQUEST_CODE);\r\n        }\r\n    }\r\n\r\n    private void initView() {\r\n\r\n        noTv = findViewById(R.id.no_tv);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        packageRv = findViewById(R.id.pacakge_rv);\r\n        closeIv = findViewById(R.id.close_iv);\r\n    }\r\n\r\n    @Override\r\n    public void onItemClick(Package pac) {\r\n        packageItem = pac;\r\n\r\n        paymentBottomShitDialog = new PaymentBottomShitDialog();\r\n        paymentBottomShitDialog.show(getSupportFragmentManager(), \"PaymentBottomShitDialog\");\r\n    }\r\n\r\n    @Override\r\n    public void onBottomShitClick(String paymentMethodName) {\r\n        if (paymentMethodName.equals(PaymentBottomShitDialog.PAYPAL)) {\r\n           processPaypalPayment(packageItem);\r\n\r\n        } else if (paymentMethodName.equals(PaymentBottomShitDialog.STRIP)) {\r\n            Intent intent = new Intent(PurchasePlanActivity.this, StripePaymentActivity.class);\r\n            intent.putExtra(\"package\", packageItem);\r\n            intent.putExtra(\"currency\", currency);\r\n            startActivity(intent);\r\n\r\n        }else if (paymentMethodName.equalsIgnoreCase(PaymentBottomShitDialog.RAZOR_PAY)){\r\n            Intent intent = new Intent(PurchasePlanActivity.this, RazorPayActivity.class);\r\n            intent.putExtra(\"package\", packageItem);\r\n            intent.putExtra(\"currency\", currency);\r\n            startActivity(intent);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/tvseries/koreandramaengsub/freemovieapp/PurchasePlanActivity.java	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ app/src/main/java/tvseries/koreandramaengsub/freemovieapp/PurchasePlanActivity.java	(date 1612171154528)
@@ -1,6 +1,8 @@
 package tvseries.koreandramaengsub.freemovieapp;
 
 import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -9,12 +11,23 @@
 import android.widget.ImageView;
 import android.widget.ProgressBar;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.paymentwall.mycardadapter.PsMyCard;
+import com.paymentwall.pwunifiedsdk.brick.core.Brick;
+import com.paymentwall.pwunifiedsdk.core.PaymentSelectionActivity;
+import com.paymentwall.pwunifiedsdk.core.UnifiedRequest;
+import com.paymentwall.pwunifiedsdk.mobiamo.core.MobiamoPayment;
+import com.paymentwall.pwunifiedsdk.mobiamo.core.MobiamoResponse;
+import com.paymentwall.pwunifiedsdk.mobiamo.utils.Const;
+import com.paymentwall.pwunifiedsdk.object.ExternalPs;
+import com.paymentwall.pwunifiedsdk.util.Key;
+import com.paymentwall.pwunifiedsdk.util.ResponseCode;
 import com.paypal.android.sdk.payments.PayPalConfiguration;
 import com.paypal.android.sdk.payments.PayPalPayment;
 import com.paypal.android.sdk.payments.PayPalService;
@@ -50,6 +63,8 @@
 import retrofit2.Response;
 import retrofit2.Retrofit;
 
+import static com.paymentwall.pwunifiedsdk.mobiamo.core.MobiamoDialogActivity.MOBIAMO_REQUEST_CODE;
+
 public class PurchasePlanActivity extends AppCompatActivity implements PackageAdapter.OnItemClickListener, PaymentBottomShitDialog.OnBottomShitClickListener {
 
     private static final String TAG = PurchasePlanActivity.class.getSimpleName();
@@ -65,11 +80,13 @@
     private boolean isDark;
 
     private static PayPalConfiguration config = new PayPalConfiguration()
-            .environment(PayPalConfiguration.ENVIRONMENT_SANDBOX)
+            .environment(PayPalConfiguration.ENVIRONMENT_PRODUCTION)
             .clientId(ApiResources.PAYPAL_CLIENT_ID);
     private Package packageItem;
     private PaymentBottomShitDialog paymentBottomShitDialog;
 
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         RtlUtils.setScreenDirection(this);
@@ -159,6 +176,22 @@
                 }
             }
 
+        }else if(requestCode==PaymentSelectionActivity.REQUEST_CODE){
+            if (resultCode == ResponseCode.ERROR) {
+                Toast.makeText(this, "ERROR", Toast.LENGTH_LONG).show();
+            } else if (resultCode == ResponseCode.FAILED) {
+                Toast.makeText(this, "FAILED", Toast.LENGTH_LONG).show();
+            } else if (resultCode == ResponseCode.CANCEL) {
+                Toast.makeText(this, "CANCEL", Toast.LENGTH_LONG).show();
+            } else if (resultCode == ResponseCode.SUCCESSFUL) {
+                Toast.makeText(this, "SUCCESSFUL", Toast.LENGTH_LONG).show();
+                if(data!=null) {
+                    MobiamoResponse response = (MobiamoResponse) data.getSerializableExtra(Const.KEY.RESPONSE_MESSAGE);
+                    if (response != null && response.isCompleted()) {
+                        // Do something with the response
+                    }
+                }
+            }
         }else if (resultCode == PaymentActivity.RESULT_EXTRAS_INVALID) {
             new ToastMsg(this).toastIconError("Invalid");
         }
@@ -294,6 +327,55 @@
         }
     }
 
+    private void processMobiamoPayment(Package packageItem) {
+        PaymentConfig paymentConfig = new DatabaseHelper(PurchasePlanActivity.this).getConfigurationData().getPaymentConfig();
+        double exchangeRate = Double.parseDouble(paymentConfig.getExchangeRate());
+        double price = Double.parseDouble(packageItem.getPrice());
+        double priceInUSD = (double) price / exchangeRate;
+        final String userId = PreferenceUtils.getUserId(PurchasePlanActivity.this);
+
+        UnifiedRequest request = new UnifiedRequest();
+        request.setPwProjectKey("35b78a1fae7fcf4117b9dd5712d85cf9");//project key
+        request.setPwSecretKey("f2156268111a290b38b18eb9656e89b2");//PW_SECRET_KEY
+        request.setAmount(priceInUSD);
+        request.setCurrency("USD");
+        request.setItemName(packageItem.getName());
+        request.setItemId(packageItem.getPlanId());
+        request.setUserId(userId);
+        request.setSignVersion(3);
+        request.setItemResID(1);
+        request.setTimeout(30000);
+
+        PsMyCard myCard = new PsMyCard();
+        ExternalPs myCardPs = new ExternalPs("myCard", "MyCard", R.drawable.ic_subscriptions_black_24dp, myCard);
+
+        request.addPwLocal();
+        request.addMint();
+        request.addMobiamo();
+        request.add(myCardPs);
+
+        request.addBrick();
+        request.enableFooter();
+        BroadcastReceiver receiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                if (intent.getAction().equalsIgnoreCase(getPackageName() + Brick.BROADCAST_FILTER_MERCHANT)) {
+                    String brickToken = intent.getStringExtra(Brick.KEY_BRICK_TOKEN);
+                    String userEmail = intent.getStringExtra(Brick.KEY_BRICK_EMAIL);
+                    String cardHolderName = intent.getStringExtra(Brick.KEY_BRICK_CARDHOLDER);
+                    //process your business logic
+
+                }
+            }
+        };
+
+
+        Intent intent = new Intent(getApplicationContext(), PaymentSelectionActivity.class);
+        intent.putExtra(Key.REQUEST_MESSAGE, request);
+        startActivityForResult(intent, PaymentSelectionActivity.REQUEST_CODE);
+
+    }
+
     private void initView() {
 
         noTv = findViewById(R.id.no_tv);
@@ -313,21 +395,22 @@
     @Override
     public void onBottomShitClick(String paymentMethodName) {
         if (paymentMethodName.equals(PaymentBottomShitDialog.PAYPAL)) {
-           processPaypalPayment(packageItem);
-
+            processPaypalPayment(packageItem);
+            //processMobiamoPayment(packageItem);
         } else if (paymentMethodName.equals(PaymentBottomShitDialog.STRIP)) {
             Intent intent = new Intent(PurchasePlanActivity.this, StripePaymentActivity.class);
             intent.putExtra("package", packageItem);
             intent.putExtra("currency", currency);
             startActivity(intent);
-
         }else if (paymentMethodName.equalsIgnoreCase(PaymentBottomShitDialog.RAZOR_PAY)){
             Intent intent = new Intent(PurchasePlanActivity.this, RazorPayActivity.class);
             intent.putExtra("package", packageItem);
             intent.putExtra("currency", currency);
             startActivity(intent);
+        }else if (paymentMethodName.equalsIgnoreCase(PaymentBottomShitDialog.MOBIAMO_PAY)){
+            processMobiamoPayment(packageItem);
         }
     }
 
 
-}
+}
\ No newline at end of file
Index: app/.cxx/cmake/debug/x86/cmake_server_log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.cxx/cmake/debug/x86/cmake_server_log.txt	(date 1612110423095)
+++ app/.cxx/cmake/debug/x86/cmake_server_log.txt	(date 1612110423095)
@@ -0,0 +1,350 @@
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"supportedProtocolVersions":[{"isExperimental":true,"major":1,"minor":1}],"type":"hello"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {
+  "type": "handshake",
+  "cookie": "gradle-cmake-cookie",
+  "protocolVersion": {
+    "isExperimental": true,
+    "major": 1,
+    "minor": 1
+  },
+  "sourceDirectory": "C:/Users/khaih/StudioProjects/animeApp/app/src/main/jni",
+  "buildDirectory": "C:/Users/khaih/StudioProjects/animeApp/app/.cxx/cmake/debug/x86",
+  "generator": "Ninja"
+}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"gradle-cmake-cookie","inReplyTo":"handshake","type":"reply"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {
+  "type": "configure",
+  "cacheArguments": [
+    "",
+    "-DCMAKE_FIND_ROOT_PATH\u003dC:\\Users\\khaih\\StudioProjects\\animeApp\\app\\.cxx\\cmake\\debug\\prefab\\x86\\prefab",
+    "-DCMAKE_BUILD_TYPE\u003dDebug",
+    "-DCMAKE_TOOLCHAIN_FILE\u003dC:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\ndk-bundle\\build\\cmake\\android.toolchain.cmake",
+    "-DANDROID_ABI\u003dx86",
+    "-DANDROID_NDK\u003dC:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\ndk-bundle",
+    "-DANDROID_PLATFORM\u003dandroid-21",
+    "-DCMAKE_ANDROID_ARCH_ABI\u003dx86",
+    "-DCMAKE_ANDROID_NDK\u003dC:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\ndk-bundle",
+    "-DCMAKE_EXPORT_COMPILE_COMMANDS\u003dON",
+    "-DCMAKE_LIBRARY_OUTPUT_DIRECTORY\u003dC:\\Users\\khaih\\StudioProjects\\animeApp\\app\\build\\intermediates\\cmake\\debug\\obj\\x86",
+    "-DCMAKE_MAKE_PROGRAM\u003dC:\\Users\\khaih\\AppData\\Local\\Android\\Sdk\\cmake\\3.10.2.4988404\\bin\\ninja.exe",
+    "-DCMAKE_SYSTEM_NAME\u003dAndroid",
+    "-DCMAKE_SYSTEM_VERSION\u003d21"
+  ]
+}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe
+CMAKE SERVER: Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":33,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe -- works","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe -- works
+CMAKE SERVER: Check for working C compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe -- works
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compiler ABI info","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting C compiler ABI info
+CMAKE SERVER: Detecting C compiler ABI info
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":65,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compiler ABI info - done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting C compiler ABI info - done
+CMAKE SERVER: Detecting C compiler ABI info - done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compile features","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting C compile features
+CMAKE SERVER: Detecting C compile features
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":96,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":126,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":155,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting C compile features - done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting C compile features - done
+CMAKE SERVER: Detecting C compile features - done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe
+CMAKE SERVER: Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":184,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe -- works","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe -- works
+CMAKE SERVER: Check for working CXX compiler: C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe -- works
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compiler ABI info","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting CXX compiler ABI info
+CMAKE SERVER: Detecting CXX compiler ABI info
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":211,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compiler ABI info - done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting CXX compiler ABI info - done
+CMAKE SERVER: Detecting CXX compiler ABI info - done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compile features","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting CXX compile features
+CMAKE SERVER: Detecting CXX compile features
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":237,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":262,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":287,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":311,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Detecting CXX compile features - done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Detecting CXX compile features - done
+CMAKE SERVER: Detecting CXX compile features - done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","progressCurrent":1000,"progressMaximum":1000,"progressMessage":"Configuring","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","message":"Configuring done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Configuring done
+CMAKE SERVER: Configuring done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"configure","type":"reply"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"type":"compute"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"compute","progressCurrent":1000,"progressMaximum":1000,"progressMessage":"Generating","progressMinimum":0,"type":"progress"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"compute","message":"Generating done","type":"message"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: Generating done
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"cookie":"","inReplyTo":"compute","type":"reply"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"type":"cmakeInputs"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"buildFiles":[{"isCMake":true,"isTemporary":false,"sources":["C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineSystem.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystem.cmake.in","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystemSpecificInitialize.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Initialize.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine-C.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android/Determine-Compiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeFindBinUtils.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-FindBinUtils.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompiler.cmake.in","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCXXCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Determine-CXX.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android/Determine-Compiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeFindBinUtils.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-FindBinUtils.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompiler.cmake.in","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeSystemSpecificInformation.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeGenericSystem.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Linux.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/UnixPaths.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCInformation.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/GNU.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang-C.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCompilerCommon.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompilerABI.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeParseImplicitLinkInfo.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompilerABI.c","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompileFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Internal/FeatureTesting.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-C-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCCompiler.cmake.in","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXInformation.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang-CXX.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-Clang.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCXXCompiler.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeTestCompilerCommon.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompilerABI.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeParseImplicitLinkInfo.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeDetermineCompileFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Internal/FeatureTesting.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-FeatureTests.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Compiler/Clang-CXX-TestableFeatures.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/CMakeCXXCompiler.cmake.in"]},{"isCMake":false,"isTemporary":false,"sources":["CMakeLists.txt","C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/build/cmake/android.toolchain.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/build/cmake/platforms.cmake","C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/build/cmake/android.toolchain.cmake"]},{"isCMake":false,"isTemporary":true,"sources":["../../../.cxx/cmake/debug/x86/CMakeFiles/3.10.2/CMakeSystem.cmake","../../../.cxx/cmake/debug/x86/CMakeFiles/3.10.2/CMakeCCompiler.cmake","../../../.cxx/cmake/debug/x86/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.c","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.c","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.c","../../../.cxx/cmake/debug/x86/CMakeFiles/3.10.2/CMakeCCompiler.cmake","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.cxx","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.cxx","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.cxx","../../../.cxx/cmake/debug/x86/CMakeFiles/feature_tests.cxx","../../../.cxx/cmake/debug/x86/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"]}],"cmakeRootDirectory":"C:/Users/khaih/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10","cookie":"","inReplyTo":"cmakeInputs","sourceDirectory":"C:/Users/khaih/StudioProjects/animeApp/app/src/main/jni","type":"reply"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"type":"codemodel"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
+CMAKE SERVER: 
+
+CMAKE SERVER: [== "CMake Server" ==[
+
+CMAKE SERVER: {"configurations":[{"name":"Debug","projects":[{"buildDirectory":"C:/Users/khaih/StudioProjects/animeApp/app/.cxx/cmake/debug/x86","name":"Project","sourceDirectory":"C:/Users/khaih/StudioProjects/animeApp/app/src/main/jni","targets":[{"artifacts":["C:/Users/khaih/StudioProjects/animeApp/app/build/intermediates/cmake/debug/obj/x86/libapi_config.so"],"buildDirectory":"C:/Users/khaih/StudioProjects/animeApp/app/.cxx/cmake/debug/x86","fileGroups":[{"compileFlags":"-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mstackrealign -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -O0 -fno-limit-debug-info  -fPIC  ","defines":["api_config_EXPORTS"],"isGenerated":false,"language":"CXX","sources":["api_config.cpp"]}],"fullName":"libapi_config.so","linkFlags":"-Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_real.a -Wl,--exclude-libs,libatomic.a -static-libstdc++ -Wl,--build-id -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments","linkLibraries":"-llog -latomic -lm","linkerLanguage":"CXX","name":"api_config","sourceDirectory":"C:/Users/khaih/StudioProjects/animeApp/app/src/main/jni","sysroot":"C:/Users/khaih/AppData/Local/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/sysroot","type":"SHARED_LIBRARY"}]}]}],"cookie":"","inReplyTo":"codemodel","type":"reply"}
+
+CMAKE SERVER: ]== "CMake Server" ==]
+
Index: .idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_1_0.xml	(date 1612107170565)
+++ .idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_1_0.xml	(date 1612107170565)
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-common:2.1.0">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.1.0/c67e7807d9cd6c329b9d0218b2ec4e505dd340b7/lifecycle-common-2.1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.1.0/ff1470ebad448355d3722c637c85d5174b584f38/lifecycle-common-2.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules/app/animeApp.app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module external.linked.project.id=\":app\" external.linked.project.path=\"$MODULE_DIR$/../../../app\" external.root.project.path=\"$MODULE_DIR$/../../..\" external.system.id=\"GRADLE\" external.system.module.group=\"animeApp\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"android-gradle\" name=\"Android-Gradle\">\r\n      <configuration>\r\n        <option name=\"GRADLE_PROJECT_PATH\" value=\":app\" />\r\n        <option name=\"LAST_SUCCESSFUL_SYNC_AGP_VERSION\" value=\"4.1.1\" />\r\n        <option name=\"LAST_KNOWN_AGP_VERSION\" value=\"4.1.1\" />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"android\" name=\"Android\">\r\n      <configuration>\r\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\r\n        <option name=\"ASSEMBLE_TASK_NAME\" value=\"assembleDebug\" />\r\n        <option name=\"COMPILE_JAVA_TASK_NAME\" value=\"compileDebugSources\" />\r\n        <afterSyncTasks>\r\n          <task>generateDebugSources</task>\r\n        </afterSyncTasks>\r\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\r\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\r\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\r\n        <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/main/res;file://$MODULE_DIR$/../../../app/src/debug/res;file://$MODULE_DIR$/../../../app/build/generated/res/google-services/debug;file://$MODULE_DIR$/../../../app/build/generated/res/rs/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" />\r\n        <option name=\"TEST_RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/androidTest/res;file://$MODULE_DIR$/../../../app/src/androidTestDebug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/androidTest/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\" />\r\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debug/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debugUnitTest/classes\" />\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$/../../../app\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/androidTest/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/test/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/res\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/res/google-services/debug\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/.gradle\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/build\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Android API 30 Platform\" jdkType=\"Android SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.room:room-common:2.2.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.collection:collection-ktx:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.collection:collection:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-common:2.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-common:2.3.0-rc01\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.jakewharton:butterknife-annotations:10.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout-solver:2.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal:protobuf-models:1.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack:protobuf-java:1.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.guava:listenablefuture:1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack.amazon:sdk:5.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack.chartboost:sdk:7.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.retrofit2:converter-gson:2.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.retrofit2:retrofit:2.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.okhttp3:logging-interceptor:4.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.okhttp3:okhttp:4.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.okio:okio:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-parcelize-runtime:1.4.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.4.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib:1.4.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains:annotations:13.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub.volley:mopub-volley:2.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.stripe:stripe-java:5.36.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.code.gson:gson:2.8.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: io.reactivex.rxjava2:rxjava:2.2.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.reactivestreams:reactive-streams:1.0.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.dagger:dagger:2.24\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: javax.inject:javax.inject:1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.parse.bolts:bolts-android:1.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.parse.bolts:bolts-applinks:1.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.parse.bolts:bolts-tasks:1.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.zxing:core:3.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.bumptech.glide:disklrucache:4.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.bumptech.glide:annotations:4.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.bouncycastle:bcprov-jdk15to18:1.68\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.nimbusds:nimbus-jose-jwt:9.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.stephenc.jcip:jcip-annotations:1.0-1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.databinding:databinding-common:3.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.greenrobot:eventbus:3.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.stripe:stripe-android:16.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout:2.0.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:inmobi:9.1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.stripe:stripe-3ds2-android:5.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.material:material:1.2.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.crystal:crystalrangeseekbar:1.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:extension-cast:2.7.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.libraries.cast.companionlibrary:ccl:2.8.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.ads.consent:consent-library:1.0.8@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-android-sdk:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-login:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-gamingservices:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-share:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-common:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-cast-framework:15.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-cast:15.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.mediarouter:mediarouter:1.0.0-alpha5@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:mopub:5.15.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub:mopub-sdk:5.15.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub:mopub-sdk-banner:5.15.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub:mopub-sdk-fullscreen:5.15.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub:mopub-sdk-native-static:5.15.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mopub:mopub-sdk-base:5.15.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2-widget:1.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:applovin:9.14.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:unity:3.5.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:adcolony:4.3.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:ironsource:7.0.3.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:facebook:6.2.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-extensions:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.JakeWharton:ViewPagerIndicator:2.4.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads:sdk:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk:core:2.7.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:inmobi:2.7.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:my_target:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.legacy:legacy-support-v4:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.firebaseui:firebase-ui-auth:7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-auth:20.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.bumptech.glide:glide:4.11.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.onesignal:OneSignal:3.15.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-messaging:21.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.ads.mediation:tapjoy:12.7.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:a4g:2.7.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:admob:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:amazon_ads:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:ironsource:2.7.1.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:ogury:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:tapjoy:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-ads:19.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:facebook:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:audience-network-sdk:6.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:applovin:2.7.1.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:chartboost:2.7.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.applovin:applovin-sdk:9.14.5@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-analytics:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement-api:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-gass:19.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement-sdk:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement-impl:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-ads-identifier:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.tapjoy:tapjoy-android-sdk:12.7.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-location:17.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-iid:21.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-cloud-messaging:16.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-stats:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-datatransport:17.0.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-installations:16.3.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-auth-interop:19.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-common:19.4.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-installations-interop:16.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-auth:19.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-auth-api-phone:17.4.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-safetynet:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-wallet:18.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-iid-interop:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-auth-base:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-identity:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-maps:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-flags:15.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-base:17.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-tasks:17.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-measurement-connector:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-ads-lite:19.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-places-placereport:17.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement-sdk-api:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-measurement-base:18.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-basement:17.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager2:viewpager2:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.fragment:fragment-ktx:1.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.fragment:fragment:1.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.activity:activity-ktx:1.2.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.activity:activity:1.2.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.room:room-rxjava2:2.2.5@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.legacy:legacy-support-core-ui:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-applinks:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-messenger:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.android:facebook-core:8.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.palette:palette:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.legacy:legacy-support-core-utils:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.loader:loader:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat-resources:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable-animated:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.browser:browser:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cardview:cardview:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.my.target:mytarget-sdk:5.5.6@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.recyclerview:recyclerview:1.2.0-alpha06@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.facebook.shimmer:shimmer:0.4.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.picasso:picasso:2.71828@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.work:work-runtime:2.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.hootsuite.android:nachos:1.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.drawerlayout:drawerlayout:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2-session:1.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2-player:1.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2:1.0.0-alpha02@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2-common:1.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media:media:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.coordinatorlayout:coordinatorlayout:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.transition:transition:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager:viewpager:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.slidingpanelayout:slidingpanelayout:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.customview:customview:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.jakewharton:butterknife:10.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.jakewharton:butterknife-runtime:10.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.swiperefreshlayout:swiperefreshlayout:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.asynclayoutinflater:asynclayoutinflater:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.core:core-ktx:1.3.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.core:core:1.3.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-service:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.IslamKhSh:CardSlider:0.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.databinding:databinding-adapters:3.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.databinding:databinding-runtime:3.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-process:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-runtime:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.room:room-runtime:2.2.5@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.sqlite:sqlite-framework:2.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.sqlite:sqlite:2.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-ktx:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-runtime:2.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.versionedparcelable:versionedparcelable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.datatransport:transport-backend-cct:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.datatransport:transport-runtime:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-components:16.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.firebase:firebase-encoders-json:16.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.exifinterface:exifinterface:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.bumptech.glide:gifdecoder:4.11.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.databinding:viewbinding:4.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-core-ktx:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-core:2.3.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.savedstate:savedstate-ktx:1.1.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.savedstate:savedstate:1.1.0-rc01@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.documentfile:documentfile:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.print:print:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.interpolator:interpolator:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack:consent-models:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:yandex:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.yandex.android:mobileads:2.141@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation-experimental:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.play:core:1.8.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack:iab:0.5.6@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:appodeal:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:appodealx:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:mraid:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:nast:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:vast:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.gms:play-services-ads-base:19.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:adcolony:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.adcolony:sdk:4.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.inmobi.monetization:inmobi-ads:9.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.paypal.sdk:paypal-android-sdk:2.16.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:inner-active:2.7.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.ironsource.sdk:mediationsdk:7.0.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:exoplayer-core:2.8.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:exoplayer-hls:2.8.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.explorestack.ogury:sdk:4.7.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:smaato:2.7.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.smaato.android.sdk:smaato-sdk:21.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.smaato.android.sdk:smaato-sdk-banner:21.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.smaato.android.sdk:smaato-sdk-interstitial:21.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.smaato.android.sdk:smaato-sdk-rewarded-ads:21.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.smaato.android.sdk:module-core:21.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:startapp:2.7.1.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.startapp:inapp-sdk:4.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.appodeal.ads.sdk.networks:unity_ads:2.7.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.unity3d.ads:unity-ads:3.5.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.yandex.android:mobmetricalib:3.13.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.media2:media2-exoplayer:1.0.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: io.reactivex.rxjava2:rxandroid:2.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.Piashsarker:AndroidAppUpdateLibrary:1.0.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.datatransport:transport-api:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.android.installreferrer:installreferrer:1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android:flexbox:0.3.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.makeramen:roundedimageview:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.orhanobut:dialogplus:1.11@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.balysv:material-ripple:1.0.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: jp.wasabeef:picasso-transformations:2.2.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.android.volley:volley:1.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: jp.wasabeef:glide-transformations:4.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.daimajia.easing:library:2.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.daimajia.androidanimations:library:2.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mindorks.android:prdownloader:0.6.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mani:ThinDownloadManager:1.4.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: io.card:android-sdk:5.5.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.razorpay:checkout:1.5.12@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.armcha:SpaceNavigationView:1.6.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.duolingo.open:rtl-viewpager:2.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.mikhaellopez:circularimageview:3.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: de.hdodenhof:circleimageview:3.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:exoplayer-dash:2.7.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:exoplayer-ui:2.7.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.exoplayer:extension-rtmp:2.7.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.HaarigerHarald:android-youtubeExtractor:master-SNAPSHOT@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.ixiDev:GDPRChecker:v0.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.github.volsahin:bottomify-navigation-view:1.0.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-integration:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-library:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.squareup:javawriter:2.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.code.findbugs:jsr305:2.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.code.gson:gson:2.8.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.ext:junit:1.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-core:3.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:runner:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:core:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:monitor:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-idling-resource:3.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: junit:junit:4.13.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.android.gms:play-services-cast-framework:11.4.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.android.gms:play-services-cast:11.4.2@aar\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/app/animeApp.app.iml	(revision 879ba3e305d013a3922e5efe51ede5a47a35f65e)
+++ .idea/modules/app/animeApp.app.iml	(date 1612169265836)
@@ -24,6 +24,11 @@
         <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
       </configuration>
     </facet>
+    <facet type="native-android-gradle" name="Native-Android-Gradle">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug-x86" />
+      </configuration>
+    </facet>
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
     <output url="file://$MODULE_DIR$/../../../app/build/intermediates/javac/debug/classes" />
@@ -38,6 +43,9 @@
       <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/res/google-services/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/jni" isTestSource="false" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../app/.cxx" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../app/.externalNativeBuild" />
       <excludeFolder url="file://$MODULE_DIR$/../../../app/.gradle" />
       <excludeFolder url="file://$MODULE_DIR$/../../../app/build" />
     </content>
@@ -84,14 +92,14 @@
     <orderEntry type="library" name="Gradle: com.github.bumptech.glide:disklrucache:4.11.0" level="project" />
     <orderEntry type="library" name="Gradle: com.github.bumptech.glide:annotations:4.11.0" level="project" />
     <orderEntry type="library" name="Gradle: org.bouncycastle:bcprov-jdk15to18:1.68" level="project" />
-    <orderEntry type="library" name="Gradle: com.nimbusds:nimbus-jose-jwt:9.4" level="project" />
+    <orderEntry type="library" name="Gradle: com.nimbusds:nimbus-jose-jwt:9.4.2" level="project" />
     <orderEntry type="library" name="Gradle: com.github.stephenc.jcip:jcip-annotations:1.0-1" level="project" />
     <orderEntry type="library" name="Gradle: androidx.databinding:databinding-common:3.5.0" level="project" />
     <orderEntry type="library" name="Gradle: org.greenrobot:eventbus:3.0.0" level="project" />
-    <orderEntry type="library" name="Gradle: com.stripe:stripe-android:16.2.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.stripe:stripe-android:16.2.1@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.constraintlayout:constraintlayout:2.0.4@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.google.ads.mediation:inmobi:9.1.1.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: com.stripe:stripe-3ds2-android:5.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.stripe:stripe-3ds2-android:5.1.1@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.google.android.material:material:1.2.1@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.crystal:crystalrangeseekbar:1.1.3@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.google.android.exoplayer:extension-cast:2.7.3@aar" level="project" />
@@ -178,8 +186,8 @@
     <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-measurement-base:18.0.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-basement:17.3.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.viewpager2:viewpager2:1.0.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: androidx.fragment:fragment-ktx:1.3.0-rc01@aar" level="project" />
-    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.3.0-rc01@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.fragment:fragment-ktx:1.3.0-rc02@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.3.0-rc02@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.activity:activity-ktx:1.2.0-rc01@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-rc01@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.activity:activity:1.2.0-rc01@aar" level="project" />
@@ -243,7 +251,7 @@
     <orderEntry type="library" name="Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.exifinterface:exifinterface:1.0.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.github.bumptech.glide:gifdecoder:4.11.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: androidx.databinding:viewbinding:4.1.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.databinding:viewbinding:4.1.2@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata-core-ktx:2.3.0-rc01@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata-core:2.3.0-rc01@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.savedstate:savedstate-ktx:1.1.0-rc01@aar" level="project" />
@@ -311,6 +319,8 @@
     <orderEntry type="library" name="Gradle: com.github.HaarigerHarald:android-youtubeExtractor:master-SNAPSHOT@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.github.ixiDev:GDPRChecker:v0.2@aar" level="project" />
     <orderEntry type="library" name="Gradle: com.github.volsahin:bottomify-navigation-view:1.0.2@aar" level="project" />
+    <orderEntry type="library" name="Gradle: artifacts:paymentwall-android-sdk:unspecified" level="project" />
+    <orderEntry type="library" name="Gradle: artifacts:mycardadapter-release:unspecified" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.12" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-integration:1.3" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-library:1.3" level="project" />
@@ -327,5 +337,6 @@
     <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.13.1" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: com.google.android.gms:play-services-cast-framework:11.4.2@aar" level="project" />
     <orderEntry type="library" scope="TEST" name="Gradle: com.google.android.gms:play-services-cast:11.4.2@aar" level="project" />
+    <orderEntry type="module" module-name="animeApp.nativetemplates" />
   </component>
 </module>
\ No newline at end of file
